// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_12_campaign.proto

package com.ourpalm.tank.message;

public final class CAMP_MSG {
  private CAMP_MSG() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code PROTO_CAMP.CMD_TYPE}
   */
  public enum CMD_TYPE
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CMD_TYPE_CAMP = 12;</code>
     */
    CMD_TYPE_CAMP(0, 12),
    ;

    /**
     * <code>CMD_TYPE_CAMP = 12;</code>
     */
    public static final int CMD_TYPE_CAMP_VALUE = 12;


    public final int getNumber() { return value; }

    public static CMD_TYPE valueOf(int value) {
      switch (value) {
        case 12: return CMD_TYPE_CAMP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>() {
            public CMD_TYPE findValueByNumber(int number) {
              return CMD_TYPE.valueOf(number);
            }
          };

    private final int value;

    private CMD_TYPE(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_CAMP.CMD_TYPE)
  }

  /**
   * Protobuf enum {@code PROTO_CAMP.CMD_ID}
   */
  public enum CMD_ID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CTS_CAMP_READY = 1;</code>
     *
     * <pre>
     *资源加载完毕请求开始(空结构)
     * </pre>
     */
    CTS_CAMP_READY(0, 1),
    /**
     * <code>STC_CAMP_READY = 2;</code>
     *
     * <pre>
     *资源加载完毕返回
     * </pre>
     */
    STC_CAMP_READY(1, 2),
    /**
     * <code>STC_CAMP_OVER = 3;</code>
     *
     * <pre>
     *战斗结束
     * </pre>
     */
    STC_CAMP_OVER(2, 3),
    /**
     * <code>CTS_CAMP_LIST = 4;</code>
     *
     * <pre>
     *请求战役关卡列表
     * </pre>
     */
    CTS_CAMP_LIST(3, 4),
    /**
     * <code>STC_CAMP_LIST = 5;</code>
     *
     * <pre>
     *返回战役关卡列表
     * </pre>
     */
    STC_CAMP_LIST(4, 5),
    /**
     * <code>CTS_CAMP_EXIT = 6;</code>
     *
     * <pre>
     *离开战役(空消息)
     * </pre>
     */
    CTS_CAMP_EXIT(5, 6),
    /**
     * <code>CTS_CAMP_BOX = 7;</code>
     *
     * <pre>
     *请求战役奖励列表
     * </pre>
     */
    CTS_CAMP_BOX(6, 7),
    /**
     * <code>STC_CAMP_BOX = 8;</code>
     *
     * <pre>
     *返回战役奖励
     * </pre>
     */
    STC_CAMP_BOX(7, 8),
    /**
     * <code>CTS_CAMP_BOX_DRAW = 9;</code>
     *
     * <pre>
     *领取战役宝箱奖励
     * </pre>
     */
    CTS_CAMP_BOX_DRAW(8, 9),
    /**
     * <code>STC_CAMP_BOX_DRAW = 10;</code>
     *
     * <pre>
     *返回领取奖励结果
     * </pre>
     */
    STC_CAMP_BOX_DRAW(9, 10),
    ;

    /**
     * <code>CTS_CAMP_READY = 1;</code>
     *
     * <pre>
     *资源加载完毕请求开始(空结构)
     * </pre>
     */
    public static final int CTS_CAMP_READY_VALUE = 1;
    /**
     * <code>STC_CAMP_READY = 2;</code>
     *
     * <pre>
     *资源加载完毕返回
     * </pre>
     */
    public static final int STC_CAMP_READY_VALUE = 2;
    /**
     * <code>STC_CAMP_OVER = 3;</code>
     *
     * <pre>
     *战斗结束
     * </pre>
     */
    public static final int STC_CAMP_OVER_VALUE = 3;
    /**
     * <code>CTS_CAMP_LIST = 4;</code>
     *
     * <pre>
     *请求战役关卡列表
     * </pre>
     */
    public static final int CTS_CAMP_LIST_VALUE = 4;
    /**
     * <code>STC_CAMP_LIST = 5;</code>
     *
     * <pre>
     *返回战役关卡列表
     * </pre>
     */
    public static final int STC_CAMP_LIST_VALUE = 5;
    /**
     * <code>CTS_CAMP_EXIT = 6;</code>
     *
     * <pre>
     *离开战役(空消息)
     * </pre>
     */
    public static final int CTS_CAMP_EXIT_VALUE = 6;
    /**
     * <code>CTS_CAMP_BOX = 7;</code>
     *
     * <pre>
     *请求战役奖励列表
     * </pre>
     */
    public static final int CTS_CAMP_BOX_VALUE = 7;
    /**
     * <code>STC_CAMP_BOX = 8;</code>
     *
     * <pre>
     *返回战役奖励
     * </pre>
     */
    public static final int STC_CAMP_BOX_VALUE = 8;
    /**
     * <code>CTS_CAMP_BOX_DRAW = 9;</code>
     *
     * <pre>
     *领取战役宝箱奖励
     * </pre>
     */
    public static final int CTS_CAMP_BOX_DRAW_VALUE = 9;
    /**
     * <code>STC_CAMP_BOX_DRAW = 10;</code>
     *
     * <pre>
     *返回领取奖励结果
     * </pre>
     */
    public static final int STC_CAMP_BOX_DRAW_VALUE = 10;


    public final int getNumber() { return value; }

    public static CMD_ID valueOf(int value) {
      switch (value) {
        case 1: return CTS_CAMP_READY;
        case 2: return STC_CAMP_READY;
        case 3: return STC_CAMP_OVER;
        case 4: return CTS_CAMP_LIST;
        case 5: return STC_CAMP_LIST;
        case 6: return CTS_CAMP_EXIT;
        case 7: return CTS_CAMP_BOX;
        case 8: return STC_CAMP_BOX;
        case 9: return CTS_CAMP_BOX_DRAW;
        case 10: return STC_CAMP_BOX_DRAW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CMD_ID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CMD_ID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CMD_ID>() {
            public CMD_ID findValueByNumber(int number) {
              return CMD_ID.valueOf(number);
            }
          };

    private final int value;

    private CMD_ID(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_CAMP.CMD_ID)
  }

  public interface STC_CAMP_READY_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 readyTime = 1;
    /**
     * <code>required uint32 readyTime = 1;</code>
     *
     * <pre>
     *准备倒计时(单位:秒)
     * </pre>
     */
    boolean hasReadyTime();
    /**
     * <code>required uint32 readyTime = 1;</code>
     *
     * <pre>
     *准备倒计时(单位:秒)
     * </pre>
     */
    int getReadyTime();

    // required uint32 overTime = 2;
    /**
     * <code>required uint32 overTime = 2;</code>
     *
     * <pre>
     *比赛时长(单位:秒) -1:为不限时常
     * </pre>
     */
    boolean hasOverTime();
    /**
     * <code>required uint32 overTime = 2;</code>
     *
     * <pre>
     *比赛时长(单位:秒) -1:为不限时常
     * </pre>
     */
    int getOverTime();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.STC_CAMP_READY_MSG}
   *
   * <pre>
   *战役准备开始
   * </pre>
   */
  public static final class STC_CAMP_READY_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_CAMP_READY_MSGOrBuilder {
    // Use STC_CAMP_READY_MSG.newBuilder() to construct.
    private STC_CAMP_READY_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_CAMP_READY_MSG(boolean noInit) {}

    private static final STC_CAMP_READY_MSG defaultInstance;
    public static STC_CAMP_READY_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_CAMP_READY_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_CAMP_READY_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              readyTime_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              overTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_CAMP_READY_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_CAMP_READY_MSG>() {
      public STC_CAMP_READY_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_CAMP_READY_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_CAMP_READY_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 readyTime = 1;
    public static final int READYTIME_FIELD_NUMBER = 1;
    private int readyTime_;
    /**
     * <code>required uint32 readyTime = 1;</code>
     *
     * <pre>
     *准备倒计时(单位:秒)
     * </pre>
     */
    public boolean hasReadyTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 readyTime = 1;</code>
     *
     * <pre>
     *准备倒计时(单位:秒)
     * </pre>
     */
    public int getReadyTime() {
      return readyTime_;
    }

    // required uint32 overTime = 2;
    public static final int OVERTIME_FIELD_NUMBER = 2;
    private int overTime_;
    /**
     * <code>required uint32 overTime = 2;</code>
     *
     * <pre>
     *比赛时长(单位:秒) -1:为不限时常
     * </pre>
     */
    public boolean hasOverTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 overTime = 2;</code>
     *
     * <pre>
     *比赛时长(单位:秒) -1:为不限时常
     * </pre>
     */
    public int getOverTime() {
      return overTime_;
    }

    private void initFields() {
      readyTime_ = 0;
      overTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasReadyTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOverTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, readyTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, overTime_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, readyTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, overTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.STC_CAMP_READY_MSG}
     *
     * <pre>
     *战役准备开始
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        readyTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        overTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG build() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG result = new com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.readyTime_ = readyTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.overTime_ = overTime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG.getDefaultInstance()) return this;
        if (other.hasReadyTime()) {
          setReadyTime(other.getReadyTime());
        }
        if (other.hasOverTime()) {
          setOverTime(other.getOverTime());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReadyTime()) {
          
          return false;
        }
        if (!hasOverTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_READY_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 readyTime = 1;
      private int readyTime_ ;
      /**
       * <code>required uint32 readyTime = 1;</code>
       *
       * <pre>
       *准备倒计时(单位:秒)
       * </pre>
       */
      public boolean hasReadyTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 readyTime = 1;</code>
       *
       * <pre>
       *准备倒计时(单位:秒)
       * </pre>
       */
      public int getReadyTime() {
        return readyTime_;
      }
      /**
       * <code>required uint32 readyTime = 1;</code>
       *
       * <pre>
       *准备倒计时(单位:秒)
       * </pre>
       */
      public Builder setReadyTime(int value) {
        bitField0_ |= 0x00000001;
        readyTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 readyTime = 1;</code>
       *
       * <pre>
       *准备倒计时(单位:秒)
       * </pre>
       */
      public Builder clearReadyTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        readyTime_ = 0;
        
        return this;
      }

      // required uint32 overTime = 2;
      private int overTime_ ;
      /**
       * <code>required uint32 overTime = 2;</code>
       *
       * <pre>
       *比赛时长(单位:秒) -1:为不限时常
       * </pre>
       */
      public boolean hasOverTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 overTime = 2;</code>
       *
       * <pre>
       *比赛时长(单位:秒) -1:为不限时常
       * </pre>
       */
      public int getOverTime() {
        return overTime_;
      }
      /**
       * <code>required uint32 overTime = 2;</code>
       *
       * <pre>
       *比赛时长(单位:秒) -1:为不限时常
       * </pre>
       */
      public Builder setOverTime(int value) {
        bitField0_ |= 0x00000002;
        overTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 overTime = 2;</code>
       *
       * <pre>
       *比赛时长(单位:秒) -1:为不限时常
       * </pre>
       */
      public Builder clearOverTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        overTime_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.STC_CAMP_READY_MSG)
    }

    static {
      defaultInstance = new STC_CAMP_READY_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.STC_CAMP_READY_MSG)
  }

  public interface STC_CAMP_OVER_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool win = 1;
    /**
     * <code>required bool win = 1;</code>
     *
     * <pre>
     *是否胜利
     * </pre>
     */
    boolean hasWin();
    /**
     * <code>required bool win = 1;</code>
     *
     * <pre>
     *是否胜利
     * </pre>
     */
    boolean getWin();

    // optional bool first = 2;
    /**
     * <code>optional bool first = 2;</code>
     *
     * <pre>
     *是否首次获胜
     * </pre>
     */
    boolean hasFirst();
    /**
     * <code>optional bool first = 2;</code>
     *
     * <pre>
     *是否首次获胜
     * </pre>
     */
    boolean getFirst();

    // optional uint32 star = 3;
    /**
     * <code>optional uint32 star = 3;</code>
     *
     * <pre>
     *获得星的数量
     * </pre>
     */
    boolean hasStar();
    /**
     * <code>optional uint32 star = 3;</code>
     *
     * <pre>
     *获得星的数量
     * </pre>
     */
    int getStar();

    // optional uint32 iron = 4;
    /**
     * <code>optional uint32 iron = 4;</code>
     *
     * <pre>
     *铁块奖励数量
     * </pre>
     */
    boolean hasIron();
    /**
     * <code>optional uint32 iron = 4;</code>
     *
     * <pre>
     *铁块奖励数量
     * </pre>
     */
    int getIron();

    // repeated .PROTO_CAMP.CampGoodsItem items = 5;
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
     *
     * <pre>
     *物品奖励
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> 
        getItemsList();
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
     *
     * <pre>
     *物品奖励
     * </pre>
     */
    com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem getItems(int index);
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
     *
     * <pre>
     *物品奖励
     * </pre>
     */
    int getItemsCount();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.STC_CAMP_OVER_MSG}
   *
   * <pre>
   *比赛结束
   * </pre>
   */
  public static final class STC_CAMP_OVER_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_CAMP_OVER_MSGOrBuilder {
    // Use STC_CAMP_OVER_MSG.newBuilder() to construct.
    private STC_CAMP_OVER_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_CAMP_OVER_MSG(boolean noInit) {}

    private static final STC_CAMP_OVER_MSG defaultInstance;
    public static STC_CAMP_OVER_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_CAMP_OVER_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_CAMP_OVER_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              win_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              first_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              star_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              iron_ = input.readUInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                items_ = new java.util.ArrayList<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem>();
                mutable_bitField0_ |= 0x00000010;
              }
              items_.add(input.readMessage(com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_CAMP_OVER_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_CAMP_OVER_MSG>() {
      public STC_CAMP_OVER_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_CAMP_OVER_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_CAMP_OVER_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool win = 1;
    public static final int WIN_FIELD_NUMBER = 1;
    private boolean win_;
    /**
     * <code>required bool win = 1;</code>
     *
     * <pre>
     *是否胜利
     * </pre>
     */
    public boolean hasWin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool win = 1;</code>
     *
     * <pre>
     *是否胜利
     * </pre>
     */
    public boolean getWin() {
      return win_;
    }

    // optional bool first = 2;
    public static final int FIRST_FIELD_NUMBER = 2;
    private boolean first_;
    /**
     * <code>optional bool first = 2;</code>
     *
     * <pre>
     *是否首次获胜
     * </pre>
     */
    public boolean hasFirst() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool first = 2;</code>
     *
     * <pre>
     *是否首次获胜
     * </pre>
     */
    public boolean getFirst() {
      return first_;
    }

    // optional uint32 star = 3;
    public static final int STAR_FIELD_NUMBER = 3;
    private int star_;
    /**
     * <code>optional uint32 star = 3;</code>
     *
     * <pre>
     *获得星的数量
     * </pre>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 star = 3;</code>
     *
     * <pre>
     *获得星的数量
     * </pre>
     */
    public int getStar() {
      return star_;
    }

    // optional uint32 iron = 4;
    public static final int IRON_FIELD_NUMBER = 4;
    private int iron_;
    /**
     * <code>optional uint32 iron = 4;</code>
     *
     * <pre>
     *铁块奖励数量
     * </pre>
     */
    public boolean hasIron() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 iron = 4;</code>
     *
     * <pre>
     *铁块奖励数量
     * </pre>
     */
    public int getIron() {
      return iron_;
    }

    // repeated .PROTO_CAMP.CampGoodsItem items = 5;
    public static final int ITEMS_FIELD_NUMBER = 5;
    private java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> items_;
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
     *
     * <pre>
     *物品奖励
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
     *
     * <pre>
     *物品奖励
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.CAMP_MSG.CampGoodsItemOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
     *
     * <pre>
     *物品奖励
     * </pre>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
     *
     * <pre>
     *物品奖励
     * </pre>
     */
    public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
     *
     * <pre>
     *物品奖励
     * </pre>
     */
    public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItemOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private void initFields() {
      win_ = false;
      first_ = false;
      star_ = 0;
      iron_ = 0;
      items_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getItemsCount(); i++) {
        if (!getItems(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, win_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, first_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, star_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, iron_);
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(5, items_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, win_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, first_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, star_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, iron_);
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, items_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.STC_CAMP_OVER_MSG}
     *
     * <pre>
     *比赛结束
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        win_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        first_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        star_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        iron_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        items_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG build() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG result = new com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.win_ = win_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.first_ = first_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.star_ = star_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.iron_ = iron_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          items_ = java.util.Collections.unmodifiableList(items_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.items_ = items_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG.getDefaultInstance()) return this;
        if (other.hasWin()) {
          setWin(other.getWin());
        }
        if (other.hasFirst()) {
          setFirst(other.getFirst());
        }
        if (other.hasStar()) {
          setStar(other.getStar());
        }
        if (other.hasIron()) {
          setIron(other.getIron());
        }
        if (!other.items_.isEmpty()) {
          if (items_.isEmpty()) {
            items_ = other.items_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureItemsIsMutable();
            items_.addAll(other.items_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWin()) {
          
          return false;
        }
        for (int i = 0; i < getItemsCount(); i++) {
          if (!getItems(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_OVER_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool win = 1;
      private boolean win_ ;
      /**
       * <code>required bool win = 1;</code>
       *
       * <pre>
       *是否胜利
       * </pre>
       */
      public boolean hasWin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool win = 1;</code>
       *
       * <pre>
       *是否胜利
       * </pre>
       */
      public boolean getWin() {
        return win_;
      }
      /**
       * <code>required bool win = 1;</code>
       *
       * <pre>
       *是否胜利
       * </pre>
       */
      public Builder setWin(boolean value) {
        bitField0_ |= 0x00000001;
        win_ = value;
        
        return this;
      }
      /**
       * <code>required bool win = 1;</code>
       *
       * <pre>
       *是否胜利
       * </pre>
       */
      public Builder clearWin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        win_ = false;
        
        return this;
      }

      // optional bool first = 2;
      private boolean first_ ;
      /**
       * <code>optional bool first = 2;</code>
       *
       * <pre>
       *是否首次获胜
       * </pre>
       */
      public boolean hasFirst() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool first = 2;</code>
       *
       * <pre>
       *是否首次获胜
       * </pre>
       */
      public boolean getFirst() {
        return first_;
      }
      /**
       * <code>optional bool first = 2;</code>
       *
       * <pre>
       *是否首次获胜
       * </pre>
       */
      public Builder setFirst(boolean value) {
        bitField0_ |= 0x00000002;
        first_ = value;
        
        return this;
      }
      /**
       * <code>optional bool first = 2;</code>
       *
       * <pre>
       *是否首次获胜
       * </pre>
       */
      public Builder clearFirst() {
        bitField0_ = (bitField0_ & ~0x00000002);
        first_ = false;
        
        return this;
      }

      // optional uint32 star = 3;
      private int star_ ;
      /**
       * <code>optional uint32 star = 3;</code>
       *
       * <pre>
       *获得星的数量
       * </pre>
       */
      public boolean hasStar() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 star = 3;</code>
       *
       * <pre>
       *获得星的数量
       * </pre>
       */
      public int getStar() {
        return star_;
      }
      /**
       * <code>optional uint32 star = 3;</code>
       *
       * <pre>
       *获得星的数量
       * </pre>
       */
      public Builder setStar(int value) {
        bitField0_ |= 0x00000004;
        star_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 star = 3;</code>
       *
       * <pre>
       *获得星的数量
       * </pre>
       */
      public Builder clearStar() {
        bitField0_ = (bitField0_ & ~0x00000004);
        star_ = 0;
        
        return this;
      }

      // optional uint32 iron = 4;
      private int iron_ ;
      /**
       * <code>optional uint32 iron = 4;</code>
       *
       * <pre>
       *铁块奖励数量
       * </pre>
       */
      public boolean hasIron() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 iron = 4;</code>
       *
       * <pre>
       *铁块奖励数量
       * </pre>
       */
      public int getIron() {
        return iron_;
      }
      /**
       * <code>optional uint32 iron = 4;</code>
       *
       * <pre>
       *铁块奖励数量
       * </pre>
       */
      public Builder setIron(int value) {
        bitField0_ |= 0x00000008;
        iron_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 iron = 4;</code>
       *
       * <pre>
       *铁块奖励数量
       * </pre>
       */
      public Builder clearIron() {
        bitField0_ = (bitField0_ & ~0x00000008);
        iron_ = 0;
        
        return this;
      }

      // repeated .PROTO_CAMP.CampGoodsItem items = 5;
      private java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          items_ = new java.util.ArrayList<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem>(items_);
          bitField0_ |= 0x00000010;
         }
      }

      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> getItemsList() {
        return java.util.Collections.unmodifiableList(items_);
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public int getItemsCount() {
        return items_.size();
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem getItems(int index) {
        return items_.get(index);
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder setItems(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemsIsMutable();
        items_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder setItems(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.Builder builderForValue) {
        ensureItemsIsMutable();
        items_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder addItems(com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemsIsMutable();
        items_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder addItems(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemsIsMutable();
        items_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder addItems(
          com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.Builder builderForValue) {
        ensureItemsIsMutable();
        items_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder addItems(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.Builder builderForValue) {
        ensureItemsIsMutable();
        items_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> values) {
        ensureItemsIsMutable();
        super.addAll(values, items_);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder clearItems() {
        items_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem items = 5;</code>
       *
       * <pre>
       *物品奖励
       * </pre>
       */
      public Builder removeItems(int index) {
        ensureItemsIsMutable();
        items_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.STC_CAMP_OVER_MSG)
    }

    static {
      defaultInstance = new STC_CAMP_OVER_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.STC_CAMP_OVER_MSG)
  }

  public interface CampGoodsItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 goodsId = 1;
    /**
     * <code>required uint32 goodsId = 1;</code>
     */
    boolean hasGoodsId();
    /**
     * <code>required uint32 goodsId = 1;</code>
     */
    int getGoodsId();

    // required uint32 num = 2;
    /**
     * <code>required uint32 num = 2;</code>
     */
    boolean hasNum();
    /**
     * <code>required uint32 num = 2;</code>
     */
    int getNum();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.CampGoodsItem}
   */
  public static final class CampGoodsItem extends
      com.google.protobuf.GeneratedMessageLite
      implements CampGoodsItemOrBuilder {
    // Use CampGoodsItem.newBuilder() to construct.
    private CampGoodsItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CampGoodsItem(boolean noInit) {}

    private static final CampGoodsItem defaultInstance;
    public static CampGoodsItem getDefaultInstance() {
      return defaultInstance;
    }

    public CampGoodsItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CampGoodsItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              goodsId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              num_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CampGoodsItem> PARSER =
        new com.google.protobuf.AbstractParser<CampGoodsItem>() {
      public CampGoodsItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CampGoodsItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CampGoodsItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 goodsId = 1;
    public static final int GOODSID_FIELD_NUMBER = 1;
    private int goodsId_;
    /**
     * <code>required uint32 goodsId = 1;</code>
     */
    public boolean hasGoodsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 goodsId = 1;</code>
     */
    public int getGoodsId() {
      return goodsId_;
    }

    // required uint32 num = 2;
    public static final int NUM_FIELD_NUMBER = 2;
    private int num_;
    /**
     * <code>required uint32 num = 2;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 num = 2;</code>
     */
    public int getNum() {
      return num_;
    }

    private void initFields() {
      goodsId_ = 0;
      num_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGoodsId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, goodsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, num_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, goodsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, num_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.CampGoodsItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.CampGoodsItemOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        goodsId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem build() {
        com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem result = new com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.goodsId_ = goodsId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.num_ = num_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.getDefaultInstance()) return this;
        if (other.hasGoodsId()) {
          setGoodsId(other.getGoodsId());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGoodsId()) {
          
          return false;
        }
        if (!hasNum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 goodsId = 1;
      private int goodsId_ ;
      /**
       * <code>required uint32 goodsId = 1;</code>
       */
      public boolean hasGoodsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 goodsId = 1;</code>
       */
      public int getGoodsId() {
        return goodsId_;
      }
      /**
       * <code>required uint32 goodsId = 1;</code>
       */
      public Builder setGoodsId(int value) {
        bitField0_ |= 0x00000001;
        goodsId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 goodsId = 1;</code>
       */
      public Builder clearGoodsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        goodsId_ = 0;
        
        return this;
      }

      // required uint32 num = 2;
      private int num_ ;
      /**
       * <code>required uint32 num = 2;</code>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 num = 2;</code>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>required uint32 num = 2;</code>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000002;
        num_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 num = 2;</code>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        num_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.CampGoodsItem)
    }

    static {
      defaultInstance = new CampGoodsItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.CampGoodsItem)
  }

  public interface CTS_CAMP_LIST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 warAreaId = 1;
    /**
     * <code>required uint32 warAreaId = 1;</code>
     *
     * <pre>
     *战区ID号
     * </pre>
     */
    boolean hasWarAreaId();
    /**
     * <code>required uint32 warAreaId = 1;</code>
     *
     * <pre>
     *战区ID号
     * </pre>
     */
    int getWarAreaId();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.CTS_CAMP_LIST_MSG}
   *
   * <pre>
   *请求战役列表
   * </pre>
   */
  public static final class CTS_CAMP_LIST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_CAMP_LIST_MSGOrBuilder {
    // Use CTS_CAMP_LIST_MSG.newBuilder() to construct.
    private CTS_CAMP_LIST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_CAMP_LIST_MSG(boolean noInit) {}

    private static final CTS_CAMP_LIST_MSG defaultInstance;
    public static CTS_CAMP_LIST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_CAMP_LIST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_CAMP_LIST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              warAreaId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_CAMP_LIST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_CAMP_LIST_MSG>() {
      public CTS_CAMP_LIST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_CAMP_LIST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_CAMP_LIST_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 warAreaId = 1;
    public static final int WARAREAID_FIELD_NUMBER = 1;
    private int warAreaId_;
    /**
     * <code>required uint32 warAreaId = 1;</code>
     *
     * <pre>
     *战区ID号
     * </pre>
     */
    public boolean hasWarAreaId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 warAreaId = 1;</code>
     *
     * <pre>
     *战区ID号
     * </pre>
     */
    public int getWarAreaId() {
      return warAreaId_;
    }

    private void initFields() {
      warAreaId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWarAreaId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, warAreaId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, warAreaId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.CTS_CAMP_LIST_MSG}
     *
     * <pre>
     *请求战役列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        warAreaId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG build() {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG result = new com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.warAreaId_ = warAreaId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG.getDefaultInstance()) return this;
        if (other.hasWarAreaId()) {
          setWarAreaId(other.getWarAreaId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWarAreaId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_LIST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 warAreaId = 1;
      private int warAreaId_ ;
      /**
       * <code>required uint32 warAreaId = 1;</code>
       *
       * <pre>
       *战区ID号
       * </pre>
       */
      public boolean hasWarAreaId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 warAreaId = 1;</code>
       *
       * <pre>
       *战区ID号
       * </pre>
       */
      public int getWarAreaId() {
        return warAreaId_;
      }
      /**
       * <code>required uint32 warAreaId = 1;</code>
       *
       * <pre>
       *战区ID号
       * </pre>
       */
      public Builder setWarAreaId(int value) {
        bitField0_ |= 0x00000001;
        warAreaId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 warAreaId = 1;</code>
       *
       * <pre>
       *战区ID号
       * </pre>
       */
      public Builder clearWarAreaId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        warAreaId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.CTS_CAMP_LIST_MSG)
    }

    static {
      defaultInstance = new CTS_CAMP_LIST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.CTS_CAMP_LIST_MSG)
  }

  public interface STC_CAMP_LIST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_CAMP.CampItem campItems = 1;
    /**
     * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
     *
     * <pre>
     *战役列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampItem> 
        getCampItemsList();
    /**
     * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
     *
     * <pre>
     *战役列表
     * </pre>
     */
    com.ourpalm.tank.message.CAMP_MSG.CampItem getCampItems(int index);
    /**
     * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
     *
     * <pre>
     *战役列表
     * </pre>
     */
    int getCampItemsCount();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.STC_CAMP_LIST_MSG}
   *
   * <pre>
   *返回战役关卡列表
   * </pre>
   */
  public static final class STC_CAMP_LIST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_CAMP_LIST_MSGOrBuilder {
    // Use STC_CAMP_LIST_MSG.newBuilder() to construct.
    private STC_CAMP_LIST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_CAMP_LIST_MSG(boolean noInit) {}

    private static final STC_CAMP_LIST_MSG defaultInstance;
    public static STC_CAMP_LIST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_CAMP_LIST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_CAMP_LIST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                campItems_ = new java.util.ArrayList<com.ourpalm.tank.message.CAMP_MSG.CampItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              campItems_.add(input.readMessage(com.ourpalm.tank.message.CAMP_MSG.CampItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          campItems_ = java.util.Collections.unmodifiableList(campItems_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_CAMP_LIST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_CAMP_LIST_MSG>() {
      public STC_CAMP_LIST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_CAMP_LIST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_CAMP_LIST_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_CAMP.CampItem campItems = 1;
    public static final int CAMPITEMS_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampItem> campItems_;
    /**
     * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
     *
     * <pre>
     *战役列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampItem> getCampItemsList() {
      return campItems_;
    }
    /**
     * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
     *
     * <pre>
     *战役列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.CAMP_MSG.CampItemOrBuilder> 
        getCampItemsOrBuilderList() {
      return campItems_;
    }
    /**
     * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
     *
     * <pre>
     *战役列表
     * </pre>
     */
    public int getCampItemsCount() {
      return campItems_.size();
    }
    /**
     * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
     *
     * <pre>
     *战役列表
     * </pre>
     */
    public com.ourpalm.tank.message.CAMP_MSG.CampItem getCampItems(int index) {
      return campItems_.get(index);
    }
    /**
     * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
     *
     * <pre>
     *战役列表
     * </pre>
     */
    public com.ourpalm.tank.message.CAMP_MSG.CampItemOrBuilder getCampItemsOrBuilder(
        int index) {
      return campItems_.get(index);
    }

    private void initFields() {
      campItems_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCampItemsCount(); i++) {
        if (!getCampItems(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < campItems_.size(); i++) {
        output.writeMessage(1, campItems_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < campItems_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, campItems_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.STC_CAMP_LIST_MSG}
     *
     * <pre>
     *返回战役关卡列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        campItems_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG build() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG result = new com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          campItems_ = java.util.Collections.unmodifiableList(campItems_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.campItems_ = campItems_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG.getDefaultInstance()) return this;
        if (!other.campItems_.isEmpty()) {
          if (campItems_.isEmpty()) {
            campItems_ = other.campItems_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCampItemsIsMutable();
            campItems_.addAll(other.campItems_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCampItemsCount(); i++) {
          if (!getCampItems(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_LIST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_CAMP.CampItem campItems = 1;
      private java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampItem> campItems_ =
        java.util.Collections.emptyList();
      private void ensureCampItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          campItems_ = new java.util.ArrayList<com.ourpalm.tank.message.CAMP_MSG.CampItem>(campItems_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampItem> getCampItemsList() {
        return java.util.Collections.unmodifiableList(campItems_);
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public int getCampItemsCount() {
        return campItems_.size();
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public com.ourpalm.tank.message.CAMP_MSG.CampItem getCampItems(int index) {
        return campItems_.get(index);
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder setCampItems(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCampItemsIsMutable();
        campItems_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder setCampItems(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampItem.Builder builderForValue) {
        ensureCampItemsIsMutable();
        campItems_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder addCampItems(com.ourpalm.tank.message.CAMP_MSG.CampItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCampItemsIsMutable();
        campItems_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder addCampItems(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCampItemsIsMutable();
        campItems_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder addCampItems(
          com.ourpalm.tank.message.CAMP_MSG.CampItem.Builder builderForValue) {
        ensureCampItemsIsMutable();
        campItems_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder addCampItems(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampItem.Builder builderForValue) {
        ensureCampItemsIsMutable();
        campItems_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder addAllCampItems(
          java.lang.Iterable<? extends com.ourpalm.tank.message.CAMP_MSG.CampItem> values) {
        ensureCampItemsIsMutable();
        super.addAll(values, campItems_);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder clearCampItems() {
        campItems_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampItem campItems = 1;</code>
       *
       * <pre>
       *战役列表
       * </pre>
       */
      public Builder removeCampItems(int index) {
        ensureCampItemsIsMutable();
        campItems_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.STC_CAMP_LIST_MSG)
    }

    static {
      defaultInstance = new STC_CAMP_LIST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.STC_CAMP_LIST_MSG)
  }

  public interface CampItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    int getId();

    // required uint32 gateId = 2;
    /**
     * <code>required uint32 gateId = 2;</code>
     *
     * <pre>
     *关卡ID
     * </pre>
     */
    boolean hasGateId();
    /**
     * <code>required uint32 gateId = 2;</code>
     *
     * <pre>
     *关卡ID
     * </pre>
     */
    int getGateId();

    // required uint32 star = 3;
    /**
     * <code>required uint32 star = 3;</code>
     *
     * <pre>
     *获得星级
     * </pre>
     */
    boolean hasStar();
    /**
     * <code>required uint32 star = 3;</code>
     *
     * <pre>
     *获得星级
     * </pre>
     */
    int getStar();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.CampItem}
   *
   * <pre>
   *战役列表Item
   * </pre>
   */
  public static final class CampItem extends
      com.google.protobuf.GeneratedMessageLite
      implements CampItemOrBuilder {
    // Use CampItem.newBuilder() to construct.
    private CampItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CampItem(boolean noInit) {}

    private static final CampItem defaultInstance;
    public static CampItem getDefaultInstance() {
      return defaultInstance;
    }

    public CampItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CampItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gateId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              star_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CampItem> PARSER =
        new com.google.protobuf.AbstractParser<CampItem>() {
      public CampItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CampItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CampItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 gateId = 2;
    public static final int GATEID_FIELD_NUMBER = 2;
    private int gateId_;
    /**
     * <code>required uint32 gateId = 2;</code>
     *
     * <pre>
     *关卡ID
     * </pre>
     */
    public boolean hasGateId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 gateId = 2;</code>
     *
     * <pre>
     *关卡ID
     * </pre>
     */
    public int getGateId() {
      return gateId_;
    }

    // required uint32 star = 3;
    public static final int STAR_FIELD_NUMBER = 3;
    private int star_;
    /**
     * <code>required uint32 star = 3;</code>
     *
     * <pre>
     *获得星级
     * </pre>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 star = 3;</code>
     *
     * <pre>
     *获得星级
     * </pre>
     */
    public int getStar() {
      return star_;
    }

    private void initFields() {
      id_ = 0;
      gateId_ = 0;
      star_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGateId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, gateId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, star_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gateId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, star_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.CampItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.CampItem}
     *
     * <pre>
     *战役列表Item
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.CampItem, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.CampItemOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.CampItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gateId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        star_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.CampItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampItem build() {
        com.ourpalm.tank.message.CAMP_MSG.CampItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampItem buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.CampItem result = new com.ourpalm.tank.message.CAMP_MSG.CampItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gateId_ = gateId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.star_ = star_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.CampItem other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.CampItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasGateId()) {
          setGateId(other.getGateId());
        }
        if (other.hasStar()) {
          setStar(other.getStar());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasGateId()) {
          
          return false;
        }
        if (!hasStar()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.CampItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.CampItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 gateId = 2;
      private int gateId_ ;
      /**
       * <code>required uint32 gateId = 2;</code>
       *
       * <pre>
       *关卡ID
       * </pre>
       */
      public boolean hasGateId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 gateId = 2;</code>
       *
       * <pre>
       *关卡ID
       * </pre>
       */
      public int getGateId() {
        return gateId_;
      }
      /**
       * <code>required uint32 gateId = 2;</code>
       *
       * <pre>
       *关卡ID
       * </pre>
       */
      public Builder setGateId(int value) {
        bitField0_ |= 0x00000002;
        gateId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 gateId = 2;</code>
       *
       * <pre>
       *关卡ID
       * </pre>
       */
      public Builder clearGateId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gateId_ = 0;
        
        return this;
      }

      // required uint32 star = 3;
      private int star_ ;
      /**
       * <code>required uint32 star = 3;</code>
       *
       * <pre>
       *获得星级
       * </pre>
       */
      public boolean hasStar() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 star = 3;</code>
       *
       * <pre>
       *获得星级
       * </pre>
       */
      public int getStar() {
        return star_;
      }
      /**
       * <code>required uint32 star = 3;</code>
       *
       * <pre>
       *获得星级
       * </pre>
       */
      public Builder setStar(int value) {
        bitField0_ |= 0x00000004;
        star_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 star = 3;</code>
       *
       * <pre>
       *获得星级
       * </pre>
       */
      public Builder clearStar() {
        bitField0_ = (bitField0_ & ~0x00000004);
        star_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.CampItem)
    }

    static {
      defaultInstance = new CampItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.CampItem)
  }

  public interface CTS_CAMP_BOX_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.CTS_CAMP_BOX_MSG}
   *
   * <pre>
   *战役宝箱列表
   * </pre>
   */
  public static final class CTS_CAMP_BOX_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_CAMP_BOX_MSGOrBuilder {
    // Use CTS_CAMP_BOX_MSG.newBuilder() to construct.
    private CTS_CAMP_BOX_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_CAMP_BOX_MSG(boolean noInit) {}

    private static final CTS_CAMP_BOX_MSG defaultInstance;
    public static CTS_CAMP_BOX_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_CAMP_BOX_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_CAMP_BOX_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_CAMP_BOX_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_CAMP_BOX_MSG>() {
      public CTS_CAMP_BOX_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_CAMP_BOX_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_CAMP_BOX_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.CTS_CAMP_BOX_MSG}
     *
     * <pre>
     *战役宝箱列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG build() {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG result = new com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.CTS_CAMP_BOX_MSG)
    }

    static {
      defaultInstance = new CTS_CAMP_BOX_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.CTS_CAMP_BOX_MSG)
  }

  public interface STC_CAMP_BOX_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_CAMP.CampBoxItem boxItem = 1;
    /**
     * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
     */
    java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampBoxItem> 
        getBoxItemList();
    /**
     * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
     */
    com.ourpalm.tank.message.CAMP_MSG.CampBoxItem getBoxItem(int index);
    /**
     * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
     */
    int getBoxItemCount();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.STC_CAMP_BOX_MSG}
   *
   * <pre>
   *返回战役宝箱列表
   * </pre>
   */
  public static final class STC_CAMP_BOX_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_CAMP_BOX_MSGOrBuilder {
    // Use STC_CAMP_BOX_MSG.newBuilder() to construct.
    private STC_CAMP_BOX_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_CAMP_BOX_MSG(boolean noInit) {}

    private static final STC_CAMP_BOX_MSG defaultInstance;
    public static STC_CAMP_BOX_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_CAMP_BOX_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_CAMP_BOX_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                boxItem_ = new java.util.ArrayList<com.ourpalm.tank.message.CAMP_MSG.CampBoxItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              boxItem_.add(input.readMessage(com.ourpalm.tank.message.CAMP_MSG.CampBoxItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          boxItem_ = java.util.Collections.unmodifiableList(boxItem_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_CAMP_BOX_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_CAMP_BOX_MSG>() {
      public STC_CAMP_BOX_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_CAMP_BOX_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_CAMP_BOX_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_CAMP.CampBoxItem boxItem = 1;
    public static final int BOXITEM_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampBoxItem> boxItem_;
    /**
     * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
     */
    public java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampBoxItem> getBoxItemList() {
      return boxItem_;
    }
    /**
     * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
     */
    public java.util.List<? extends com.ourpalm.tank.message.CAMP_MSG.CampBoxItemOrBuilder> 
        getBoxItemOrBuilderList() {
      return boxItem_;
    }
    /**
     * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
     */
    public int getBoxItemCount() {
      return boxItem_.size();
    }
    /**
     * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
     */
    public com.ourpalm.tank.message.CAMP_MSG.CampBoxItem getBoxItem(int index) {
      return boxItem_.get(index);
    }
    /**
     * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
     */
    public com.ourpalm.tank.message.CAMP_MSG.CampBoxItemOrBuilder getBoxItemOrBuilder(
        int index) {
      return boxItem_.get(index);
    }

    private void initFields() {
      boxItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getBoxItemCount(); i++) {
        if (!getBoxItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < boxItem_.size(); i++) {
        output.writeMessage(1, boxItem_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < boxItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, boxItem_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.STC_CAMP_BOX_MSG}
     *
     * <pre>
     *返回战役宝箱列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        boxItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG build() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG result = new com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          boxItem_ = java.util.Collections.unmodifiableList(boxItem_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.boxItem_ = boxItem_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG.getDefaultInstance()) return this;
        if (!other.boxItem_.isEmpty()) {
          if (boxItem_.isEmpty()) {
            boxItem_ = other.boxItem_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBoxItemIsMutable();
            boxItem_.addAll(other.boxItem_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getBoxItemCount(); i++) {
          if (!getBoxItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_CAMP.CampBoxItem boxItem = 1;
      private java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampBoxItem> boxItem_ =
        java.util.Collections.emptyList();
      private void ensureBoxItemIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          boxItem_ = new java.util.ArrayList<com.ourpalm.tank.message.CAMP_MSG.CampBoxItem>(boxItem_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampBoxItem> getBoxItemList() {
        return java.util.Collections.unmodifiableList(boxItem_);
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public int getBoxItemCount() {
        return boxItem_.size();
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public com.ourpalm.tank.message.CAMP_MSG.CampBoxItem getBoxItem(int index) {
        return boxItem_.get(index);
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder setBoxItem(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampBoxItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBoxItemIsMutable();
        boxItem_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder setBoxItem(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampBoxItem.Builder builderForValue) {
        ensureBoxItemIsMutable();
        boxItem_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder addBoxItem(com.ourpalm.tank.message.CAMP_MSG.CampBoxItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBoxItemIsMutable();
        boxItem_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder addBoxItem(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampBoxItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBoxItemIsMutable();
        boxItem_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder addBoxItem(
          com.ourpalm.tank.message.CAMP_MSG.CampBoxItem.Builder builderForValue) {
        ensureBoxItemIsMutable();
        boxItem_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder addBoxItem(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampBoxItem.Builder builderForValue) {
        ensureBoxItemIsMutable();
        boxItem_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder addAllBoxItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.CAMP_MSG.CampBoxItem> values) {
        ensureBoxItemIsMutable();
        super.addAll(values, boxItem_);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder clearBoxItem() {
        boxItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampBoxItem boxItem = 1;</code>
       */
      public Builder removeBoxItem(int index) {
        ensureBoxItemIsMutable();
        boxItem_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.STC_CAMP_BOX_MSG)
    }

    static {
      defaultInstance = new STC_CAMP_BOX_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.STC_CAMP_BOX_MSG)
  }

  public interface CampBoxItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    int getId();

    // required uint32 hard = 2;
    /**
     * <code>required uint32 hard = 2;</code>
     *
     * <pre>
     *难度
     * </pre>
     */
    boolean hasHard();
    /**
     * <code>required uint32 hard = 2;</code>
     *
     * <pre>
     *难度
     * </pre>
     */
    int getHard();

    // required uint32 star = 3;
    /**
     * <code>required uint32 star = 3;</code>
     *
     * <pre>
     *需达成星级
     * </pre>
     */
    boolean hasStar();
    /**
     * <code>required uint32 star = 3;</code>
     *
     * <pre>
     *需达成星级
     * </pre>
     */
    int getStar();

    // required bool hadDraw = 4;
    /**
     * <code>required bool hadDraw = 4;</code>
     *
     * <pre>
     *是否领取(true：已领取)
     * </pre>
     */
    boolean hasHadDraw();
    /**
     * <code>required bool hadDraw = 4;</code>
     *
     * <pre>
     *是否领取(true：已领取)
     * </pre>
     */
    boolean getHadDraw();

    // repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
     */
    java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> 
        getGoodsItemList();
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
     */
    com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem getGoodsItem(int index);
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
     */
    int getGoodsItemCount();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.CampBoxItem}
   */
  public static final class CampBoxItem extends
      com.google.protobuf.GeneratedMessageLite
      implements CampBoxItemOrBuilder {
    // Use CampBoxItem.newBuilder() to construct.
    private CampBoxItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CampBoxItem(boolean noInit) {}

    private static final CampBoxItem defaultInstance;
    public static CampBoxItem getDefaultInstance() {
      return defaultInstance;
    }

    public CampBoxItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CampBoxItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hard_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              star_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hadDraw_ = input.readBool();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                goodsItem_ = new java.util.ArrayList<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem>();
                mutable_bitField0_ |= 0x00000010;
              }
              goodsItem_.add(input.readMessage(com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          goodsItem_ = java.util.Collections.unmodifiableList(goodsItem_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CampBoxItem> PARSER =
        new com.google.protobuf.AbstractParser<CampBoxItem>() {
      public CampBoxItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CampBoxItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CampBoxItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 hard = 2;
    public static final int HARD_FIELD_NUMBER = 2;
    private int hard_;
    /**
     * <code>required uint32 hard = 2;</code>
     *
     * <pre>
     *难度
     * </pre>
     */
    public boolean hasHard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 hard = 2;</code>
     *
     * <pre>
     *难度
     * </pre>
     */
    public int getHard() {
      return hard_;
    }

    // required uint32 star = 3;
    public static final int STAR_FIELD_NUMBER = 3;
    private int star_;
    /**
     * <code>required uint32 star = 3;</code>
     *
     * <pre>
     *需达成星级
     * </pre>
     */
    public boolean hasStar() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 star = 3;</code>
     *
     * <pre>
     *需达成星级
     * </pre>
     */
    public int getStar() {
      return star_;
    }

    // required bool hadDraw = 4;
    public static final int HADDRAW_FIELD_NUMBER = 4;
    private boolean hadDraw_;
    /**
     * <code>required bool hadDraw = 4;</code>
     *
     * <pre>
     *是否领取(true：已领取)
     * </pre>
     */
    public boolean hasHadDraw() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool hadDraw = 4;</code>
     *
     * <pre>
     *是否领取(true：已领取)
     * </pre>
     */
    public boolean getHadDraw() {
      return hadDraw_;
    }

    // repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;
    public static final int GOODSITEM_FIELD_NUMBER = 5;
    private java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> goodsItem_;
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
     */
    public java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> getGoodsItemList() {
      return goodsItem_;
    }
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
     */
    public java.util.List<? extends com.ourpalm.tank.message.CAMP_MSG.CampGoodsItemOrBuilder> 
        getGoodsItemOrBuilderList() {
      return goodsItem_;
    }
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
     */
    public int getGoodsItemCount() {
      return goodsItem_.size();
    }
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
     */
    public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem getGoodsItem(int index) {
      return goodsItem_.get(index);
    }
    /**
     * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
     */
    public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItemOrBuilder getGoodsItemOrBuilder(
        int index) {
      return goodsItem_.get(index);
    }

    private void initFields() {
      id_ = 0;
      hard_ = 0;
      star_ = 0;
      hadDraw_ = false;
      goodsItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHard()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStar()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHadDraw()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGoodsItemCount(); i++) {
        if (!getGoodsItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, hard_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, star_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, hadDraw_);
      }
      for (int i = 0; i < goodsItem_.size(); i++) {
        output.writeMessage(5, goodsItem_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, hard_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, star_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, hadDraw_);
      }
      for (int i = 0; i < goodsItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, goodsItem_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.CampBoxItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.CampBoxItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.CampBoxItem, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.CampBoxItemOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.CampBoxItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        hard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        star_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hadDraw_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        goodsItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampBoxItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.CampBoxItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampBoxItem build() {
        com.ourpalm.tank.message.CAMP_MSG.CampBoxItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.CampBoxItem buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.CampBoxItem result = new com.ourpalm.tank.message.CAMP_MSG.CampBoxItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hard_ = hard_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.star_ = star_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hadDraw_ = hadDraw_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          goodsItem_ = java.util.Collections.unmodifiableList(goodsItem_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.goodsItem_ = goodsItem_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.CampBoxItem other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.CampBoxItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasHard()) {
          setHard(other.getHard());
        }
        if (other.hasStar()) {
          setStar(other.getStar());
        }
        if (other.hasHadDraw()) {
          setHadDraw(other.getHadDraw());
        }
        if (!other.goodsItem_.isEmpty()) {
          if (goodsItem_.isEmpty()) {
            goodsItem_ = other.goodsItem_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureGoodsItemIsMutable();
            goodsItem_.addAll(other.goodsItem_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasHard()) {
          
          return false;
        }
        if (!hasStar()) {
          
          return false;
        }
        if (!hasHadDraw()) {
          
          return false;
        }
        for (int i = 0; i < getGoodsItemCount(); i++) {
          if (!getGoodsItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.CampBoxItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.CampBoxItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 hard = 2;
      private int hard_ ;
      /**
       * <code>required uint32 hard = 2;</code>
       *
       * <pre>
       *难度
       * </pre>
       */
      public boolean hasHard() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 hard = 2;</code>
       *
       * <pre>
       *难度
       * </pre>
       */
      public int getHard() {
        return hard_;
      }
      /**
       * <code>required uint32 hard = 2;</code>
       *
       * <pre>
       *难度
       * </pre>
       */
      public Builder setHard(int value) {
        bitField0_ |= 0x00000002;
        hard_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 hard = 2;</code>
       *
       * <pre>
       *难度
       * </pre>
       */
      public Builder clearHard() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hard_ = 0;
        
        return this;
      }

      // required uint32 star = 3;
      private int star_ ;
      /**
       * <code>required uint32 star = 3;</code>
       *
       * <pre>
       *需达成星级
       * </pre>
       */
      public boolean hasStar() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 star = 3;</code>
       *
       * <pre>
       *需达成星级
       * </pre>
       */
      public int getStar() {
        return star_;
      }
      /**
       * <code>required uint32 star = 3;</code>
       *
       * <pre>
       *需达成星级
       * </pre>
       */
      public Builder setStar(int value) {
        bitField0_ |= 0x00000004;
        star_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 star = 3;</code>
       *
       * <pre>
       *需达成星级
       * </pre>
       */
      public Builder clearStar() {
        bitField0_ = (bitField0_ & ~0x00000004);
        star_ = 0;
        
        return this;
      }

      // required bool hadDraw = 4;
      private boolean hadDraw_ ;
      /**
       * <code>required bool hadDraw = 4;</code>
       *
       * <pre>
       *是否领取(true：已领取)
       * </pre>
       */
      public boolean hasHadDraw() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool hadDraw = 4;</code>
       *
       * <pre>
       *是否领取(true：已领取)
       * </pre>
       */
      public boolean getHadDraw() {
        return hadDraw_;
      }
      /**
       * <code>required bool hadDraw = 4;</code>
       *
       * <pre>
       *是否领取(true：已领取)
       * </pre>
       */
      public Builder setHadDraw(boolean value) {
        bitField0_ |= 0x00000008;
        hadDraw_ = value;
        
        return this;
      }
      /**
       * <code>required bool hadDraw = 4;</code>
       *
       * <pre>
       *是否领取(true：已领取)
       * </pre>
       */
      public Builder clearHadDraw() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hadDraw_ = false;
        
        return this;
      }

      // repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;
      private java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> goodsItem_ =
        java.util.Collections.emptyList();
      private void ensureGoodsItemIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          goodsItem_ = new java.util.ArrayList<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem>(goodsItem_);
          bitField0_ |= 0x00000010;
         }
      }

      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public java.util.List<com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> getGoodsItemList() {
        return java.util.Collections.unmodifiableList(goodsItem_);
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public int getGoodsItemCount() {
        return goodsItem_.size();
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem getGoodsItem(int index) {
        return goodsItem_.get(index);
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder setGoodsItem(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder setGoodsItem(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder addGoodsItem(com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder addGoodsItem(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder addGoodsItem(
          com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder addGoodsItem(
          int index, com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder addAllGoodsItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.CAMP_MSG.CampGoodsItem> values) {
        ensureGoodsItemIsMutable();
        super.addAll(values, goodsItem_);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder clearGoodsItem() {
        goodsItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);

        return this;
      }
      /**
       * <code>repeated .PROTO_CAMP.CampGoodsItem goodsItem = 5;</code>
       */
      public Builder removeGoodsItem(int index) {
        ensureGoodsItemIsMutable();
        goodsItem_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.CampBoxItem)
    }

    static {
      defaultInstance = new CampBoxItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.CampBoxItem)
  }

  public interface CTS_CAMP_BOX_DRAW_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    int getId();

    // required uint32 hard = 2;
    /**
     * <code>required uint32 hard = 2;</code>
     *
     * <pre>
     *难度
     * </pre>
     */
    boolean hasHard();
    /**
     * <code>required uint32 hard = 2;</code>
     *
     * <pre>
     *难度
     * </pre>
     */
    int getHard();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.CTS_CAMP_BOX_DRAW_MSG}
   *
   * <pre>
   *领取战役奖励
   * </pre>
   */
  public static final class CTS_CAMP_BOX_DRAW_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_CAMP_BOX_DRAW_MSGOrBuilder {
    // Use CTS_CAMP_BOX_DRAW_MSG.newBuilder() to construct.
    private CTS_CAMP_BOX_DRAW_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_CAMP_BOX_DRAW_MSG(boolean noInit) {}

    private static final CTS_CAMP_BOX_DRAW_MSG defaultInstance;
    public static CTS_CAMP_BOX_DRAW_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_CAMP_BOX_DRAW_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_CAMP_BOX_DRAW_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hard_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_CAMP_BOX_DRAW_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_CAMP_BOX_DRAW_MSG>() {
      public CTS_CAMP_BOX_DRAW_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_CAMP_BOX_DRAW_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_CAMP_BOX_DRAW_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 hard = 2;
    public static final int HARD_FIELD_NUMBER = 2;
    private int hard_;
    /**
     * <code>required uint32 hard = 2;</code>
     *
     * <pre>
     *难度
     * </pre>
     */
    public boolean hasHard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 hard = 2;</code>
     *
     * <pre>
     *难度
     * </pre>
     */
    public int getHard() {
      return hard_;
    }

    private void initFields() {
      id_ = 0;
      hard_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHard()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, hard_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, hard_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.CTS_CAMP_BOX_DRAW_MSG}
     *
     * <pre>
     *领取战役奖励
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        hard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG build() {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG result = new com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hard_ = hard_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasHard()) {
          setHard(other.getHard());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasHard()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.CTS_CAMP_BOX_DRAW_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 hard = 2;
      private int hard_ ;
      /**
       * <code>required uint32 hard = 2;</code>
       *
       * <pre>
       *难度
       * </pre>
       */
      public boolean hasHard() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 hard = 2;</code>
       *
       * <pre>
       *难度
       * </pre>
       */
      public int getHard() {
        return hard_;
      }
      /**
       * <code>required uint32 hard = 2;</code>
       *
       * <pre>
       *难度
       * </pre>
       */
      public Builder setHard(int value) {
        bitField0_ |= 0x00000002;
        hard_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 hard = 2;</code>
       *
       * <pre>
       *难度
       * </pre>
       */
      public Builder clearHard() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hard_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.CTS_CAMP_BOX_DRAW_MSG)
    }

    static {
      defaultInstance = new CTS_CAMP_BOX_DRAW_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.CTS_CAMP_BOX_DRAW_MSG)
  }

  public interface STC_CAMP_BOX_DRAW_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 result = 1;
    /**
     * <code>required uint32 result = 1;</code>
     */
    boolean hasResult();
    /**
     * <code>required uint32 result = 1;</code>
     */
    int getResult();

    // optional string info = 2;
    /**
     * <code>optional string info = 2;</code>
     */
    boolean hasInfo();
    /**
     * <code>optional string info = 2;</code>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 2;</code>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_CAMP.STC_CAMP_BOX_DRAW_MSG}
   *
   * <pre>
   *返回领取战役奖励
   * </pre>
   */
  public static final class STC_CAMP_BOX_DRAW_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_CAMP_BOX_DRAW_MSGOrBuilder {
    // Use STC_CAMP_BOX_DRAW_MSG.newBuilder() to construct.
    private STC_CAMP_BOX_DRAW_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_CAMP_BOX_DRAW_MSG(boolean noInit) {}

    private static final STC_CAMP_BOX_DRAW_MSG defaultInstance;
    public static STC_CAMP_BOX_DRAW_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_CAMP_BOX_DRAW_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_CAMP_BOX_DRAW_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_CAMP_BOX_DRAW_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_CAMP_BOX_DRAW_MSG>() {
      public STC_CAMP_BOX_DRAW_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_CAMP_BOX_DRAW_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_CAMP_BOX_DRAW_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required uint32 result = 1;</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 result = 1;</code>
     */
    public int getResult() {
      return result_;
    }

    // optional string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>optional string info = 2;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string info = 2;</code>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string info = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_CAMP.STC_CAMP_BOX_DRAW_MSG}
     *
     * <pre>
     *返回领取战役奖励
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG, Builder>
        implements com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG build() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG buildPartial() {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG result = new com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG other) {
        if (other == com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.CAMP_MSG.STC_CAMP_BOX_DRAW_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 result = 1;
      private int result_ ;
      /**
       * <code>required uint32 result = 1;</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 result = 1;</code>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required uint32 result = 1;</code>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 result = 1;</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // optional string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 2;</code>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_CAMP.STC_CAMP_BOX_DRAW_MSG)
    }

    static {
      defaultInstance = new STC_CAMP_BOX_DRAW_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_CAMP.STC_CAMP_BOX_DRAW_MSG)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
