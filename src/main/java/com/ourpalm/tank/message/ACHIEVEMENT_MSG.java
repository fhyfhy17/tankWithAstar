// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_10_achievement.proto

package com.ourpalm.tank.message;

public final class ACHIEVEMENT_MSG {
  private ACHIEVEMENT_MSG() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code PROTO_ACHIEVEMENT.CMD_TYPE}
   */
  public enum CMD_TYPE
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CMD_TYPE_ACHIEVEMENT = 10;</code>
     */
    CMD_TYPE_ACHIEVEMENT(0, 10),
    ;

    /**
     * <code>CMD_TYPE_ACHIEVEMENT = 10;</code>
     */
    public static final int CMD_TYPE_ACHIEVEMENT_VALUE = 10;


    public final int getNumber() { return value; }

    public static CMD_TYPE valueOf(int value) {
      switch (value) {
        case 10: return CMD_TYPE_ACHIEVEMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>() {
            public CMD_TYPE findValueByNumber(int number) {
              return CMD_TYPE.valueOf(number);
            }
          };

    private final int value;

    private CMD_TYPE(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_ACHIEVEMENT.CMD_TYPE)
  }

  /**
   * Protobuf enum {@code PROTO_ACHIEVEMENT.CMD_ID}
   */
  public enum CMD_ID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CTS_ACHIEVEMENT_LIST = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    CTS_ACHIEVEMENT_LIST(0, 1),
    /**
     * <code>CTS_ACHIEVEMENT_DRAW = 2;</code>
     *
     * <pre>
     *领取奖励
     * </pre>
     */
    CTS_ACHIEVEMENT_DRAW(1, 2),
    /**
     * <code>STC_ACHIEVEMENT_LIST = 3;</code>
     */
    STC_ACHIEVEMENT_LIST(2, 3),
    /**
     * <code>STC_ACHIEVEMENT_DRAW = 4;</code>
     */
    STC_ACHIEVEMENT_DRAW(3, 4),
    /**
     * <code>STC_TRIGGER_TIP = 5;</code>
     *
     * <pre>
     *成就触发提示
     * </pre>
     */
    STC_TRIGGER_TIP(4, 5),
    ;

    /**
     * <code>CTS_ACHIEVEMENT_LIST = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    public static final int CTS_ACHIEVEMENT_LIST_VALUE = 1;
    /**
     * <code>CTS_ACHIEVEMENT_DRAW = 2;</code>
     *
     * <pre>
     *领取奖励
     * </pre>
     */
    public static final int CTS_ACHIEVEMENT_DRAW_VALUE = 2;
    /**
     * <code>STC_ACHIEVEMENT_LIST = 3;</code>
     */
    public static final int STC_ACHIEVEMENT_LIST_VALUE = 3;
    /**
     * <code>STC_ACHIEVEMENT_DRAW = 4;</code>
     */
    public static final int STC_ACHIEVEMENT_DRAW_VALUE = 4;
    /**
     * <code>STC_TRIGGER_TIP = 5;</code>
     *
     * <pre>
     *成就触发提示
     * </pre>
     */
    public static final int STC_TRIGGER_TIP_VALUE = 5;


    public final int getNumber() { return value; }

    public static CMD_ID valueOf(int value) {
      switch (value) {
        case 1: return CTS_ACHIEVEMENT_LIST;
        case 2: return CTS_ACHIEVEMENT_DRAW;
        case 3: return STC_ACHIEVEMENT_LIST;
        case 4: return STC_ACHIEVEMENT_DRAW;
        case 5: return STC_TRIGGER_TIP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CMD_ID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CMD_ID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CMD_ID>() {
            public CMD_ID findValueByNumber(int number) {
              return CMD_ID.valueOf(number);
            }
          };

    private final int value;

    private CMD_ID(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_ACHIEVEMENT.CMD_ID)
  }

  /**
   * Protobuf enum {@code PROTO_ACHIEVEMENT.AchievementState}
   */
  public enum AchievementState
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>reward = 1;</code>
     *
     * <pre>
     *可以领奖
     * </pre>
     */
    reward(0, 1),
    /**
     * <code>complete = 2;</code>
     *
     * <pre>
     *领完奖励
     * </pre>
     */
    complete(1, 2),
    /**
     * <code>accept = 3;</code>
     *
     * <pre>
     *进行中
     * </pre>
     */
    accept(2, 3),
    ;

    /**
     * <code>reward = 1;</code>
     *
     * <pre>
     *可以领奖
     * </pre>
     */
    public static final int reward_VALUE = 1;
    /**
     * <code>complete = 2;</code>
     *
     * <pre>
     *领完奖励
     * </pre>
     */
    public static final int complete_VALUE = 2;
    /**
     * <code>accept = 3;</code>
     *
     * <pre>
     *进行中
     * </pre>
     */
    public static final int accept_VALUE = 3;


    public final int getNumber() { return value; }

    public static AchievementState valueOf(int value) {
      switch (value) {
        case 1: return reward;
        case 2: return complete;
        case 3: return accept;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AchievementState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AchievementState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AchievementState>() {
            public AchievementState findValueByNumber(int number) {
              return AchievementState.valueOf(number);
            }
          };

    private final int value;

    private AchievementState(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_ACHIEVEMENT.AchievementState)
  }

  public interface CTS_ACHIEVEMENT_DRAW_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code PROTO_ACHIEVEMENT.CTS_ACHIEVEMENT_DRAW_MSG}
   *
   * <pre>
   *领取奖励
   * </pre>
   */
  public static final class CTS_ACHIEVEMENT_DRAW_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_ACHIEVEMENT_DRAW_MSGOrBuilder {
    // Use CTS_ACHIEVEMENT_DRAW_MSG.newBuilder() to construct.
    private CTS_ACHIEVEMENT_DRAW_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_ACHIEVEMENT_DRAW_MSG(boolean noInit) {}

    private static final CTS_ACHIEVEMENT_DRAW_MSG defaultInstance;
    public static CTS_ACHIEVEMENT_DRAW_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_ACHIEVEMENT_DRAW_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_ACHIEVEMENT_DRAW_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_ACHIEVEMENT_DRAW_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_ACHIEVEMENT_DRAW_MSG>() {
      public CTS_ACHIEVEMENT_DRAW_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_ACHIEVEMENT_DRAW_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_ACHIEVEMENT_DRAW_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_ACHIEVEMENT.CTS_ACHIEVEMENT_DRAW_MSG}
     *
     * <pre>
     *领取奖励
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG, Builder>
        implements com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG build() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG buildPartial() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG result = new com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG other) {
        if (other == com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.ACHIEVEMENT_MSG.CTS_ACHIEVEMENT_DRAW_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_ACHIEVEMENT.CTS_ACHIEVEMENT_DRAW_MSG)
    }

    static {
      defaultInstance = new CTS_ACHIEVEMENT_DRAW_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_ACHIEVEMENT.CTS_ACHIEVEMENT_DRAW_MSG)
  }

  public interface AchievementItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    int getId();

    // required uint32 finishCount = 2;
    /**
     * <code>required uint32 finishCount = 2;</code>
     *
     * <pre>
     *完成次数
     * </pre>
     */
    boolean hasFinishCount();
    /**
     * <code>required uint32 finishCount = 2;</code>
     *
     * <pre>
     *完成次数
     * </pre>
     */
    int getFinishCount();

    // required .PROTO_ACHIEVEMENT.AchievementState state = 3;
    /**
     * <code>required .PROTO_ACHIEVEMENT.AchievementState state = 3;</code>
     *
     * <pre>
     *是否领取了奖励
     * </pre>
     */
    boolean hasState();
    /**
     * <code>required .PROTO_ACHIEVEMENT.AchievementState state = 3;</code>
     *
     * <pre>
     *是否领取了奖励
     * </pre>
     */
    com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState getState();
  }
  /**
   * Protobuf type {@code PROTO_ACHIEVEMENT.AchievementItem}
   */
  public static final class AchievementItem extends
      com.google.protobuf.GeneratedMessageLite
      implements AchievementItemOrBuilder {
    // Use AchievementItem.newBuilder() to construct.
    private AchievementItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AchievementItem(boolean noInit) {}

    private static final AchievementItem defaultInstance;
    public static AchievementItem getDefaultInstance() {
      return defaultInstance;
    }

    public AchievementItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AchievementItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              finishCount_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState value = com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                state_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AchievementItem> PARSER =
        new com.google.protobuf.AbstractParser<AchievementItem>() {
      public AchievementItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AchievementItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AchievementItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 finishCount = 2;
    public static final int FINISHCOUNT_FIELD_NUMBER = 2;
    private int finishCount_;
    /**
     * <code>required uint32 finishCount = 2;</code>
     *
     * <pre>
     *完成次数
     * </pre>
     */
    public boolean hasFinishCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 finishCount = 2;</code>
     *
     * <pre>
     *完成次数
     * </pre>
     */
    public int getFinishCount() {
      return finishCount_;
    }

    // required .PROTO_ACHIEVEMENT.AchievementState state = 3;
    public static final int STATE_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState state_;
    /**
     * <code>required .PROTO_ACHIEVEMENT.AchievementState state = 3;</code>
     *
     * <pre>
     *是否领取了奖励
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .PROTO_ACHIEVEMENT.AchievementState state = 3;</code>
     *
     * <pre>
     *是否领取了奖励
     * </pre>
     */
    public com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState getState() {
      return state_;
    }

    private void initFields() {
      id_ = 0;
      finishCount_ = 0;
      state_ = com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState.reward;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFinishCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, finishCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, state_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, finishCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, state_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_ACHIEVEMENT.AchievementItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem, Builder>
        implements com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItemOrBuilder {
      // Construct using com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        finishCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState.reward;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem build() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem buildPartial() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem result = new com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.finishCount_ = finishCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem other) {
        if (other == com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasFinishCount()) {
          setFinishCount(other.getFinishCount());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasFinishCount()) {
          
          return false;
        }
        if (!hasState()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 finishCount = 2;
      private int finishCount_ ;
      /**
       * <code>required uint32 finishCount = 2;</code>
       *
       * <pre>
       *完成次数
       * </pre>
       */
      public boolean hasFinishCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 finishCount = 2;</code>
       *
       * <pre>
       *完成次数
       * </pre>
       */
      public int getFinishCount() {
        return finishCount_;
      }
      /**
       * <code>required uint32 finishCount = 2;</code>
       *
       * <pre>
       *完成次数
       * </pre>
       */
      public Builder setFinishCount(int value) {
        bitField0_ |= 0x00000002;
        finishCount_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 finishCount = 2;</code>
       *
       * <pre>
       *完成次数
       * </pre>
       */
      public Builder clearFinishCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        finishCount_ = 0;
        
        return this;
      }

      // required .PROTO_ACHIEVEMENT.AchievementState state = 3;
      private com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState state_ = com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState.reward;
      /**
       * <code>required .PROTO_ACHIEVEMENT.AchievementState state = 3;</code>
       *
       * <pre>
       *是否领取了奖励
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .PROTO_ACHIEVEMENT.AchievementState state = 3;</code>
       *
       * <pre>
       *是否领取了奖励
       * </pre>
       */
      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState getState() {
        return state_;
      }
      /**
       * <code>required .PROTO_ACHIEVEMENT.AchievementState state = 3;</code>
       *
       * <pre>
       *是否领取了奖励
       * </pre>
       */
      public Builder setState(com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        state_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_ACHIEVEMENT.AchievementState state = 3;</code>
       *
       * <pre>
       *是否领取了奖励
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementState.reward;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_ACHIEVEMENT.AchievementItem)
    }

    static {
      defaultInstance = new AchievementItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_ACHIEVEMENT.AchievementItem)
  }

  public interface STC_ACHIEVEMENT_LIST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;
    /**
     * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem> 
        getItemList();
    /**
     * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem getItem(int index);
    /**
     * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    int getItemCount();
  }
  /**
   * Protobuf type {@code PROTO_ACHIEVEMENT.STC_ACHIEVEMENT_LIST_MSG}
   *
   * <pre>
   *成就列表
   * </pre>
   */
  public static final class STC_ACHIEVEMENT_LIST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_ACHIEVEMENT_LIST_MSGOrBuilder {
    // Use STC_ACHIEVEMENT_LIST_MSG.newBuilder() to construct.
    private STC_ACHIEVEMENT_LIST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_ACHIEVEMENT_LIST_MSG(boolean noInit) {}

    private static final STC_ACHIEVEMENT_LIST_MSG defaultInstance;
    public static STC_ACHIEVEMENT_LIST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_ACHIEVEMENT_LIST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_ACHIEVEMENT_LIST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                item_ = new java.util.ArrayList<com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              item_.add(input.readMessage(com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = java.util.Collections.unmodifiableList(item_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_ACHIEVEMENT_LIST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_ACHIEVEMENT_LIST_MSG>() {
      public STC_ACHIEVEMENT_LIST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_ACHIEVEMENT_LIST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_ACHIEVEMENT_LIST_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;
    public static final int ITEM_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem> item_;
    /**
     * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem> getItemList() {
      return item_;
    }
    /**
     * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItemOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    public com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem getItem(int index) {
      return item_.get(index);
    }
    /**
     * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
     *
     * <pre>
     *成就列表
     * </pre>
     */
    public com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItemOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }

    private void initFields() {
      item_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getItemCount(); i++) {
        if (!getItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(1, item_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, item_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_ACHIEVEMENT.STC_ACHIEVEMENT_LIST_MSG}
     *
     * <pre>
     *成就列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG, Builder>
        implements com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        item_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG build() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG buildPartial() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG result = new com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = java.util.Collections.unmodifiableList(item_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.item_ = item_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG other) {
        if (other == com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG.getDefaultInstance()) return this;
        if (!other.item_.isEmpty()) {
          if (item_.isEmpty()) {
            item_ = other.item_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureItemIsMutable();
            item_.addAll(other.item_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getItemCount(); i++) {
          if (!getItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_LIST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;
      private java.util.List<com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem> item_ =
        java.util.Collections.emptyList();
      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = new java.util.ArrayList<com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem>(item_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem> getItemList() {
        return java.util.Collections.unmodifiableList(item_);
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public int getItemCount() {
        return item_.size();
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem getItem(int index) {
        return item_.get(index);
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder setItem(
          int index, com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder setItem(
          int index, com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder addItem(com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder addItem(
          int index, com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder addItem(
          com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder addItem(
          int index, com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.ACHIEVEMENT_MSG.AchievementItem> values) {
        ensureItemIsMutable();
        super.addAll(values, item_);

        return this;
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder clearItem() {
        item_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_ACHIEVEMENT.AchievementItem item = 1;</code>
       *
       * <pre>
       *成就列表
       * </pre>
       */
      public Builder removeItem(int index) {
        ensureItemIsMutable();
        item_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_ACHIEVEMENT.STC_ACHIEVEMENT_LIST_MSG)
    }

    static {
      defaultInstance = new STC_ACHIEVEMENT_LIST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_ACHIEVEMENT.STC_ACHIEVEMENT_LIST_MSG)
  }

  public interface STC_ACHIEVEMENT_DRAW_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool success = 1;
    /**
     * <code>required bool success = 1;</code>
     *
     * <pre>
     *是否成功
     * </pre>
     */
    boolean hasSuccess();
    /**
     * <code>required bool success = 1;</code>
     *
     * <pre>
     *是否成功
     * </pre>
     */
    boolean getSuccess();

    // required string info = 2;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // required uint32 id = 3;
    /**
     * <code>required uint32 id = 3;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 3;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code PROTO_ACHIEVEMENT.STC_ACHIEVEMENT_DRAW_MSG}
   *
   * <pre>
   *领取奖励
   * </pre>
   */
  public static final class STC_ACHIEVEMENT_DRAW_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_ACHIEVEMENT_DRAW_MSGOrBuilder {
    // Use STC_ACHIEVEMENT_DRAW_MSG.newBuilder() to construct.
    private STC_ACHIEVEMENT_DRAW_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_ACHIEVEMENT_DRAW_MSG(boolean noInit) {}

    private static final STC_ACHIEVEMENT_DRAW_MSG defaultInstance;
    public static STC_ACHIEVEMENT_DRAW_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_ACHIEVEMENT_DRAW_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_ACHIEVEMENT_DRAW_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              success_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              id_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_ACHIEVEMENT_DRAW_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_ACHIEVEMENT_DRAW_MSG>() {
      public STC_ACHIEVEMENT_DRAW_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_ACHIEVEMENT_DRAW_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_ACHIEVEMENT_DRAW_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool success = 1;
    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <code>required bool success = 1;</code>
     *
     * <pre>
     *是否成功
     * </pre>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool success = 1;</code>
     *
     * <pre>
     *是否成功
     * </pre>
     */
    public boolean getSuccess() {
      return success_;
    }

    // required string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 id = 3;
    public static final int ID_FIELD_NUMBER = 3;
    private int id_;
    /**
     * <code>required uint32 id = 3;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 id = 3;</code>
     *
     * <pre>
     *成就ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      success_ = false;
      info_ = "";
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_ACHIEVEMENT.STC_ACHIEVEMENT_DRAW_MSG}
     *
     * <pre>
     *领取奖励
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG, Builder>
        implements com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG build() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG buildPartial() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG result = new com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.success_ = success_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG other) {
        if (other == com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG.getDefaultInstance()) return this;
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuccess()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_ACHIEVEMENT_DRAW_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool success = 1;
      private boolean success_ ;
      /**
       * <code>required bool success = 1;</code>
       *
       * <pre>
       *是否成功
       * </pre>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool success = 1;</code>
       *
       * <pre>
       *是否成功
       * </pre>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>required bool success = 1;</code>
       *
       * <pre>
       *是否成功
       * </pre>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000001;
        success_ = value;
        
        return this;
      }
      /**
       * <code>required bool success = 1;</code>
       *
       * <pre>
       *是否成功
       * </pre>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000001);
        success_ = false;
        
        return this;
      }

      // required string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // required uint32 id = 3;
      private int id_ ;
      /**
       * <code>required uint32 id = 3;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 id = 3;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 3;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000004;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 3;</code>
       *
       * <pre>
       *成就ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_ACHIEVEMENT.STC_ACHIEVEMENT_DRAW_MSG)
    }

    static {
      defaultInstance = new STC_ACHIEVEMENT_DRAW_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_ACHIEVEMENT.STC_ACHIEVEMENT_DRAW_MSG)
  }

  public interface STC_TRIGGER_TIP_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就id
     * </pre>
     */
    int getId();

    // required uint32 finishCount = 2;
    /**
     * <code>required uint32 finishCount = 2;</code>
     *
     * <pre>
     *完成次数
     * </pre>
     */
    boolean hasFinishCount();
    /**
     * <code>required uint32 finishCount = 2;</code>
     *
     * <pre>
     *完成次数
     * </pre>
     */
    int getFinishCount();
  }
  /**
   * Protobuf type {@code PROTO_ACHIEVEMENT.STC_TRIGGER_TIP_MSG}
   */
  public static final class STC_TRIGGER_TIP_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TRIGGER_TIP_MSGOrBuilder {
    // Use STC_TRIGGER_TIP_MSG.newBuilder() to construct.
    private STC_TRIGGER_TIP_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TRIGGER_TIP_MSG(boolean noInit) {}

    private static final STC_TRIGGER_TIP_MSG defaultInstance;
    public static STC_TRIGGER_TIP_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TRIGGER_TIP_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TRIGGER_TIP_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              finishCount_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TRIGGER_TIP_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TRIGGER_TIP_MSG>() {
      public STC_TRIGGER_TIP_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TRIGGER_TIP_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TRIGGER_TIP_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *成就id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 finishCount = 2;
    public static final int FINISHCOUNT_FIELD_NUMBER = 2;
    private int finishCount_;
    /**
     * <code>required uint32 finishCount = 2;</code>
     *
     * <pre>
     *完成次数
     * </pre>
     */
    public boolean hasFinishCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 finishCount = 2;</code>
     *
     * <pre>
     *完成次数
     * </pre>
     */
    public int getFinishCount() {
      return finishCount_;
    }

    private void initFields() {
      id_ = 0;
      finishCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFinishCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, finishCount_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, finishCount_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_ACHIEVEMENT.STC_TRIGGER_TIP_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG, Builder>
        implements com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        finishCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG build() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG buildPartial() {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG result = new com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.finishCount_ = finishCount_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG other) {
        if (other == com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasFinishCount()) {
          setFinishCount(other.getFinishCount());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasFinishCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.ACHIEVEMENT_MSG.STC_TRIGGER_TIP_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *成就id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 finishCount = 2;
      private int finishCount_ ;
      /**
       * <code>required uint32 finishCount = 2;</code>
       *
       * <pre>
       *完成次数
       * </pre>
       */
      public boolean hasFinishCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 finishCount = 2;</code>
       *
       * <pre>
       *完成次数
       * </pre>
       */
      public int getFinishCount() {
        return finishCount_;
      }
      /**
       * <code>required uint32 finishCount = 2;</code>
       *
       * <pre>
       *完成次数
       * </pre>
       */
      public Builder setFinishCount(int value) {
        bitField0_ |= 0x00000002;
        finishCount_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 finishCount = 2;</code>
       *
       * <pre>
       *完成次数
       * </pre>
       */
      public Builder clearFinishCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        finishCount_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_ACHIEVEMENT.STC_TRIGGER_TIP_MSG)
    }

    static {
      defaultInstance = new STC_TRIGGER_TIP_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_ACHIEVEMENT.STC_TRIGGER_TIP_MSG)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
