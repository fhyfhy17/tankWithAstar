// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_7_tank.proto

package com.ourpalm.tank.message;

public final class TANK_MSG {
  private TANK_MSG() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code PROTO_TANK.CMD_TYPE}
   */
  public enum CMD_TYPE
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CMD_TYPE_TANK = 7;</code>
     */
    CMD_TYPE_TANK(0, 7),
    ;

    /**
     * <code>CMD_TYPE_TANK = 7;</code>
     */
    public static final int CMD_TYPE_TANK_VALUE = 7;


    public final int getNumber() { return value; }

    public static CMD_TYPE valueOf(int value) {
      switch (value) {
        case 7: return CMD_TYPE_TANK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>() {
            public CMD_TYPE findValueByNumber(int number) {
              return CMD_TYPE.valueOf(number);
            }
          };

    private final int value;

    private CMD_TYPE(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_TANK.CMD_TYPE)
  }

  /**
   * Protobuf enum {@code PROTO_TANK.CMD_ID}
   */
  public enum CMD_ID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CTS_TANK_LIST = 1;</code>
     *
     * <pre>
     *已拥有的坦克列表		(空命令)
     * </pre>
     */
    CTS_TANK_LIST(0, 1),
    /**
     * <code>CTS_TANK_BUY = 3;</code>
     *
     * <pre>
     *购买坦克				(CTS_TANK_BUY_MSG)
     * </pre>
     */
    CTS_TANK_BUY(1, 3),
    /**
     * <code>STC_TANK_LIST = 4;</code>
     *
     * <pre>
     *返回已拥有的坦克列表	(STC_TANK_LIST_MSG)
     * </pre>
     */
    STC_TANK_LIST(2, 4),
    /**
     * <code>STC_TANK_BUY = 6;</code>
     *
     * <pre>
     *购买坦克返回			(STC_TANK_BUY_MSG)
     * </pre>
     */
    STC_TANK_BUY(3, 6),
    /**
     * <code>CTS_WAREHOUSE_LIST = 7;</code>
     *
     * <pre>
     *常用坦克列表(空命令)
     * </pre>
     */
    CTS_WAREHOUSE_LIST(4, 7),
    /**
     * <code>STC_WAREHOUSE_LIST = 8;</code>
     *
     * <pre>
     *返回常用坦克列表
     * </pre>
     */
    STC_WAREHOUSE_LIST(5, 8),
    /**
     * <code>CTS_SAVE_WAREHOUSE = 9;</code>
     *
     * <pre>
     *保存常用坦克列表
     * </pre>
     */
    CTS_SAVE_WAREHOUSE(6, 9),
    /**
     * <code>STC_SAVE_WAREHOUSE = 10;</code>
     */
    STC_SAVE_WAREHOUSE(7, 10),
    /**
     * <code>CTS_WAREHOUSE_SCORE = 11;</code>
     *
     * <pre>
     *常用坦克比赛成绩
     * </pre>
     */
    CTS_WAREHOUSE_SCORE(8, 11),
    /**
     * <code>STC_WAREHOUSE_SCORE = 12;</code>
     *
     * <pre>
     *返回
     * </pre>
     */
    STC_WAREHOUSE_SCORE(9, 12),
    /**
     * <code>CTS_GOODS_WAR_CHANGE = 13;</code>
     *
     * <pre>
     *添加或更换战场道具
     * </pre>
     */
    CTS_GOODS_WAR_CHANGE(10, 13),
    /**
     * <code>STC_GOODS_WAR_CHANGE = 14;</code>
     */
    STC_GOODS_WAR_CHANGE(11, 14),
    /**
     * <code>CTS_GOODS_WAR_CLEAR = 15;</code>
     *
     * <pre>
     *清空道具列表
     * </pre>
     */
    CTS_GOODS_WAR_CLEAR(12, 15),
    /**
     * <code>STC_GOODS_WAR_CLEAR = 16;</code>
     */
    STC_GOODS_WAR_CLEAR(13, 16),
    /**
     * <code>CTS_CHANGE_MAINTANK = 19;</code>
     *
     * <pre>
     *更换主战坦克
     * </pre>
     */
    CTS_CHANGE_MAINTANK(14, 19),
    /**
     * <code>STC_CHANGE_MAINTANK = 20;</code>
     */
    STC_CHANGE_MAINTANK(15, 20),
    /**
     * <code>CTS_RESEARCH_COST = 21;</code>
     *
     * <pre>
     *获取研发坦克花费
     * </pre>
     */
    CTS_RESEARCH_COST(16, 21),
    /**
     * <code>STC_RESEARCH_COST = 22;</code>
     */
    STC_RESEARCH_COST(17, 22),
    /**
     * <code>STC_TANK_UPDATE_PUSH = 23;</code>
     *
     * <pre>
     *tank更新主推
     * </pre>
     */
    STC_TANK_UPDATE_PUSH(18, 23),
    /**
     * <code>CTS_TANK_EXP_TRANSLATE = 24;</code>
     *
     * <pre>
     *坦克经验 转为全局坦克经验
     * </pre>
     */
    CTS_TANK_EXP_TRANSLATE(19, 24),
    /**
     * <code>STC_TANK_EXP_TRANSLATE = 25;</code>
     */
    STC_TANK_EXP_TRANSLATE(20, 25),
    /**
     * <code>CTS_GOLD_TANK_LIST = 26;</code>
     *
     * <pre>
     *请求金币坦克列表（空消息）
     * </pre>
     */
    CTS_GOLD_TANK_LIST(21, 26),
    /**
     * <code>STC_GOLD_TANK_LIST = 27;</code>
     */
    STC_GOLD_TANK_LIST(22, 27),
    /**
     * <code>CTS_GOLD_TANK_BUY = 28;</code>
     *
     * <pre>
     *金币坦克购买
     * </pre>
     */
    CTS_GOLD_TANK_BUY(23, 28),
    /**
     * <code>CTS_BUYPARK = 29;</code>
     *
     * <pre>
     *购买车位
     * </pre>
     */
    CTS_BUYPARK(24, 29),
    /**
     * <code>STC_BUYPARK = 30;</code>
     *
     * <pre>
     *购买车位返回
     * </pre>
     */
    STC_BUYPARK(25, 30),
    /**
     * <code>CTS_BUYPARK_GOLD = 31;</code>
     *
     * <pre>
     *购买车位花费
     * </pre>
     */
    CTS_BUYPARK_GOLD(26, 31),
    /**
     * <code>STC_BUYPARK_GOLD = 32;</code>
     *
     * <pre>
     *购买车位花费返回
     * </pre>
     */
    STC_BUYPARK_GOLD(27, 32),
    /**
     * <code>CTS_STRENGTHEN = 33;</code>
     *
     * <pre>
     *新强化
     * </pre>
     */
    CTS_STRENGTHEN(28, 33),
    /**
     * <code>STC_STRENGTHEN = 34;</code>
     *
     * <pre>
     *新强化返回
     * </pre>
     */
    STC_STRENGTHEN(29, 34),
    /**
     * <code>CTS_OPEN_GROOVE_SHOW = 35;</code>
     *
     * <pre>
     *开槽信息
     * </pre>
     */
    CTS_OPEN_GROOVE_SHOW(30, 35),
    /**
     * <code>STC_OPEN_GROOVE_SHOW = 36;</code>
     *
     * <pre>
     *开槽信息返回
     * </pre>
     */
    STC_OPEN_GROOVE_SHOW(31, 36),
    /**
     * <code>CTS_OPEN_GROOVE = 37;</code>
     *
     * <pre>
     *开槽
     * </pre>
     */
    CTS_OPEN_GROOVE(32, 37),
    /**
     * <code>STC_OPEN_GROOVE = 38;</code>
     *
     * <pre>
     *开槽返回 
     * </pre>
     */
    STC_OPEN_GROOVE(33, 38),
    /**
     * <code>CTS_CLEAR_FREEZE = 39;</code>
     *
     * <pre>
     *消除冷却
     * </pre>
     */
    CTS_CLEAR_FREEZE(34, 39),
    /**
     * <code>STC_CLEAR_FREEZE = 40;</code>
     *
     * <pre>
     *消除冷却返回
     * </pre>
     */
    STC_CLEAR_FREEZE(35, 40),
    /**
     * <code>CTS_ONE_KEY_STRENGTHEN = 41;</code>
     *
     * <pre>
     * 一键强化需要金币数
     * </pre>
     */
    CTS_ONE_KEY_STRENGTHEN(36, 41),
    /**
     * <code>STC_ONE_KEY_STRENGTHEN = 42;</code>
     *
     * <pre>
     * 一键强化需要金币数返回
     * </pre>
     */
    STC_ONE_KEY_STRENGTHEN(37, 42),
    /**
     * <code>CTS_UP_DOWN = 43;</code>
     *
     * <pre>
     * 装和卸
     * </pre>
     */
    CTS_UP_DOWN(38, 43),
    /**
     * <code>STC_UP_DOWN = 44;</code>
     *
     * <pre>
     * 装和卸返回
     * </pre>
     */
    STC_UP_DOWN(39, 44),
    /**
     * <code>CTS_TANK_DEVELOP_LIST = 45;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    CTS_TANK_DEVELOP_LIST(40, 45),
    /**
     * <code>STC_TANK_DEVELOP_LIST = 46;</code>
     *
     * <pre>
     *坦克列表返回
     * </pre>
     */
    STC_TANK_DEVELOP_LIST(41, 46),
    /**
     * <code>CTS_TANK_DEVELOP = 47;</code>
     *
     * <pre>
     *坦克研发
     * </pre>
     */
    CTS_TANK_DEVELOP(42, 47),
    /**
     * <code>STC_TANK_DEVELOP = 48;</code>
     *
     * <pre>
     *坦克研发返回
     * </pre>
     */
    STC_TANK_DEVELOP(43, 48),
    ;

    /**
     * <code>CTS_TANK_LIST = 1;</code>
     *
     * <pre>
     *已拥有的坦克列表		(空命令)
     * </pre>
     */
    public static final int CTS_TANK_LIST_VALUE = 1;
    /**
     * <code>CTS_TANK_BUY = 3;</code>
     *
     * <pre>
     *购买坦克				(CTS_TANK_BUY_MSG)
     * </pre>
     */
    public static final int CTS_TANK_BUY_VALUE = 3;
    /**
     * <code>STC_TANK_LIST = 4;</code>
     *
     * <pre>
     *返回已拥有的坦克列表	(STC_TANK_LIST_MSG)
     * </pre>
     */
    public static final int STC_TANK_LIST_VALUE = 4;
    /**
     * <code>STC_TANK_BUY = 6;</code>
     *
     * <pre>
     *购买坦克返回			(STC_TANK_BUY_MSG)
     * </pre>
     */
    public static final int STC_TANK_BUY_VALUE = 6;
    /**
     * <code>CTS_WAREHOUSE_LIST = 7;</code>
     *
     * <pre>
     *常用坦克列表(空命令)
     * </pre>
     */
    public static final int CTS_WAREHOUSE_LIST_VALUE = 7;
    /**
     * <code>STC_WAREHOUSE_LIST = 8;</code>
     *
     * <pre>
     *返回常用坦克列表
     * </pre>
     */
    public static final int STC_WAREHOUSE_LIST_VALUE = 8;
    /**
     * <code>CTS_SAVE_WAREHOUSE = 9;</code>
     *
     * <pre>
     *保存常用坦克列表
     * </pre>
     */
    public static final int CTS_SAVE_WAREHOUSE_VALUE = 9;
    /**
     * <code>STC_SAVE_WAREHOUSE = 10;</code>
     */
    public static final int STC_SAVE_WAREHOUSE_VALUE = 10;
    /**
     * <code>CTS_WAREHOUSE_SCORE = 11;</code>
     *
     * <pre>
     *常用坦克比赛成绩
     * </pre>
     */
    public static final int CTS_WAREHOUSE_SCORE_VALUE = 11;
    /**
     * <code>STC_WAREHOUSE_SCORE = 12;</code>
     *
     * <pre>
     *返回
     * </pre>
     */
    public static final int STC_WAREHOUSE_SCORE_VALUE = 12;
    /**
     * <code>CTS_GOODS_WAR_CHANGE = 13;</code>
     *
     * <pre>
     *添加或更换战场道具
     * </pre>
     */
    public static final int CTS_GOODS_WAR_CHANGE_VALUE = 13;
    /**
     * <code>STC_GOODS_WAR_CHANGE = 14;</code>
     */
    public static final int STC_GOODS_WAR_CHANGE_VALUE = 14;
    /**
     * <code>CTS_GOODS_WAR_CLEAR = 15;</code>
     *
     * <pre>
     *清空道具列表
     * </pre>
     */
    public static final int CTS_GOODS_WAR_CLEAR_VALUE = 15;
    /**
     * <code>STC_GOODS_WAR_CLEAR = 16;</code>
     */
    public static final int STC_GOODS_WAR_CLEAR_VALUE = 16;
    /**
     * <code>CTS_CHANGE_MAINTANK = 19;</code>
     *
     * <pre>
     *更换主战坦克
     * </pre>
     */
    public static final int CTS_CHANGE_MAINTANK_VALUE = 19;
    /**
     * <code>STC_CHANGE_MAINTANK = 20;</code>
     */
    public static final int STC_CHANGE_MAINTANK_VALUE = 20;
    /**
     * <code>CTS_RESEARCH_COST = 21;</code>
     *
     * <pre>
     *获取研发坦克花费
     * </pre>
     */
    public static final int CTS_RESEARCH_COST_VALUE = 21;
    /**
     * <code>STC_RESEARCH_COST = 22;</code>
     */
    public static final int STC_RESEARCH_COST_VALUE = 22;
    /**
     * <code>STC_TANK_UPDATE_PUSH = 23;</code>
     *
     * <pre>
     *tank更新主推
     * </pre>
     */
    public static final int STC_TANK_UPDATE_PUSH_VALUE = 23;
    /**
     * <code>CTS_TANK_EXP_TRANSLATE = 24;</code>
     *
     * <pre>
     *坦克经验 转为全局坦克经验
     * </pre>
     */
    public static final int CTS_TANK_EXP_TRANSLATE_VALUE = 24;
    /**
     * <code>STC_TANK_EXP_TRANSLATE = 25;</code>
     */
    public static final int STC_TANK_EXP_TRANSLATE_VALUE = 25;
    /**
     * <code>CTS_GOLD_TANK_LIST = 26;</code>
     *
     * <pre>
     *请求金币坦克列表（空消息）
     * </pre>
     */
    public static final int CTS_GOLD_TANK_LIST_VALUE = 26;
    /**
     * <code>STC_GOLD_TANK_LIST = 27;</code>
     */
    public static final int STC_GOLD_TANK_LIST_VALUE = 27;
    /**
     * <code>CTS_GOLD_TANK_BUY = 28;</code>
     *
     * <pre>
     *金币坦克购买
     * </pre>
     */
    public static final int CTS_GOLD_TANK_BUY_VALUE = 28;
    /**
     * <code>CTS_BUYPARK = 29;</code>
     *
     * <pre>
     *购买车位
     * </pre>
     */
    public static final int CTS_BUYPARK_VALUE = 29;
    /**
     * <code>STC_BUYPARK = 30;</code>
     *
     * <pre>
     *购买车位返回
     * </pre>
     */
    public static final int STC_BUYPARK_VALUE = 30;
    /**
     * <code>CTS_BUYPARK_GOLD = 31;</code>
     *
     * <pre>
     *购买车位花费
     * </pre>
     */
    public static final int CTS_BUYPARK_GOLD_VALUE = 31;
    /**
     * <code>STC_BUYPARK_GOLD = 32;</code>
     *
     * <pre>
     *购买车位花费返回
     * </pre>
     */
    public static final int STC_BUYPARK_GOLD_VALUE = 32;
    /**
     * <code>CTS_STRENGTHEN = 33;</code>
     *
     * <pre>
     *新强化
     * </pre>
     */
    public static final int CTS_STRENGTHEN_VALUE = 33;
    /**
     * <code>STC_STRENGTHEN = 34;</code>
     *
     * <pre>
     *新强化返回
     * </pre>
     */
    public static final int STC_STRENGTHEN_VALUE = 34;
    /**
     * <code>CTS_OPEN_GROOVE_SHOW = 35;</code>
     *
     * <pre>
     *开槽信息
     * </pre>
     */
    public static final int CTS_OPEN_GROOVE_SHOW_VALUE = 35;
    /**
     * <code>STC_OPEN_GROOVE_SHOW = 36;</code>
     *
     * <pre>
     *开槽信息返回
     * </pre>
     */
    public static final int STC_OPEN_GROOVE_SHOW_VALUE = 36;
    /**
     * <code>CTS_OPEN_GROOVE = 37;</code>
     *
     * <pre>
     *开槽
     * </pre>
     */
    public static final int CTS_OPEN_GROOVE_VALUE = 37;
    /**
     * <code>STC_OPEN_GROOVE = 38;</code>
     *
     * <pre>
     *开槽返回 
     * </pre>
     */
    public static final int STC_OPEN_GROOVE_VALUE = 38;
    /**
     * <code>CTS_CLEAR_FREEZE = 39;</code>
     *
     * <pre>
     *消除冷却
     * </pre>
     */
    public static final int CTS_CLEAR_FREEZE_VALUE = 39;
    /**
     * <code>STC_CLEAR_FREEZE = 40;</code>
     *
     * <pre>
     *消除冷却返回
     * </pre>
     */
    public static final int STC_CLEAR_FREEZE_VALUE = 40;
    /**
     * <code>CTS_ONE_KEY_STRENGTHEN = 41;</code>
     *
     * <pre>
     * 一键强化需要金币数
     * </pre>
     */
    public static final int CTS_ONE_KEY_STRENGTHEN_VALUE = 41;
    /**
     * <code>STC_ONE_KEY_STRENGTHEN = 42;</code>
     *
     * <pre>
     * 一键强化需要金币数返回
     * </pre>
     */
    public static final int STC_ONE_KEY_STRENGTHEN_VALUE = 42;
    /**
     * <code>CTS_UP_DOWN = 43;</code>
     *
     * <pre>
     * 装和卸
     * </pre>
     */
    public static final int CTS_UP_DOWN_VALUE = 43;
    /**
     * <code>STC_UP_DOWN = 44;</code>
     *
     * <pre>
     * 装和卸返回
     * </pre>
     */
    public static final int STC_UP_DOWN_VALUE = 44;
    /**
     * <code>CTS_TANK_DEVELOP_LIST = 45;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public static final int CTS_TANK_DEVELOP_LIST_VALUE = 45;
    /**
     * <code>STC_TANK_DEVELOP_LIST = 46;</code>
     *
     * <pre>
     *坦克列表返回
     * </pre>
     */
    public static final int STC_TANK_DEVELOP_LIST_VALUE = 46;
    /**
     * <code>CTS_TANK_DEVELOP = 47;</code>
     *
     * <pre>
     *坦克研发
     * </pre>
     */
    public static final int CTS_TANK_DEVELOP_VALUE = 47;
    /**
     * <code>STC_TANK_DEVELOP = 48;</code>
     *
     * <pre>
     *坦克研发返回
     * </pre>
     */
    public static final int STC_TANK_DEVELOP_VALUE = 48;


    public final int getNumber() { return value; }

    public static CMD_ID valueOf(int value) {
      switch (value) {
        case 1: return CTS_TANK_LIST;
        case 3: return CTS_TANK_BUY;
        case 4: return STC_TANK_LIST;
        case 6: return STC_TANK_BUY;
        case 7: return CTS_WAREHOUSE_LIST;
        case 8: return STC_WAREHOUSE_LIST;
        case 9: return CTS_SAVE_WAREHOUSE;
        case 10: return STC_SAVE_WAREHOUSE;
        case 11: return CTS_WAREHOUSE_SCORE;
        case 12: return STC_WAREHOUSE_SCORE;
        case 13: return CTS_GOODS_WAR_CHANGE;
        case 14: return STC_GOODS_WAR_CHANGE;
        case 15: return CTS_GOODS_WAR_CLEAR;
        case 16: return STC_GOODS_WAR_CLEAR;
        case 19: return CTS_CHANGE_MAINTANK;
        case 20: return STC_CHANGE_MAINTANK;
        case 21: return CTS_RESEARCH_COST;
        case 22: return STC_RESEARCH_COST;
        case 23: return STC_TANK_UPDATE_PUSH;
        case 24: return CTS_TANK_EXP_TRANSLATE;
        case 25: return STC_TANK_EXP_TRANSLATE;
        case 26: return CTS_GOLD_TANK_LIST;
        case 27: return STC_GOLD_TANK_LIST;
        case 28: return CTS_GOLD_TANK_BUY;
        case 29: return CTS_BUYPARK;
        case 30: return STC_BUYPARK;
        case 31: return CTS_BUYPARK_GOLD;
        case 32: return STC_BUYPARK_GOLD;
        case 33: return CTS_STRENGTHEN;
        case 34: return STC_STRENGTHEN;
        case 35: return CTS_OPEN_GROOVE_SHOW;
        case 36: return STC_OPEN_GROOVE_SHOW;
        case 37: return CTS_OPEN_GROOVE;
        case 38: return STC_OPEN_GROOVE;
        case 39: return CTS_CLEAR_FREEZE;
        case 40: return STC_CLEAR_FREEZE;
        case 41: return CTS_ONE_KEY_STRENGTHEN;
        case 42: return STC_ONE_KEY_STRENGTHEN;
        case 43: return CTS_UP_DOWN;
        case 44: return STC_UP_DOWN;
        case 45: return CTS_TANK_DEVELOP_LIST;
        case 46: return STC_TANK_DEVELOP_LIST;
        case 47: return CTS_TANK_DEVELOP;
        case 48: return STC_TANK_DEVELOP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CMD_ID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CMD_ID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CMD_ID>() {
            public CMD_ID findValueByNumber(int number) {
              return CMD_ID.valueOf(number);
            }
          };

    private final int value;

    private CMD_ID(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_TANK.CMD_ID)
  }

  /**
   * Protobuf enum {@code PROTO_TANK.COUNTRY}
   */
  public enum COUNTRY
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>US = 1;</code>
     *
     * <pre>
     *美国
     * </pre>
     */
    US(0, 1),
    /**
     * <code>SU = 2;</code>
     *
     * <pre>
     *苏联
     * </pre>
     */
    SU(1, 2),
    /**
     * <code>DE = 3;</code>
     *
     * <pre>
     *德国
     * </pre>
     */
    DE(2, 3),
    /**
     * <code>ES = 4;</code>
     *
     * <pre>
     *英国
     * </pre>
     */
    ES(3, 4),
    ;

    /**
     * <code>US = 1;</code>
     *
     * <pre>
     *美国
     * </pre>
     */
    public static final int US_VALUE = 1;
    /**
     * <code>SU = 2;</code>
     *
     * <pre>
     *苏联
     * </pre>
     */
    public static final int SU_VALUE = 2;
    /**
     * <code>DE = 3;</code>
     *
     * <pre>
     *德国
     * </pre>
     */
    public static final int DE_VALUE = 3;
    /**
     * <code>ES = 4;</code>
     *
     * <pre>
     *英国
     * </pre>
     */
    public static final int ES_VALUE = 4;


    public final int getNumber() { return value; }

    public static COUNTRY valueOf(int value) {
      switch (value) {
        case 1: return US;
        case 2: return SU;
        case 3: return DE;
        case 4: return ES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<COUNTRY>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<COUNTRY>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<COUNTRY>() {
            public COUNTRY findValueByNumber(int number) {
              return COUNTRY.valueOf(number);
            }
          };

    private final int value;

    private COUNTRY(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_TANK.COUNTRY)
  }

  /**
   * Protobuf enum {@code PROTO_TANK.PART_INDEX}
   */
  public enum PART_INDEX
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>HIT = 1;</code>
     *
     * <pre>
     *伤害
     * </pre>
     */
    HIT(0, 1),
    /**
     * <code>PRECISION = 2;</code>
     *
     * <pre>
     *精度
     * </pre>
     */
    PRECISION(1, 2),
    /**
     * <code>STAB = 3;</code>
     *
     * <pre>
     *穿透
     * </pre>
     */
    STAB(2, 3),
    /**
     * <code>ARMOR = 4;</code>
     *
     * <pre>
     *装甲
     * </pre>
     */
    ARMOR(3, 4),
    /**
     * <code>HP = 5;</code>
     *
     * <pre>
     *生命
     * </pre>
     */
    HP(4, 5),
    /**
     * <code>SPEED = 6;</code>
     *
     * <pre>
     *速度
     * </pre>
     */
    SPEED(5, 6),
    /**
     * <code>TURN = 7;</code>
     *
     * <pre>
     *转向
     * </pre>
     */
    TURN(6, 7),
    ;

    /**
     * <code>HIT = 1;</code>
     *
     * <pre>
     *伤害
     * </pre>
     */
    public static final int HIT_VALUE = 1;
    /**
     * <code>PRECISION = 2;</code>
     *
     * <pre>
     *精度
     * </pre>
     */
    public static final int PRECISION_VALUE = 2;
    /**
     * <code>STAB = 3;</code>
     *
     * <pre>
     *穿透
     * </pre>
     */
    public static final int STAB_VALUE = 3;
    /**
     * <code>ARMOR = 4;</code>
     *
     * <pre>
     *装甲
     * </pre>
     */
    public static final int ARMOR_VALUE = 4;
    /**
     * <code>HP = 5;</code>
     *
     * <pre>
     *生命
     * </pre>
     */
    public static final int HP_VALUE = 5;
    /**
     * <code>SPEED = 6;</code>
     *
     * <pre>
     *速度
     * </pre>
     */
    public static final int SPEED_VALUE = 6;
    /**
     * <code>TURN = 7;</code>
     *
     * <pre>
     *转向
     * </pre>
     */
    public static final int TURN_VALUE = 7;


    public final int getNumber() { return value; }

    public static PART_INDEX valueOf(int value) {
      switch (value) {
        case 1: return HIT;
        case 2: return PRECISION;
        case 3: return STAB;
        case 4: return ARMOR;
        case 5: return HP;
        case 6: return SPEED;
        case 7: return TURN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PART_INDEX>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PART_INDEX>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PART_INDEX>() {
            public PART_INDEX findValueByNumber(int number) {
              return PART_INDEX.valueOf(number);
            }
          };

    private final int value;

    private PART_INDEX(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_TANK.PART_INDEX)
  }

  /**
   * Protobuf enum {@code PROTO_TANK.RewardType}
   *
   * <pre>
   *奖励类型
   * </pre>
   */
  public enum RewardType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TANK = 1;</code>
     *
     * <pre>
     *坦克
     * </pre>
     */
    TANK(0, 1),
    /**
     * <code>MEMBER = 2;</code>
     *
     * <pre>
     *船员
     * </pre>
     */
    MEMBER(1, 2),
    /**
     * <code>GOODS = 3;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    GOODS(2, 3),
    /**
     * <code>GOLD = 4;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    GOLD(3, 4),
    /**
     * <code>IRON = 5;</code>
     *
     * <pre>
     *银币
     * </pre>
     */
    IRON(4, 5),
    /**
     * <code>HONOR = 6;</code>
     *
     * <pre>
     *荣誉
     * </pre>
     */
    HONOR(5, 6),
    /**
     * <code>EXP = 7;</code>
     *
     * <pre>
     *经验 
     * </pre>
     */
    EXP(6, 7),
    /**
     * <code>TANKEXP = 8;</code>
     *
     * <pre>
     *全局经验 
     * </pre>
     */
    TANKEXP(7, 8),
    /**
     * <code>DIAMONDS = 9;</code>
     *
     * <pre>
     *钻石
     * </pre>
     */
    DIAMONDS(8, 9),
    ;

    /**
     * <code>TANK = 1;</code>
     *
     * <pre>
     *坦克
     * </pre>
     */
    public static final int TANK_VALUE = 1;
    /**
     * <code>MEMBER = 2;</code>
     *
     * <pre>
     *船员
     * </pre>
     */
    public static final int MEMBER_VALUE = 2;
    /**
     * <code>GOODS = 3;</code>
     *
     * <pre>
     *物品
     * </pre>
     */
    public static final int GOODS_VALUE = 3;
    /**
     * <code>GOLD = 4;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public static final int GOLD_VALUE = 4;
    /**
     * <code>IRON = 5;</code>
     *
     * <pre>
     *银币
     * </pre>
     */
    public static final int IRON_VALUE = 5;
    /**
     * <code>HONOR = 6;</code>
     *
     * <pre>
     *荣誉
     * </pre>
     */
    public static final int HONOR_VALUE = 6;
    /**
     * <code>EXP = 7;</code>
     *
     * <pre>
     *经验 
     * </pre>
     */
    public static final int EXP_VALUE = 7;
    /**
     * <code>TANKEXP = 8;</code>
     *
     * <pre>
     *全局经验 
     * </pre>
     */
    public static final int TANKEXP_VALUE = 8;
    /**
     * <code>DIAMONDS = 9;</code>
     *
     * <pre>
     *钻石
     * </pre>
     */
    public static final int DIAMONDS_VALUE = 9;


    public final int getNumber() { return value; }

    public static RewardType valueOf(int value) {
      switch (value) {
        case 1: return TANK;
        case 2: return MEMBER;
        case 3: return GOODS;
        case 4: return GOLD;
        case 5: return IRON;
        case 6: return HONOR;
        case 7: return EXP;
        case 8: return TANKEXP;
        case 9: return DIAMONDS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RewardType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RewardType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RewardType>() {
            public RewardType findValueByNumber(int number) {
              return RewardType.valueOf(number);
            }
          };

    private final int value;

    private RewardType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_TANK.RewardType)
  }

  public interface STC_TANK_LIST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_TANK.TankItem tanks = 1;
    /**
     * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.TANK_MSG.TankItem> 
        getTanksList();
    /**
     * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.TankItem getTanks(int index);
    /**
     * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    int getTanksCount();

    // required int32 park = 2;
    /**
     * <code>required int32 park = 2;</code>
     *
     * <pre>
     *已拥有的车位
     * </pre>
     */
    boolean hasPark();
    /**
     * <code>required int32 park = 2;</code>
     *
     * <pre>
     *已拥有的车位
     * </pre>
     */
    int getPark();

    // optional .PROTO_TANK.Freeze_Info freezeInfo = 3;
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
     *
     * <pre>
     *冷却体
     * </pre>
     */
    boolean hasFreezeInfo();
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
     *
     * <pre>
     *冷却体
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_TANK_LIST_MSG}
   */
  public static final class STC_TANK_LIST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TANK_LIST_MSGOrBuilder {
    // Use STC_TANK_LIST_MSG.newBuilder() to construct.
    private STC_TANK_LIST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TANK_LIST_MSG(boolean noInit) {}

    private static final STC_TANK_LIST_MSG defaultInstance;
    public static STC_TANK_LIST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TANK_LIST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TANK_LIST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.TankItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              tanks_.add(input.readMessage(com.ourpalm.tank.message.TANK_MSG.TankItem.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              park_ = input.readInt32();
              break;
            }
            case 26: {
              com.ourpalm.tank.message.TANK_MSG.Freeze_Info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = freezeInfo_.toBuilder();
              }
              freezeInfo_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.Freeze_Info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freezeInfo_);
                freezeInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TANK_LIST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TANK_LIST_MSG>() {
      public STC_TANK_LIST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TANK_LIST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TANK_LIST_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .PROTO_TANK.TankItem tanks = 1;
    public static final int TANKS_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.TANK_MSG.TankItem> tanks_;
    /**
     * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.TANK_MSG.TankItem> getTanksList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.TANK_MSG.TankItemOrBuilder> 
        getTanksOrBuilderList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public int getTanksCount() {
      return tanks_.size();
    }
    /**
     * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.TankItem getTanks(int index) {
      return tanks_.get(index);
    }
    /**
     * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.TankItemOrBuilder getTanksOrBuilder(
        int index) {
      return tanks_.get(index);
    }

    // required int32 park = 2;
    public static final int PARK_FIELD_NUMBER = 2;
    private int park_;
    /**
     * <code>required int32 park = 2;</code>
     *
     * <pre>
     *已拥有的车位
     * </pre>
     */
    public boolean hasPark() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 park = 2;</code>
     *
     * <pre>
     *已拥有的车位
     * </pre>
     */
    public int getPark() {
      return park_;
    }

    // optional .PROTO_TANK.Freeze_Info freezeInfo = 3;
    public static final int FREEZEINFO_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.TANK_MSG.Freeze_Info freezeInfo_;
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
     *
     * <pre>
     *冷却体
     * </pre>
     */
    public boolean hasFreezeInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
     *
     * <pre>
     *冷却体
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo() {
      return freezeInfo_;
    }

    private void initFields() {
      tanks_ = java.util.Collections.emptyList();
      park_ = 0;
      freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPark()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTanksCount(); i++) {
        if (!getTanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tanks_.size(); i++) {
        output.writeMessage(1, tanks_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, park_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, freezeInfo_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tanks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tanks_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, park_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, freezeInfo_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_TANK_LIST_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        park_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tanks_ = tanks_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.park_ = park_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freezeInfo_ = freezeInfo_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG.getDefaultInstance()) return this;
        if (!other.tanks_.isEmpty()) {
          if (tanks_.isEmpty()) {
            tanks_ = other.tanks_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTanksIsMutable();
            tanks_.addAll(other.tanks_);
          }
          
        }
        if (other.hasPark()) {
          setPark(other.getPark());
        }
        if (other.hasFreezeInfo()) {
          mergeFreezeInfo(other.getFreezeInfo());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPark()) {
          
          return false;
        }
        for (int i = 0; i < getTanksCount(); i++) {
          if (!getTanks(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_TANK_LIST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_TANK.TankItem tanks = 1;
      private java.util.List<com.ourpalm.tank.message.TANK_MSG.TankItem> tanks_ =
        java.util.Collections.emptyList();
      private void ensureTanksIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.TankItem>(tanks_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.TANK_MSG.TankItem> getTanksList() {
        return java.util.Collections.unmodifiableList(tanks_);
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public int getTanksCount() {
        return tanks_.size();
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.TankItem getTanks(int index) {
        return tanks_.get(index);
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.TankItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(com.ourpalm.tank.message.TANK_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          com.ourpalm.tank.message.TANK_MSG.TankItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.TankItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addAllTanks(
          java.lang.Iterable<? extends com.ourpalm.tank.message.TANK_MSG.TankItem> values) {
        ensureTanksIsMutable();
        super.addAll(values, tanks_);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder clearTanks() {
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder removeTanks(int index) {
        ensureTanksIsMutable();
        tanks_.remove(index);

        return this;
      }

      // required int32 park = 2;
      private int park_ ;
      /**
       * <code>required int32 park = 2;</code>
       *
       * <pre>
       *已拥有的车位
       * </pre>
       */
      public boolean hasPark() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 park = 2;</code>
       *
       * <pre>
       *已拥有的车位
       * </pre>
       */
      public int getPark() {
        return park_;
      }
      /**
       * <code>required int32 park = 2;</code>
       *
       * <pre>
       *已拥有的车位
       * </pre>
       */
      public Builder setPark(int value) {
        bitField0_ |= 0x00000002;
        park_ = value;
        
        return this;
      }
      /**
       * <code>required int32 park = 2;</code>
       *
       * <pre>
       *已拥有的车位
       * </pre>
       */
      public Builder clearPark() {
        bitField0_ = (bitField0_ & ~0x00000002);
        park_ = 0;
        
        return this;
      }

      // optional .PROTO_TANK.Freeze_Info freezeInfo = 3;
      private com.ourpalm.tank.message.TANK_MSG.Freeze_Info freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public boolean hasFreezeInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo() {
        return freezeInfo_;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public Builder setFreezeInfo(com.ourpalm.tank.message.TANK_MSG.Freeze_Info value) {
        if (value == null) {
          throw new NullPointerException();
        }
        freezeInfo_ = value;

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public Builder setFreezeInfo(
          com.ourpalm.tank.message.TANK_MSG.Freeze_Info.Builder builderForValue) {
        freezeInfo_ = builderForValue.build();

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public Builder mergeFreezeInfo(com.ourpalm.tank.message.TANK_MSG.Freeze_Info value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            freezeInfo_ != com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance()) {
          freezeInfo_ =
            com.ourpalm.tank.message.TANK_MSG.Freeze_Info.newBuilder(freezeInfo_).mergeFrom(value).buildPartial();
        } else {
          freezeInfo_ = value;
        }

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public Builder clearFreezeInfo() {
        freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_TANK_LIST_MSG)
    }

    static {
      defaultInstance = new STC_TANK_LIST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_TANK_LIST_MSG)
  }

  public interface TankItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // required uint32 tankExp = 2;
    /**
     * <code>required uint32 tankExp = 2;</code>
     *
     * <pre>
     *坦克经验值
     * </pre>
     */
    boolean hasTankExp();
    /**
     * <code>required uint32 tankExp = 2;</code>
     *
     * <pre>
     *坦克经验值
     * </pre>
     */
    int getTankExp();

    // required uint32 tired = 3;
    /**
     * <code>required uint32 tired = 3;</code>
     *
     * <pre>
     *疲劳值
     * </pre>
     */
    boolean hasTired();
    /**
     * <code>required uint32 tired = 3;</code>
     *
     * <pre>
     *疲劳值
     * </pre>
     */
    int getTired();

    // required uint32 tiredMax = 4;
    /**
     * <code>required uint32 tiredMax = 4;</code>
     *
     * <pre>
     *疲劳最大值
     * </pre>
     */
    boolean hasTiredMax();
    /**
     * <code>required uint32 tiredMax = 4;</code>
     *
     * <pre>
     *疲劳最大值
     * </pre>
     */
    int getTiredMax();

    // repeated .PROTO_TANK.PartNewInfo infos = 5;
    /**
     * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
     *
     * <pre>
     *新改装配件体s
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.TANK_MSG.PartNewInfo> 
        getInfosList();
    /**
     * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
     *
     * <pre>
     *新改装配件体s
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.PartNewInfo getInfos(int index);
    /**
     * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
     *
     * <pre>
     *新改装配件体s
     * </pre>
     */
    int getInfosCount();

    // optional int32 grooveNum = 6;
    /**
     * <code>optional int32 grooveNum = 6;</code>
     *
     * <pre>
     *当前已激活的槽位
     * </pre>
     */
    boolean hasGrooveNum();
    /**
     * <code>optional int32 grooveNum = 6;</code>
     *
     * <pre>
     *当前已激活的槽位
     * </pre>
     */
    int getGrooveNum();

    // optional int32 partOnNum = 7;
    /**
     * <code>optional int32 partOnNum = 7;</code>
     *
     * <pre>
     *当前已装备的槽位
     * </pre>
     */
    boolean hasPartOnNum();
    /**
     * <code>optional int32 partOnNum = 7;</code>
     *
     * <pre>
     *当前已装备的槽位
     * </pre>
     */
    int getPartOnNum();
  }
  /**
   * Protobuf type {@code PROTO_TANK.TankItem}
   */
  public static final class TankItem extends
      com.google.protobuf.GeneratedMessageLite
      implements TankItemOrBuilder {
    // Use TankItem.newBuilder() to construct.
    private TankItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TankItem(boolean noInit) {}

    private static final TankItem defaultInstance;
    public static TankItem getDefaultInstance() {
      return defaultInstance;
    }

    public TankItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TankItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankExp_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tired_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              tiredMax_ = input.readUInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                infos_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.PartNewInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              infos_.add(input.readMessage(com.ourpalm.tank.message.TANK_MSG.PartNewInfo.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              grooveNum_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              partOnNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          infos_ = java.util.Collections.unmodifiableList(infos_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TankItem> PARSER =
        new com.google.protobuf.AbstractParser<TankItem>() {
      public TankItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TankItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TankItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 tankExp = 2;
    public static final int TANKEXP_FIELD_NUMBER = 2;
    private int tankExp_;
    /**
     * <code>required uint32 tankExp = 2;</code>
     *
     * <pre>
     *坦克经验值
     * </pre>
     */
    public boolean hasTankExp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankExp = 2;</code>
     *
     * <pre>
     *坦克经验值
     * </pre>
     */
    public int getTankExp() {
      return tankExp_;
    }

    // required uint32 tired = 3;
    public static final int TIRED_FIELD_NUMBER = 3;
    private int tired_;
    /**
     * <code>required uint32 tired = 3;</code>
     *
     * <pre>
     *疲劳值
     * </pre>
     */
    public boolean hasTired() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 tired = 3;</code>
     *
     * <pre>
     *疲劳值
     * </pre>
     */
    public int getTired() {
      return tired_;
    }

    // required uint32 tiredMax = 4;
    public static final int TIREDMAX_FIELD_NUMBER = 4;
    private int tiredMax_;
    /**
     * <code>required uint32 tiredMax = 4;</code>
     *
     * <pre>
     *疲劳最大值
     * </pre>
     */
    public boolean hasTiredMax() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 tiredMax = 4;</code>
     *
     * <pre>
     *疲劳最大值
     * </pre>
     */
    public int getTiredMax() {
      return tiredMax_;
    }

    // repeated .PROTO_TANK.PartNewInfo infos = 5;
    public static final int INFOS_FIELD_NUMBER = 5;
    private java.util.List<com.ourpalm.tank.message.TANK_MSG.PartNewInfo> infos_;
    /**
     * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
     *
     * <pre>
     *新改装配件体s
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.TANK_MSG.PartNewInfo> getInfosList() {
      return infos_;
    }
    /**
     * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
     *
     * <pre>
     *新改装配件体s
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.TANK_MSG.PartNewInfoOrBuilder> 
        getInfosOrBuilderList() {
      return infos_;
    }
    /**
     * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
     *
     * <pre>
     *新改装配件体s
     * </pre>
     */
    public int getInfosCount() {
      return infos_.size();
    }
    /**
     * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
     *
     * <pre>
     *新改装配件体s
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.PartNewInfo getInfos(int index) {
      return infos_.get(index);
    }
    /**
     * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
     *
     * <pre>
     *新改装配件体s
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.PartNewInfoOrBuilder getInfosOrBuilder(
        int index) {
      return infos_.get(index);
    }

    // optional int32 grooveNum = 6;
    public static final int GROOVENUM_FIELD_NUMBER = 6;
    private int grooveNum_;
    /**
     * <code>optional int32 grooveNum = 6;</code>
     *
     * <pre>
     *当前已激活的槽位
     * </pre>
     */
    public boolean hasGrooveNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 grooveNum = 6;</code>
     *
     * <pre>
     *当前已激活的槽位
     * </pre>
     */
    public int getGrooveNum() {
      return grooveNum_;
    }

    // optional int32 partOnNum = 7;
    public static final int PARTONNUM_FIELD_NUMBER = 7;
    private int partOnNum_;
    /**
     * <code>optional int32 partOnNum = 7;</code>
     *
     * <pre>
     *当前已装备的槽位
     * </pre>
     */
    public boolean hasPartOnNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 partOnNum = 7;</code>
     *
     * <pre>
     *当前已装备的槽位
     * </pre>
     */
    public int getPartOnNum() {
      return partOnNum_;
    }

    private void initFields() {
      tankId_ = 0;
      tankExp_ = 0;
      tired_ = 0;
      tiredMax_ = 0;
      infos_ = java.util.Collections.emptyList();
      grooveNum_ = 0;
      partOnNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTired()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTiredMax()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankExp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, tired_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, tiredMax_);
      }
      for (int i = 0; i < infos_.size(); i++) {
        output.writeMessage(5, infos_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, grooveNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, partOnNum_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankExp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tired_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, tiredMax_);
      }
      for (int i = 0; i < infos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, infos_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, grooveNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, partOnNum_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.TankItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.TankItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.TankItem, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.TankItemOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.TankItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankExp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tired_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        tiredMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        infos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        grooveNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        partOnNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.TankItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.TankItem build() {
        com.ourpalm.tank.message.TANK_MSG.TankItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.TankItem buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.TankItem result = new com.ourpalm.tank.message.TANK_MSG.TankItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankExp_ = tankExp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tired_ = tired_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tiredMax_ = tiredMax_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          infos_ = java.util.Collections.unmodifiableList(infos_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.infos_ = infos_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.grooveNum_ = grooveNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.partOnNum_ = partOnNum_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.TankItem other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasTankExp()) {
          setTankExp(other.getTankExp());
        }
        if (other.hasTired()) {
          setTired(other.getTired());
        }
        if (other.hasTiredMax()) {
          setTiredMax(other.getTiredMax());
        }
        if (!other.infos_.isEmpty()) {
          if (infos_.isEmpty()) {
            infos_ = other.infos_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureInfosIsMutable();
            infos_.addAll(other.infos_);
          }
          
        }
        if (other.hasGrooveNum()) {
          setGrooveNum(other.getGrooveNum());
        }
        if (other.hasPartOnNum()) {
          setPartOnNum(other.getPartOnNum());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasTankExp()) {
          
          return false;
        }
        if (!hasTired()) {
          
          return false;
        }
        if (!hasTiredMax()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.TankItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.TankItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 tankExp = 2;
      private int tankExp_ ;
      /**
       * <code>required uint32 tankExp = 2;</code>
       *
       * <pre>
       *坦克经验值
       * </pre>
       */
      public boolean hasTankExp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankExp = 2;</code>
       *
       * <pre>
       *坦克经验值
       * </pre>
       */
      public int getTankExp() {
        return tankExp_;
      }
      /**
       * <code>required uint32 tankExp = 2;</code>
       *
       * <pre>
       *坦克经验值
       * </pre>
       */
      public Builder setTankExp(int value) {
        bitField0_ |= 0x00000002;
        tankExp_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankExp = 2;</code>
       *
       * <pre>
       *坦克经验值
       * </pre>
       */
      public Builder clearTankExp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankExp_ = 0;
        
        return this;
      }

      // required uint32 tired = 3;
      private int tired_ ;
      /**
       * <code>required uint32 tired = 3;</code>
       *
       * <pre>
       *疲劳值
       * </pre>
       */
      public boolean hasTired() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 tired = 3;</code>
       *
       * <pre>
       *疲劳值
       * </pre>
       */
      public int getTired() {
        return tired_;
      }
      /**
       * <code>required uint32 tired = 3;</code>
       *
       * <pre>
       *疲劳值
       * </pre>
       */
      public Builder setTired(int value) {
        bitField0_ |= 0x00000004;
        tired_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tired = 3;</code>
       *
       * <pre>
       *疲劳值
       * </pre>
       */
      public Builder clearTired() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tired_ = 0;
        
        return this;
      }

      // required uint32 tiredMax = 4;
      private int tiredMax_ ;
      /**
       * <code>required uint32 tiredMax = 4;</code>
       *
       * <pre>
       *疲劳最大值
       * </pre>
       */
      public boolean hasTiredMax() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 tiredMax = 4;</code>
       *
       * <pre>
       *疲劳最大值
       * </pre>
       */
      public int getTiredMax() {
        return tiredMax_;
      }
      /**
       * <code>required uint32 tiredMax = 4;</code>
       *
       * <pre>
       *疲劳最大值
       * </pre>
       */
      public Builder setTiredMax(int value) {
        bitField0_ |= 0x00000008;
        tiredMax_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tiredMax = 4;</code>
       *
       * <pre>
       *疲劳最大值
       * </pre>
       */
      public Builder clearTiredMax() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tiredMax_ = 0;
        
        return this;
      }

      // repeated .PROTO_TANK.PartNewInfo infos = 5;
      private java.util.List<com.ourpalm.tank.message.TANK_MSG.PartNewInfo> infos_ =
        java.util.Collections.emptyList();
      private void ensureInfosIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          infos_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.PartNewInfo>(infos_);
          bitField0_ |= 0x00000010;
         }
      }

      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.TANK_MSG.PartNewInfo> getInfosList() {
        return java.util.Collections.unmodifiableList(infos_);
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public int getInfosCount() {
        return infos_.size();
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.PartNewInfo getInfos(int index) {
        return infos_.get(index);
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder setInfos(
          int index, com.ourpalm.tank.message.TANK_MSG.PartNewInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder setInfos(
          int index, com.ourpalm.tank.message.TANK_MSG.PartNewInfo.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder addInfos(com.ourpalm.tank.message.TANK_MSG.PartNewInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder addInfos(
          int index, com.ourpalm.tank.message.TANK_MSG.PartNewInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder addInfos(
          com.ourpalm.tank.message.TANK_MSG.PartNewInfo.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder addInfos(
          int index, com.ourpalm.tank.message.TANK_MSG.PartNewInfo.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder addAllInfos(
          java.lang.Iterable<? extends com.ourpalm.tank.message.TANK_MSG.PartNewInfo> values) {
        ensureInfosIsMutable();
        super.addAll(values, infos_);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder clearInfos() {
        infos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.PartNewInfo infos = 5;</code>
       *
       * <pre>
       *新改装配件体s
       * </pre>
       */
      public Builder removeInfos(int index) {
        ensureInfosIsMutable();
        infos_.remove(index);

        return this;
      }

      // optional int32 grooveNum = 6;
      private int grooveNum_ ;
      /**
       * <code>optional int32 grooveNum = 6;</code>
       *
       * <pre>
       *当前已激活的槽位
       * </pre>
       */
      public boolean hasGrooveNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 grooveNum = 6;</code>
       *
       * <pre>
       *当前已激活的槽位
       * </pre>
       */
      public int getGrooveNum() {
        return grooveNum_;
      }
      /**
       * <code>optional int32 grooveNum = 6;</code>
       *
       * <pre>
       *当前已激活的槽位
       * </pre>
       */
      public Builder setGrooveNum(int value) {
        bitField0_ |= 0x00000020;
        grooveNum_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 grooveNum = 6;</code>
       *
       * <pre>
       *当前已激活的槽位
       * </pre>
       */
      public Builder clearGrooveNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        grooveNum_ = 0;
        
        return this;
      }

      // optional int32 partOnNum = 7;
      private int partOnNum_ ;
      /**
       * <code>optional int32 partOnNum = 7;</code>
       *
       * <pre>
       *当前已装备的槽位
       * </pre>
       */
      public boolean hasPartOnNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 partOnNum = 7;</code>
       *
       * <pre>
       *当前已装备的槽位
       * </pre>
       */
      public int getPartOnNum() {
        return partOnNum_;
      }
      /**
       * <code>optional int32 partOnNum = 7;</code>
       *
       * <pre>
       *当前已装备的槽位
       * </pre>
       */
      public Builder setPartOnNum(int value) {
        bitField0_ |= 0x00000040;
        partOnNum_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 partOnNum = 7;</code>
       *
       * <pre>
       *当前已装备的槽位
       * </pre>
       */
      public Builder clearPartOnNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        partOnNum_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.TankItem)
    }

    static {
      defaultInstance = new TankItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.TankItem)
  }

  public interface CTS_TANK_BUY_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *购买坦克ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *购买坦克ID
     * </pre>
     */
    int getTankId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_TANK_BUY_MSG}
   */
  public static final class CTS_TANK_BUY_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TANK_BUY_MSGOrBuilder {
    // Use CTS_TANK_BUY_MSG.newBuilder() to construct.
    private CTS_TANK_BUY_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TANK_BUY_MSG(boolean noInit) {}

    private static final CTS_TANK_BUY_MSG defaultInstance;
    public static CTS_TANK_BUY_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TANK_BUY_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TANK_BUY_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TANK_BUY_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TANK_BUY_MSG>() {
      public CTS_TANK_BUY_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TANK_BUY_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TANK_BUY_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *购买坦克ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *购买坦克ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    private void initFields() {
      tankId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_TANK_BUY_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_TANK_BUY_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *购买坦克ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *购买坦克ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *购买坦克ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *购买坦克ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_TANK_BUY_MSG)
    }

    static {
      defaultInstance = new CTS_TANK_BUY_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_TANK_BUY_MSG)
  }

  public interface STC_TANK_BUY_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 result = 1;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    int getResult();

    // required string info = 2;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // optional .PROTO_TANK.TankItem tank = 3;
    /**
     * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
     *
     * <pre>
     *所购买的新坦克
     * </pre>
     */
    boolean hasTank();
    /**
     * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
     *
     * <pre>
     *所购买的新坦克
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.TankItem getTank();

    // optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;
    /**
     * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
     *
     * <pre>
     * 坦克状态	
     * </pre>
     */
    boolean hasDevelopInfo();
    /**
     * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
     *
     * <pre>
     * 坦克状态	
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getDevelopInfo();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_TANK_BUY_MSG}
   */
  public static final class STC_TANK_BUY_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TANK_BUY_MSGOrBuilder {
    // Use STC_TANK_BUY_MSG.newBuilder() to construct.
    private STC_TANK_BUY_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TANK_BUY_MSG(boolean noInit) {}

    private static final STC_TANK_BUY_MSG defaultInstance;
    public static STC_TANK_BUY_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TANK_BUY_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TANK_BUY_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 26: {
              com.ourpalm.tank.message.TANK_MSG.TankItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tank_.toBuilder();
              }
              tank_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.TankItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tank_);
                tank_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = developInfo_.toBuilder();
              }
              developInfo_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(developInfo_);
                developInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TANK_BUY_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TANK_BUY_MSG>() {
      public STC_TANK_BUY_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TANK_BUY_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TANK_BUY_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // required string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .PROTO_TANK.TankItem tank = 3;
    public static final int TANK_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.TANK_MSG.TankItem tank_;
    /**
     * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
     *
     * <pre>
     *所购买的新坦克
     * </pre>
     */
    public boolean hasTank() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
     *
     * <pre>
     *所购买的新坦克
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.TankItem getTank() {
      return tank_;
    }

    // optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;
    public static final int DEVELOPINFO_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO developInfo_;
    /**
     * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
     *
     * <pre>
     * 坦克状态	
     * </pre>
     */
    public boolean hasDevelopInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
     *
     * <pre>
     * 坦克状态	
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getDevelopInfo() {
      return developInfo_;
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
      tank_ = com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();
      developInfo_ = com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTank()) {
        if (!getTank().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, tank_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, developInfo_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tank_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, developInfo_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_TANK_BUY_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        tank_ = com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        developInfo_ = com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tank_ = tank_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.developInfo_ = developInfo_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (other.hasTank()) {
          mergeTank(other.getTank());
        }
        if (other.hasDevelopInfo()) {
          mergeDevelopInfo(other.getDevelopInfo());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        if (hasTank()) {
          if (!getTank().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_TANK_BUY_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 result = 1;
      private int result_ ;
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // required string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // optional .PROTO_TANK.TankItem tank = 3;
      private com.ourpalm.tank.message.TANK_MSG.TankItem tank_ = com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
       *
       * <pre>
       *所购买的新坦克
       * </pre>
       */
      public boolean hasTank() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
       *
       * <pre>
       *所购买的新坦克
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.TankItem getTank() {
        return tank_;
      }
      /**
       * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
       *
       * <pre>
       *所购买的新坦克
       * </pre>
       */
      public Builder setTank(com.ourpalm.tank.message.TANK_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        tank_ = value;

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
       *
       * <pre>
       *所购买的新坦克
       * </pre>
       */
      public Builder setTank(
          com.ourpalm.tank.message.TANK_MSG.TankItem.Builder builderForValue) {
        tank_ = builderForValue.build();

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
       *
       * <pre>
       *所购买的新坦克
       * </pre>
       */
      public Builder mergeTank(com.ourpalm.tank.message.TANK_MSG.TankItem value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            tank_ != com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance()) {
          tank_ =
            com.ourpalm.tank.message.TANK_MSG.TankItem.newBuilder(tank_).mergeFrom(value).buildPartial();
        } else {
          tank_ = value;
        }

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TankItem tank = 3;</code>
       *
       * <pre>
       *所购买的新坦克
       * </pre>
       */
      public Builder clearTank() {
        tank_ = com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;
      private com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO developInfo_ = com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
       *
       * <pre>
       * 坦克状态	
       * </pre>
       */
      public boolean hasDevelopInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
       *
       * <pre>
       * 坦克状态	
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getDevelopInfo() {
        return developInfo_;
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
       *
       * <pre>
       * 坦克状态	
       * </pre>
       */
      public Builder setDevelopInfo(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO value) {
        if (value == null) {
          throw new NullPointerException();
        }
        developInfo_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
       *
       * <pre>
       * 坦克状态	
       * </pre>
       */
      public Builder setDevelopInfo(
          com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.Builder builderForValue) {
        developInfo_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
       *
       * <pre>
       * 坦克状态	
       * </pre>
       */
      public Builder mergeDevelopInfo(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            developInfo_ != com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance()) {
          developInfo_ =
            com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.newBuilder(developInfo_).mergeFrom(value).buildPartial();
        } else {
          developInfo_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO developInfo = 4;</code>
       *
       * <pre>
       * 坦克状态	
       * </pre>
       */
      public Builder clearDevelopInfo() {
        developInfo_ = com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_TANK_BUY_MSG)
    }

    static {
      defaultInstance = new STC_TANK_BUY_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_TANK_BUY_MSG)
  }

  public interface STC_WAREHOUSE_LIST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_TANK.WarehouseItem item = 1;
    /**
     * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
     *
     * <pre>
     *坦克信息
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.TANK_MSG.WarehouseItem> 
        getItemList();
    /**
     * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
     *
     * <pre>
     *坦克信息
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.WarehouseItem getItem(int index);
    /**
     * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
     *
     * <pre>
     *坦克信息
     * </pre>
     */
    int getItemCount();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_WAREHOUSE_LIST_MSG}
   *
   * <pre>
   *常用坦克列表
   * </pre>
   */
  public static final class STC_WAREHOUSE_LIST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_WAREHOUSE_LIST_MSGOrBuilder {
    // Use STC_WAREHOUSE_LIST_MSG.newBuilder() to construct.
    private STC_WAREHOUSE_LIST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_WAREHOUSE_LIST_MSG(boolean noInit) {}

    private static final STC_WAREHOUSE_LIST_MSG defaultInstance;
    public static STC_WAREHOUSE_LIST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_WAREHOUSE_LIST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_WAREHOUSE_LIST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                item_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.WarehouseItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              item_.add(input.readMessage(com.ourpalm.tank.message.TANK_MSG.WarehouseItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = java.util.Collections.unmodifiableList(item_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_WAREHOUSE_LIST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_WAREHOUSE_LIST_MSG>() {
      public STC_WAREHOUSE_LIST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_WAREHOUSE_LIST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_WAREHOUSE_LIST_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_TANK.WarehouseItem item = 1;
    public static final int ITEM_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.TANK_MSG.WarehouseItem> item_;
    /**
     * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
     *
     * <pre>
     *坦克信息
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.TANK_MSG.WarehouseItem> getItemList() {
      return item_;
    }
    /**
     * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
     *
     * <pre>
     *坦克信息
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.TANK_MSG.WarehouseItemOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
     *
     * <pre>
     *坦克信息
     * </pre>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
     *
     * <pre>
     *坦克信息
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.WarehouseItem getItem(int index) {
      return item_.get(index);
    }
    /**
     * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
     *
     * <pre>
     *坦克信息
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.WarehouseItemOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }

    private void initFields() {
      item_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getItemCount(); i++) {
        if (!getItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(1, item_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, item_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_WAREHOUSE_LIST_MSG}
     *
     * <pre>
     *常用坦克列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        item_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = java.util.Collections.unmodifiableList(item_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.item_ = item_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG.getDefaultInstance()) return this;
        if (!other.item_.isEmpty()) {
          if (item_.isEmpty()) {
            item_ = other.item_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureItemIsMutable();
            item_.addAll(other.item_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getItemCount(); i++) {
          if (!getItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_LIST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_TANK.WarehouseItem item = 1;
      private java.util.List<com.ourpalm.tank.message.TANK_MSG.WarehouseItem> item_ =
        java.util.Collections.emptyList();
      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.WarehouseItem>(item_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.TANK_MSG.WarehouseItem> getItemList() {
        return java.util.Collections.unmodifiableList(item_);
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public int getItemCount() {
        return item_.size();
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.WarehouseItem getItem(int index) {
        return item_.get(index);
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder setItem(
          int index, com.ourpalm.tank.message.TANK_MSG.WarehouseItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder setItem(
          int index, com.ourpalm.tank.message.TANK_MSG.WarehouseItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder addItem(com.ourpalm.tank.message.TANK_MSG.WarehouseItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder addItem(
          int index, com.ourpalm.tank.message.TANK_MSG.WarehouseItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder addItem(
          com.ourpalm.tank.message.TANK_MSG.WarehouseItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder addItem(
          int index, com.ourpalm.tank.message.TANK_MSG.WarehouseItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.TANK_MSG.WarehouseItem> values) {
        ensureItemIsMutable();
        super.addAll(values, item_);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder clearItem() {
        item_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.WarehouseItem item = 1;</code>
       *
       * <pre>
       *坦克信息
       * </pre>
       */
      public Builder removeItem(int index) {
        ensureItemIsMutable();
        item_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_WAREHOUSE_LIST_MSG)
    }

    static {
      defaultInstance = new STC_WAREHOUSE_LIST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_WAREHOUSE_LIST_MSG)
  }

  public interface WarehouseItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // required uint32 part1 = 2;
    /**
     * <code>required uint32 part1 = 2;</code>
     *
     * <pre>
     *配件1
     * </pre>
     */
    boolean hasPart1();
    /**
     * <code>required uint32 part1 = 2;</code>
     *
     * <pre>
     *配件1
     * </pre>
     */
    int getPart1();

    // required uint32 part2 = 3;
    /**
     * <code>required uint32 part2 = 3;</code>
     */
    boolean hasPart2();
    /**
     * <code>required uint32 part2 = 3;</code>
     */
    int getPart2();

    // required uint32 part3 = 4;
    /**
     * <code>required uint32 part3 = 4;</code>
     */
    boolean hasPart3();
    /**
     * <code>required uint32 part3 = 4;</code>
     */
    int getPart3();

    // required uint32 part4 = 5;
    /**
     * <code>required uint32 part4 = 5;</code>
     */
    boolean hasPart4();
    /**
     * <code>required uint32 part4 = 5;</code>
     */
    int getPart4();

    // required uint32 elitePart1 = 6;
    /**
     * <code>required uint32 elitePart1 = 6;</code>
     *
     * <pre>
     *精英配件1
     * </pre>
     */
    boolean hasElitePart1();
    /**
     * <code>required uint32 elitePart1 = 6;</code>
     *
     * <pre>
     *精英配件1
     * </pre>
     */
    int getElitePart1();

    // required uint32 elitePart2 = 7;
    /**
     * <code>required uint32 elitePart2 = 7;</code>
     */
    boolean hasElitePart2();
    /**
     * <code>required uint32 elitePart2 = 7;</code>
     */
    int getElitePart2();

    // required bool hasMain = 8;
    /**
     * <code>required bool hasMain = 8;</code>
     *
     * <pre>
     *是否为主战坦克	
     * </pre>
     */
    boolean hasHasMain();
    /**
     * <code>required bool hasMain = 8;</code>
     *
     * <pre>
     *是否为主战坦克	
     * </pre>
     */
    boolean getHasMain();

    // repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;
    /**
     * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
     *
     * <pre>
     *所使用的战场道具
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.TANK_MSG.GoodsWarItem> 
        getGoodsItemList();
    /**
     * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
     *
     * <pre>
     *所使用的战场道具
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.GoodsWarItem getGoodsItem(int index);
    /**
     * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
     *
     * <pre>
     *所使用的战场道具
     * </pre>
     */
    int getGoodsItemCount();
  }
  /**
   * Protobuf type {@code PROTO_TANK.WarehouseItem}
   */
  public static final class WarehouseItem extends
      com.google.protobuf.GeneratedMessageLite
      implements WarehouseItemOrBuilder {
    // Use WarehouseItem.newBuilder() to construct.
    private WarehouseItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private WarehouseItem(boolean noInit) {}

    private static final WarehouseItem defaultInstance;
    public static WarehouseItem getDefaultInstance() {
      return defaultInstance;
    }

    public WarehouseItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private WarehouseItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              part1_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              part2_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              part3_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              part4_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              elitePart1_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              elitePart2_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              hasMain_ = input.readBool();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                goodsItem_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.GoodsWarItem>();
                mutable_bitField0_ |= 0x00000100;
              }
              goodsItem_.add(input.readMessage(com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          goodsItem_ = java.util.Collections.unmodifiableList(goodsItem_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<WarehouseItem> PARSER =
        new com.google.protobuf.AbstractParser<WarehouseItem>() {
      public WarehouseItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WarehouseItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WarehouseItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 part1 = 2;
    public static final int PART1_FIELD_NUMBER = 2;
    private int part1_;
    /**
     * <code>required uint32 part1 = 2;</code>
     *
     * <pre>
     *配件1
     * </pre>
     */
    public boolean hasPart1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 part1 = 2;</code>
     *
     * <pre>
     *配件1
     * </pre>
     */
    public int getPart1() {
      return part1_;
    }

    // required uint32 part2 = 3;
    public static final int PART2_FIELD_NUMBER = 3;
    private int part2_;
    /**
     * <code>required uint32 part2 = 3;</code>
     */
    public boolean hasPart2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 part2 = 3;</code>
     */
    public int getPart2() {
      return part2_;
    }

    // required uint32 part3 = 4;
    public static final int PART3_FIELD_NUMBER = 4;
    private int part3_;
    /**
     * <code>required uint32 part3 = 4;</code>
     */
    public boolean hasPart3() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 part3 = 4;</code>
     */
    public int getPart3() {
      return part3_;
    }

    // required uint32 part4 = 5;
    public static final int PART4_FIELD_NUMBER = 5;
    private int part4_;
    /**
     * <code>required uint32 part4 = 5;</code>
     */
    public boolean hasPart4() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 part4 = 5;</code>
     */
    public int getPart4() {
      return part4_;
    }

    // required uint32 elitePart1 = 6;
    public static final int ELITEPART1_FIELD_NUMBER = 6;
    private int elitePart1_;
    /**
     * <code>required uint32 elitePart1 = 6;</code>
     *
     * <pre>
     *精英配件1
     * </pre>
     */
    public boolean hasElitePart1() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 elitePart1 = 6;</code>
     *
     * <pre>
     *精英配件1
     * </pre>
     */
    public int getElitePart1() {
      return elitePart1_;
    }

    // required uint32 elitePart2 = 7;
    public static final int ELITEPART2_FIELD_NUMBER = 7;
    private int elitePart2_;
    /**
     * <code>required uint32 elitePart2 = 7;</code>
     */
    public boolean hasElitePart2() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 elitePart2 = 7;</code>
     */
    public int getElitePart2() {
      return elitePart2_;
    }

    // required bool hasMain = 8;
    public static final int HASMAIN_FIELD_NUMBER = 8;
    private boolean hasMain_;
    /**
     * <code>required bool hasMain = 8;</code>
     *
     * <pre>
     *是否为主战坦克	
     * </pre>
     */
    public boolean hasHasMain() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required bool hasMain = 8;</code>
     *
     * <pre>
     *是否为主战坦克	
     * </pre>
     */
    public boolean getHasMain() {
      return hasMain_;
    }

    // repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;
    public static final int GOODSITEM_FIELD_NUMBER = 9;
    private java.util.List<com.ourpalm.tank.message.TANK_MSG.GoodsWarItem> goodsItem_;
    /**
     * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
     *
     * <pre>
     *所使用的战场道具
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.TANK_MSG.GoodsWarItem> getGoodsItemList() {
      return goodsItem_;
    }
    /**
     * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
     *
     * <pre>
     *所使用的战场道具
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.TANK_MSG.GoodsWarItemOrBuilder> 
        getGoodsItemOrBuilderList() {
      return goodsItem_;
    }
    /**
     * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
     *
     * <pre>
     *所使用的战场道具
     * </pre>
     */
    public int getGoodsItemCount() {
      return goodsItem_.size();
    }
    /**
     * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
     *
     * <pre>
     *所使用的战场道具
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.GoodsWarItem getGoodsItem(int index) {
      return goodsItem_.get(index);
    }
    /**
     * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
     *
     * <pre>
     *所使用的战场道具
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.GoodsWarItemOrBuilder getGoodsItemOrBuilder(
        int index) {
      return goodsItem_.get(index);
    }

    private void initFields() {
      tankId_ = 0;
      part1_ = 0;
      part2_ = 0;
      part3_ = 0;
      part4_ = 0;
      elitePart1_ = 0;
      elitePart2_ = 0;
      hasMain_ = false;
      goodsItem_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPart1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPart2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPart3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPart4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasElitePart1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasElitePart2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHasMain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGoodsItemCount(); i++) {
        if (!getGoodsItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, part1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, part2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, part3_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, part4_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, elitePart1_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, elitePart2_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, hasMain_);
      }
      for (int i = 0; i < goodsItem_.size(); i++) {
        output.writeMessage(9, goodsItem_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, part1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, part2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, part3_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, part4_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, elitePart1_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, elitePart2_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, hasMain_);
      }
      for (int i = 0; i < goodsItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, goodsItem_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.WarehouseItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.WarehouseItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.WarehouseItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.WarehouseItem, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.WarehouseItemOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.WarehouseItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        part1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        part2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        part3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        part4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        elitePart1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        elitePart2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        hasMain_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        goodsItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.WarehouseItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.WarehouseItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.WarehouseItem build() {
        com.ourpalm.tank.message.TANK_MSG.WarehouseItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.WarehouseItem buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.WarehouseItem result = new com.ourpalm.tank.message.TANK_MSG.WarehouseItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.part1_ = part1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.part2_ = part2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.part3_ = part3_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.part4_ = part4_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.elitePart1_ = elitePart1_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.elitePart2_ = elitePart2_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.hasMain_ = hasMain_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          goodsItem_ = java.util.Collections.unmodifiableList(goodsItem_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.goodsItem_ = goodsItem_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.WarehouseItem other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.WarehouseItem.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasPart1()) {
          setPart1(other.getPart1());
        }
        if (other.hasPart2()) {
          setPart2(other.getPart2());
        }
        if (other.hasPart3()) {
          setPart3(other.getPart3());
        }
        if (other.hasPart4()) {
          setPart4(other.getPart4());
        }
        if (other.hasElitePart1()) {
          setElitePart1(other.getElitePart1());
        }
        if (other.hasElitePart2()) {
          setElitePart2(other.getElitePart2());
        }
        if (other.hasHasMain()) {
          setHasMain(other.getHasMain());
        }
        if (!other.goodsItem_.isEmpty()) {
          if (goodsItem_.isEmpty()) {
            goodsItem_ = other.goodsItem_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureGoodsItemIsMutable();
            goodsItem_.addAll(other.goodsItem_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasPart1()) {
          
          return false;
        }
        if (!hasPart2()) {
          
          return false;
        }
        if (!hasPart3()) {
          
          return false;
        }
        if (!hasPart4()) {
          
          return false;
        }
        if (!hasElitePart1()) {
          
          return false;
        }
        if (!hasElitePart2()) {
          
          return false;
        }
        if (!hasHasMain()) {
          
          return false;
        }
        for (int i = 0; i < getGoodsItemCount(); i++) {
          if (!getGoodsItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.WarehouseItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.WarehouseItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 part1 = 2;
      private int part1_ ;
      /**
       * <code>required uint32 part1 = 2;</code>
       *
       * <pre>
       *配件1
       * </pre>
       */
      public boolean hasPart1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 part1 = 2;</code>
       *
       * <pre>
       *配件1
       * </pre>
       */
      public int getPart1() {
        return part1_;
      }
      /**
       * <code>required uint32 part1 = 2;</code>
       *
       * <pre>
       *配件1
       * </pre>
       */
      public Builder setPart1(int value) {
        bitField0_ |= 0x00000002;
        part1_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 part1 = 2;</code>
       *
       * <pre>
       *配件1
       * </pre>
       */
      public Builder clearPart1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        part1_ = 0;
        
        return this;
      }

      // required uint32 part2 = 3;
      private int part2_ ;
      /**
       * <code>required uint32 part2 = 3;</code>
       */
      public boolean hasPart2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 part2 = 3;</code>
       */
      public int getPart2() {
        return part2_;
      }
      /**
       * <code>required uint32 part2 = 3;</code>
       */
      public Builder setPart2(int value) {
        bitField0_ |= 0x00000004;
        part2_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 part2 = 3;</code>
       */
      public Builder clearPart2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        part2_ = 0;
        
        return this;
      }

      // required uint32 part3 = 4;
      private int part3_ ;
      /**
       * <code>required uint32 part3 = 4;</code>
       */
      public boolean hasPart3() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 part3 = 4;</code>
       */
      public int getPart3() {
        return part3_;
      }
      /**
       * <code>required uint32 part3 = 4;</code>
       */
      public Builder setPart3(int value) {
        bitField0_ |= 0x00000008;
        part3_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 part3 = 4;</code>
       */
      public Builder clearPart3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        part3_ = 0;
        
        return this;
      }

      // required uint32 part4 = 5;
      private int part4_ ;
      /**
       * <code>required uint32 part4 = 5;</code>
       */
      public boolean hasPart4() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 part4 = 5;</code>
       */
      public int getPart4() {
        return part4_;
      }
      /**
       * <code>required uint32 part4 = 5;</code>
       */
      public Builder setPart4(int value) {
        bitField0_ |= 0x00000010;
        part4_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 part4 = 5;</code>
       */
      public Builder clearPart4() {
        bitField0_ = (bitField0_ & ~0x00000010);
        part4_ = 0;
        
        return this;
      }

      // required uint32 elitePart1 = 6;
      private int elitePart1_ ;
      /**
       * <code>required uint32 elitePart1 = 6;</code>
       *
       * <pre>
       *精英配件1
       * </pre>
       */
      public boolean hasElitePart1() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 elitePart1 = 6;</code>
       *
       * <pre>
       *精英配件1
       * </pre>
       */
      public int getElitePart1() {
        return elitePart1_;
      }
      /**
       * <code>required uint32 elitePart1 = 6;</code>
       *
       * <pre>
       *精英配件1
       * </pre>
       */
      public Builder setElitePart1(int value) {
        bitField0_ |= 0x00000020;
        elitePart1_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 elitePart1 = 6;</code>
       *
       * <pre>
       *精英配件1
       * </pre>
       */
      public Builder clearElitePart1() {
        bitField0_ = (bitField0_ & ~0x00000020);
        elitePart1_ = 0;
        
        return this;
      }

      // required uint32 elitePart2 = 7;
      private int elitePart2_ ;
      /**
       * <code>required uint32 elitePart2 = 7;</code>
       */
      public boolean hasElitePart2() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 elitePart2 = 7;</code>
       */
      public int getElitePart2() {
        return elitePart2_;
      }
      /**
       * <code>required uint32 elitePart2 = 7;</code>
       */
      public Builder setElitePart2(int value) {
        bitField0_ |= 0x00000040;
        elitePart2_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 elitePart2 = 7;</code>
       */
      public Builder clearElitePart2() {
        bitField0_ = (bitField0_ & ~0x00000040);
        elitePart2_ = 0;
        
        return this;
      }

      // required bool hasMain = 8;
      private boolean hasMain_ ;
      /**
       * <code>required bool hasMain = 8;</code>
       *
       * <pre>
       *是否为主战坦克	
       * </pre>
       */
      public boolean hasHasMain() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required bool hasMain = 8;</code>
       *
       * <pre>
       *是否为主战坦克	
       * </pre>
       */
      public boolean getHasMain() {
        return hasMain_;
      }
      /**
       * <code>required bool hasMain = 8;</code>
       *
       * <pre>
       *是否为主战坦克	
       * </pre>
       */
      public Builder setHasMain(boolean value) {
        bitField0_ |= 0x00000080;
        hasMain_ = value;
        
        return this;
      }
      /**
       * <code>required bool hasMain = 8;</code>
       *
       * <pre>
       *是否为主战坦克	
       * </pre>
       */
      public Builder clearHasMain() {
        bitField0_ = (bitField0_ & ~0x00000080);
        hasMain_ = false;
        
        return this;
      }

      // repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;
      private java.util.List<com.ourpalm.tank.message.TANK_MSG.GoodsWarItem> goodsItem_ =
        java.util.Collections.emptyList();
      private void ensureGoodsItemIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          goodsItem_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.GoodsWarItem>(goodsItem_);
          bitField0_ |= 0x00000100;
         }
      }

      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.TANK_MSG.GoodsWarItem> getGoodsItemList() {
        return java.util.Collections.unmodifiableList(goodsItem_);
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public int getGoodsItemCount() {
        return goodsItem_.size();
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.GoodsWarItem getGoodsItem(int index) {
        return goodsItem_.get(index);
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder setGoodsItem(
          int index, com.ourpalm.tank.message.TANK_MSG.GoodsWarItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder setGoodsItem(
          int index, com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder addGoodsItem(com.ourpalm.tank.message.TANK_MSG.GoodsWarItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder addGoodsItem(
          int index, com.ourpalm.tank.message.TANK_MSG.GoodsWarItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder addGoodsItem(
          com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder addGoodsItem(
          int index, com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder addAllGoodsItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.TANK_MSG.GoodsWarItem> values) {
        ensureGoodsItemIsMutable();
        super.addAll(values, goodsItem_);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder clearGoodsItem() {
        goodsItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoodsWarItem goodsItem = 9;</code>
       *
       * <pre>
       *所使用的战场道具
       * </pre>
       */
      public Builder removeGoodsItem(int index) {
        ensureGoodsItemIsMutable();
        goodsItem_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.WarehouseItem)
    }

    static {
      defaultInstance = new WarehouseItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.WarehouseItem)
  }

  public interface PartInfoItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *配件id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *配件id
     * </pre>
     */
    int getId();

    // required uint32 cost = 2;
    /**
     * <code>required uint32 cost = 2;</code>
     *
     * <pre>
     *升级花费
     * </pre>
     */
    boolean hasCost();
    /**
     * <code>required uint32 cost = 2;</code>
     *
     * <pre>
     *升级花费
     * </pre>
     */
    int getCost();

    // required uint32 tankExp = 3;
    /**
     * <code>required uint32 tankExp = 3;</code>
     *
     * <pre>
     *升级所需坦克经验		
     * </pre>
     */
    boolean hasTankExp();
    /**
     * <code>required uint32 tankExp = 3;</code>
     *
     * <pre>
     *升级所需坦克经验		
     * </pre>
     */
    int getTankExp();

    // optional uint32 goodsId = 4;
    /**
     * <code>optional uint32 goodsId = 4;</code>
     *
     * <pre>
     *升级道具
     * </pre>
     */
    boolean hasGoodsId();
    /**
     * <code>optional uint32 goodsId = 4;</code>
     *
     * <pre>
     *升级道具
     * </pre>
     */
    int getGoodsId();

    // optional uint32 goodsNum = 5;
    /**
     * <code>optional uint32 goodsNum = 5;</code>
     *
     * <pre>
     *升级所需道具数量
     * </pre>
     */
    boolean hasGoodsNum();
    /**
     * <code>optional uint32 goodsNum = 5;</code>
     *
     * <pre>
     *升级所需道具数量
     * </pre>
     */
    int getGoodsNum();
  }
  /**
   * Protobuf type {@code PROTO_TANK.PartInfoItem}
   */
  public static final class PartInfoItem extends
      com.google.protobuf.GeneratedMessageLite
      implements PartInfoItemOrBuilder {
    // Use PartInfoItem.newBuilder() to construct.
    private PartInfoItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private PartInfoItem(boolean noInit) {}

    private static final PartInfoItem defaultInstance;
    public static PartInfoItem getDefaultInstance() {
      return defaultInstance;
    }

    public PartInfoItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private PartInfoItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cost_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tankExp_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              goodsId_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              goodsNum_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<PartInfoItem> PARSER =
        new com.google.protobuf.AbstractParser<PartInfoItem>() {
      public PartInfoItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PartInfoItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PartInfoItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *配件id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *配件id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 cost = 2;
    public static final int COST_FIELD_NUMBER = 2;
    private int cost_;
    /**
     * <code>required uint32 cost = 2;</code>
     *
     * <pre>
     *升级花费
     * </pre>
     */
    public boolean hasCost() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 cost = 2;</code>
     *
     * <pre>
     *升级花费
     * </pre>
     */
    public int getCost() {
      return cost_;
    }

    // required uint32 tankExp = 3;
    public static final int TANKEXP_FIELD_NUMBER = 3;
    private int tankExp_;
    /**
     * <code>required uint32 tankExp = 3;</code>
     *
     * <pre>
     *升级所需坦克经验		
     * </pre>
     */
    public boolean hasTankExp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 tankExp = 3;</code>
     *
     * <pre>
     *升级所需坦克经验		
     * </pre>
     */
    public int getTankExp() {
      return tankExp_;
    }

    // optional uint32 goodsId = 4;
    public static final int GOODSID_FIELD_NUMBER = 4;
    private int goodsId_;
    /**
     * <code>optional uint32 goodsId = 4;</code>
     *
     * <pre>
     *升级道具
     * </pre>
     */
    public boolean hasGoodsId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 goodsId = 4;</code>
     *
     * <pre>
     *升级道具
     * </pre>
     */
    public int getGoodsId() {
      return goodsId_;
    }

    // optional uint32 goodsNum = 5;
    public static final int GOODSNUM_FIELD_NUMBER = 5;
    private int goodsNum_;
    /**
     * <code>optional uint32 goodsNum = 5;</code>
     *
     * <pre>
     *升级所需道具数量
     * </pre>
     */
    public boolean hasGoodsNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 goodsNum = 5;</code>
     *
     * <pre>
     *升级所需道具数量
     * </pre>
     */
    public int getGoodsNum() {
      return goodsNum_;
    }

    private void initFields() {
      id_ = 0;
      cost_ = 0;
      tankExp_ = 0;
      goodsId_ = 0;
      goodsNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCost()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, cost_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, tankExp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, goodsId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, goodsNum_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, cost_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tankExp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, goodsId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, goodsNum_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartInfoItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.PartInfoItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.PartInfoItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.PartInfoItem, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.PartInfoItemOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.PartInfoItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tankExp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        goodsId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        goodsNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.PartInfoItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.PartInfoItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.PartInfoItem build() {
        com.ourpalm.tank.message.TANK_MSG.PartInfoItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.PartInfoItem buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.PartInfoItem result = new com.ourpalm.tank.message.TANK_MSG.PartInfoItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cost_ = cost_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tankExp_ = tankExp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.goodsId_ = goodsId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.goodsNum_ = goodsNum_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.PartInfoItem other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.PartInfoItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCost()) {
          setCost(other.getCost());
        }
        if (other.hasTankExp()) {
          setTankExp(other.getTankExp());
        }
        if (other.hasGoodsId()) {
          setGoodsId(other.getGoodsId());
        }
        if (other.hasGoodsNum()) {
          setGoodsNum(other.getGoodsNum());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasCost()) {
          
          return false;
        }
        if (!hasTankExp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.PartInfoItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.PartInfoItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *配件id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *配件id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *配件id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *配件id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 cost = 2;
      private int cost_ ;
      /**
       * <code>required uint32 cost = 2;</code>
       *
       * <pre>
       *升级花费
       * </pre>
       */
      public boolean hasCost() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 cost = 2;</code>
       *
       * <pre>
       *升级花费
       * </pre>
       */
      public int getCost() {
        return cost_;
      }
      /**
       * <code>required uint32 cost = 2;</code>
       *
       * <pre>
       *升级花费
       * </pre>
       */
      public Builder setCost(int value) {
        bitField0_ |= 0x00000002;
        cost_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 cost = 2;</code>
       *
       * <pre>
       *升级花费
       * </pre>
       */
      public Builder clearCost() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cost_ = 0;
        
        return this;
      }

      // required uint32 tankExp = 3;
      private int tankExp_ ;
      /**
       * <code>required uint32 tankExp = 3;</code>
       *
       * <pre>
       *升级所需坦克经验		
       * </pre>
       */
      public boolean hasTankExp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 tankExp = 3;</code>
       *
       * <pre>
       *升级所需坦克经验		
       * </pre>
       */
      public int getTankExp() {
        return tankExp_;
      }
      /**
       * <code>required uint32 tankExp = 3;</code>
       *
       * <pre>
       *升级所需坦克经验		
       * </pre>
       */
      public Builder setTankExp(int value) {
        bitField0_ |= 0x00000004;
        tankExp_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankExp = 3;</code>
       *
       * <pre>
       *升级所需坦克经验		
       * </pre>
       */
      public Builder clearTankExp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tankExp_ = 0;
        
        return this;
      }

      // optional uint32 goodsId = 4;
      private int goodsId_ ;
      /**
       * <code>optional uint32 goodsId = 4;</code>
       *
       * <pre>
       *升级道具
       * </pre>
       */
      public boolean hasGoodsId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 goodsId = 4;</code>
       *
       * <pre>
       *升级道具
       * </pre>
       */
      public int getGoodsId() {
        return goodsId_;
      }
      /**
       * <code>optional uint32 goodsId = 4;</code>
       *
       * <pre>
       *升级道具
       * </pre>
       */
      public Builder setGoodsId(int value) {
        bitField0_ |= 0x00000008;
        goodsId_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 goodsId = 4;</code>
       *
       * <pre>
       *升级道具
       * </pre>
       */
      public Builder clearGoodsId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        goodsId_ = 0;
        
        return this;
      }

      // optional uint32 goodsNum = 5;
      private int goodsNum_ ;
      /**
       * <code>optional uint32 goodsNum = 5;</code>
       *
       * <pre>
       *升级所需道具数量
       * </pre>
       */
      public boolean hasGoodsNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 goodsNum = 5;</code>
       *
       * <pre>
       *升级所需道具数量
       * </pre>
       */
      public int getGoodsNum() {
        return goodsNum_;
      }
      /**
       * <code>optional uint32 goodsNum = 5;</code>
       *
       * <pre>
       *升级所需道具数量
       * </pre>
       */
      public Builder setGoodsNum(int value) {
        bitField0_ |= 0x00000010;
        goodsNum_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 goodsNum = 5;</code>
       *
       * <pre>
       *升级所需道具数量
       * </pre>
       */
      public Builder clearGoodsNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        goodsNum_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.PartInfoItem)
    }

    static {
      defaultInstance = new PartInfoItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.PartInfoItem)
  }

  public interface GoodsWarItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 index = 1;
    /**
     * <code>required uint32 index = 1;</code>
     *
     * <pre>
     *格子位置（从 0 开始）
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>required uint32 index = 1;</code>
     *
     * <pre>
     *格子位置（从 0 开始）
     * </pre>
     */
    int getIndex();

    // required uint32 id = 2;
    /**
     * <code>required uint32 id = 2;</code>
     *
     * <pre>
     *道具ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 2;</code>
     *
     * <pre>
     *道具ID
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.GoodsWarItem}
   *
   * <pre>
   *战场道具列表
   * </pre>
   */
  public static final class GoodsWarItem extends
      com.google.protobuf.GeneratedMessageLite
      implements GoodsWarItemOrBuilder {
    // Use GoodsWarItem.newBuilder() to construct.
    private GoodsWarItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private GoodsWarItem(boolean noInit) {}

    private static final GoodsWarItem defaultInstance;
    public static GoodsWarItem getDefaultInstance() {
      return defaultInstance;
    }

    public GoodsWarItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private GoodsWarItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<GoodsWarItem> PARSER =
        new com.google.protobuf.AbstractParser<GoodsWarItem>() {
      public GoodsWarItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GoodsWarItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GoodsWarItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 index = 1;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>required uint32 index = 1;</code>
     *
     * <pre>
     *格子位置（从 0 开始）
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 index = 1;</code>
     *
     * <pre>
     *格子位置（从 0 开始）
     * </pre>
     */
    public int getIndex() {
      return index_;
    }

    // required uint32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>required uint32 id = 2;</code>
     *
     * <pre>
     *道具ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 id = 2;</code>
     *
     * <pre>
     *道具ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      index_ = 0;
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.GoodsWarItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.GoodsWarItem}
     *
     * <pre>
     *战场道具列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.GoodsWarItem, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.GoodsWarItemOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.GoodsWarItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.GoodsWarItem build() {
        com.ourpalm.tank.message.TANK_MSG.GoodsWarItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.GoodsWarItem buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.GoodsWarItem result = new com.ourpalm.tank.message.TANK_MSG.GoodsWarItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.GoodsWarItem other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIndex()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.GoodsWarItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.GoodsWarItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 index = 1;
      private int index_ ;
      /**
       * <code>required uint32 index = 1;</code>
       *
       * <pre>
       *格子位置（从 0 开始）
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 index = 1;</code>
       *
       * <pre>
       *格子位置（从 0 开始）
       * </pre>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>required uint32 index = 1;</code>
       *
       * <pre>
       *格子位置（从 0 开始）
       * </pre>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 index = 1;</code>
       *
       * <pre>
       *格子位置（从 0 开始）
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        
        return this;
      }

      // required uint32 id = 2;
      private int id_ ;
      /**
       * <code>required uint32 id = 2;</code>
       *
       * <pre>
       *道具ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 id = 2;</code>
       *
       * <pre>
       *道具ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 2;</code>
       *
       * <pre>
       *道具ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 2;</code>
       *
       * <pre>
       *道具ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.GoodsWarItem)
    }

    static {
      defaultInstance = new GoodsWarItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.GoodsWarItem)
  }

  public interface CTS_WAREHOUSE_SCORE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 roleId = 1;
    /**
     * <code>required uint32 roleId = 1;</code>
     */
    boolean hasRoleId();
    /**
     * <code>required uint32 roleId = 1;</code>
     */
    int getRoleId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_WAREHOUSE_SCORE_MSG}
   */
  public static final class CTS_WAREHOUSE_SCORE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_WAREHOUSE_SCORE_MSGOrBuilder {
    // Use CTS_WAREHOUSE_SCORE_MSG.newBuilder() to construct.
    private CTS_WAREHOUSE_SCORE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_WAREHOUSE_SCORE_MSG(boolean noInit) {}

    private static final CTS_WAREHOUSE_SCORE_MSG defaultInstance;
    public static CTS_WAREHOUSE_SCORE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_WAREHOUSE_SCORE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_WAREHOUSE_SCORE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_WAREHOUSE_SCORE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_WAREHOUSE_SCORE_MSG>() {
      public CTS_WAREHOUSE_SCORE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_WAREHOUSE_SCORE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_WAREHOUSE_SCORE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private int roleId_;
    /**
     * <code>required uint32 roleId = 1;</code>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 roleId = 1;</code>
     */
    public int getRoleId() {
      return roleId_;
    }

    private void initFields() {
      roleId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, roleId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roleId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_WAREHOUSE_SCORE_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleId_ = roleId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoleId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_WAREHOUSE_SCORE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 roleId = 1;
      private int roleId_ ;
      /**
       * <code>required uint32 roleId = 1;</code>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       */
      public int getRoleId() {
        return roleId_;
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       */
      public Builder setRoleId(int value) {
        bitField0_ |= 0x00000001;
        roleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_WAREHOUSE_SCORE_MSG)
    }

    static {
      defaultInstance = new CTS_WAREHOUSE_SCORE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_WAREHOUSE_SCORE_MSG)
  }

  public interface STC_WAREHOUSE_SCORE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 roleId = 1;
    /**
     * <code>required uint32 roleId = 1;</code>
     */
    boolean hasRoleId();
    /**
     * <code>required uint32 roleId = 1;</code>
     */
    int getRoleId();

    // repeated .PROTO_TANK.TankScoreItem item = 2;
    /**
     * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
     *
     * <pre>
     *战场成绩
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.TANK_MSG.TankScoreItem> 
        getItemList();
    /**
     * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
     *
     * <pre>
     *战场成绩
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.TankScoreItem getItem(int index);
    /**
     * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
     *
     * <pre>
     *战场成绩
     * </pre>
     */
    int getItemCount();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_WAREHOUSE_SCORE_MSG}
   */
  public static final class STC_WAREHOUSE_SCORE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_WAREHOUSE_SCORE_MSGOrBuilder {
    // Use STC_WAREHOUSE_SCORE_MSG.newBuilder() to construct.
    private STC_WAREHOUSE_SCORE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_WAREHOUSE_SCORE_MSG(boolean noInit) {}

    private static final STC_WAREHOUSE_SCORE_MSG defaultInstance;
    public static STC_WAREHOUSE_SCORE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_WAREHOUSE_SCORE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_WAREHOUSE_SCORE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleId_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                item_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.TankScoreItem>();
                mutable_bitField0_ |= 0x00000002;
              }
              item_.add(input.readMessage(com.ourpalm.tank.message.TANK_MSG.TankScoreItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          item_ = java.util.Collections.unmodifiableList(item_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_WAREHOUSE_SCORE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_WAREHOUSE_SCORE_MSG>() {
      public STC_WAREHOUSE_SCORE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_WAREHOUSE_SCORE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_WAREHOUSE_SCORE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private int roleId_;
    /**
     * <code>required uint32 roleId = 1;</code>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 roleId = 1;</code>
     */
    public int getRoleId() {
      return roleId_;
    }

    // repeated .PROTO_TANK.TankScoreItem item = 2;
    public static final int ITEM_FIELD_NUMBER = 2;
    private java.util.List<com.ourpalm.tank.message.TANK_MSG.TankScoreItem> item_;
    /**
     * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
     *
     * <pre>
     *战场成绩
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.TANK_MSG.TankScoreItem> getItemList() {
      return item_;
    }
    /**
     * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
     *
     * <pre>
     *战场成绩
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.TANK_MSG.TankScoreItemOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
     *
     * <pre>
     *战场成绩
     * </pre>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
     *
     * <pre>
     *战场成绩
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.TankScoreItem getItem(int index) {
      return item_.get(index);
    }
    /**
     * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
     *
     * <pre>
     *战场成绩
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.TankScoreItemOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }

    private void initFields() {
      roleId_ = 0;
      item_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getItemCount(); i++) {
        if (!getItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, roleId_);
      }
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(2, item_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roleId_);
      }
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, item_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_WAREHOUSE_SCORE_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        item_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleId_ = roleId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          item_ = java.util.Collections.unmodifiableList(item_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.item_ = item_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (!other.item_.isEmpty()) {
          if (item_.isEmpty()) {
            item_ = other.item_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureItemIsMutable();
            item_.addAll(other.item_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoleId()) {
          
          return false;
        }
        for (int i = 0; i < getItemCount(); i++) {
          if (!getItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_WAREHOUSE_SCORE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 roleId = 1;
      private int roleId_ ;
      /**
       * <code>required uint32 roleId = 1;</code>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       */
      public int getRoleId() {
        return roleId_;
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       */
      public Builder setRoleId(int value) {
        bitField0_ |= 0x00000001;
        roleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleId_ = 0;
        
        return this;
      }

      // repeated .PROTO_TANK.TankScoreItem item = 2;
      private java.util.List<com.ourpalm.tank.message.TANK_MSG.TankScoreItem> item_ =
        java.util.Collections.emptyList();
      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          item_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.TankScoreItem>(item_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.TANK_MSG.TankScoreItem> getItemList() {
        return java.util.Collections.unmodifiableList(item_);
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public int getItemCount() {
        return item_.size();
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.TankScoreItem getItem(int index) {
        return item_.get(index);
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder setItem(
          int index, com.ourpalm.tank.message.TANK_MSG.TankScoreItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder setItem(
          int index, com.ourpalm.tank.message.TANK_MSG.TankScoreItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder addItem(com.ourpalm.tank.message.TANK_MSG.TankScoreItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder addItem(
          int index, com.ourpalm.tank.message.TANK_MSG.TankScoreItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemIsMutable();
        item_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder addItem(
          com.ourpalm.tank.message.TANK_MSG.TankScoreItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder addItem(
          int index, com.ourpalm.tank.message.TANK_MSG.TankScoreItem.Builder builderForValue) {
        ensureItemIsMutable();
        item_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.TANK_MSG.TankScoreItem> values) {
        ensureItemIsMutable();
        super.addAll(values, item_);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder clearItem() {
        item_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankScoreItem item = 2;</code>
       *
       * <pre>
       *战场成绩
       * </pre>
       */
      public Builder removeItem(int index) {
        ensureItemIsMutable();
        item_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_WAREHOUSE_SCORE_MSG)
    }

    static {
      defaultInstance = new STC_WAREHOUSE_SCORE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_WAREHOUSE_SCORE_MSG)
  }

  public interface TankScoreItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // required uint32 winCount = 2;
    /**
     * <code>required uint32 winCount = 2;</code>
     *
     * <pre>
     *胜利场次
     * </pre>
     */
    boolean hasWinCount();
    /**
     * <code>required uint32 winCount = 2;</code>
     *
     * <pre>
     *胜利场次
     * </pre>
     */
    int getWinCount();

    // required uint32 lostCount = 3;
    /**
     * <code>required uint32 lostCount = 3;</code>
     *
     * <pre>
     *失败场次
     * </pre>
     */
    boolean hasLostCount();
    /**
     * <code>required uint32 lostCount = 3;</code>
     *
     * <pre>
     *失败场次
     * </pre>
     */
    int getLostCount();

    // required uint32 battleCount = 4;
    /**
     * <code>required uint32 battleCount = 4;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    boolean hasBattleCount();
    /**
     * <code>required uint32 battleCount = 4;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    int getBattleCount();
  }
  /**
   * Protobuf type {@code PROTO_TANK.TankScoreItem}
   */
  public static final class TankScoreItem extends
      com.google.protobuf.GeneratedMessageLite
      implements TankScoreItemOrBuilder {
    // Use TankScoreItem.newBuilder() to construct.
    private TankScoreItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TankScoreItem(boolean noInit) {}

    private static final TankScoreItem defaultInstance;
    public static TankScoreItem getDefaultInstance() {
      return defaultInstance;
    }

    public TankScoreItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TankScoreItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              winCount_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lostCount_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              battleCount_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TankScoreItem> PARSER =
        new com.google.protobuf.AbstractParser<TankScoreItem>() {
      public TankScoreItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TankScoreItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TankScoreItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 winCount = 2;
    public static final int WINCOUNT_FIELD_NUMBER = 2;
    private int winCount_;
    /**
     * <code>required uint32 winCount = 2;</code>
     *
     * <pre>
     *胜利场次
     * </pre>
     */
    public boolean hasWinCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 winCount = 2;</code>
     *
     * <pre>
     *胜利场次
     * </pre>
     */
    public int getWinCount() {
      return winCount_;
    }

    // required uint32 lostCount = 3;
    public static final int LOSTCOUNT_FIELD_NUMBER = 3;
    private int lostCount_;
    /**
     * <code>required uint32 lostCount = 3;</code>
     *
     * <pre>
     *失败场次
     * </pre>
     */
    public boolean hasLostCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 lostCount = 3;</code>
     *
     * <pre>
     *失败场次
     * </pre>
     */
    public int getLostCount() {
      return lostCount_;
    }

    // required uint32 battleCount = 4;
    public static final int BATTLECOUNT_FIELD_NUMBER = 4;
    private int battleCount_;
    /**
     * <code>required uint32 battleCount = 4;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public boolean hasBattleCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 battleCount = 4;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public int getBattleCount() {
      return battleCount_;
    }

    private void initFields() {
      tankId_ = 0;
      winCount_ = 0;
      lostCount_ = 0;
      battleCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWinCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLostCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBattleCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, winCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, lostCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, battleCount_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, winCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, lostCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, battleCount_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankScoreItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.TankScoreItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.TankScoreItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.TankScoreItem, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.TankScoreItemOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.TankScoreItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        winCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lostCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        battleCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.TankScoreItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.TankScoreItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.TankScoreItem build() {
        com.ourpalm.tank.message.TANK_MSG.TankScoreItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.TankScoreItem buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.TankScoreItem result = new com.ourpalm.tank.message.TANK_MSG.TankScoreItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.winCount_ = winCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lostCount_ = lostCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.battleCount_ = battleCount_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.TankScoreItem other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.TankScoreItem.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasWinCount()) {
          setWinCount(other.getWinCount());
        }
        if (other.hasLostCount()) {
          setLostCount(other.getLostCount());
        }
        if (other.hasBattleCount()) {
          setBattleCount(other.getBattleCount());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasWinCount()) {
          
          return false;
        }
        if (!hasLostCount()) {
          
          return false;
        }
        if (!hasBattleCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.TankScoreItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.TankScoreItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 winCount = 2;
      private int winCount_ ;
      /**
       * <code>required uint32 winCount = 2;</code>
       *
       * <pre>
       *胜利场次
       * </pre>
       */
      public boolean hasWinCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 winCount = 2;</code>
       *
       * <pre>
       *胜利场次
       * </pre>
       */
      public int getWinCount() {
        return winCount_;
      }
      /**
       * <code>required uint32 winCount = 2;</code>
       *
       * <pre>
       *胜利场次
       * </pre>
       */
      public Builder setWinCount(int value) {
        bitField0_ |= 0x00000002;
        winCount_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 winCount = 2;</code>
       *
       * <pre>
       *胜利场次
       * </pre>
       */
      public Builder clearWinCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        winCount_ = 0;
        
        return this;
      }

      // required uint32 lostCount = 3;
      private int lostCount_ ;
      /**
       * <code>required uint32 lostCount = 3;</code>
       *
       * <pre>
       *失败场次
       * </pre>
       */
      public boolean hasLostCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 lostCount = 3;</code>
       *
       * <pre>
       *失败场次
       * </pre>
       */
      public int getLostCount() {
        return lostCount_;
      }
      /**
       * <code>required uint32 lostCount = 3;</code>
       *
       * <pre>
       *失败场次
       * </pre>
       */
      public Builder setLostCount(int value) {
        bitField0_ |= 0x00000004;
        lostCount_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 lostCount = 3;</code>
       *
       * <pre>
       *失败场次
       * </pre>
       */
      public Builder clearLostCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lostCount_ = 0;
        
        return this;
      }

      // required uint32 battleCount = 4;
      private int battleCount_ ;
      /**
       * <code>required uint32 battleCount = 4;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public boolean hasBattleCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 battleCount = 4;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public int getBattleCount() {
        return battleCount_;
      }
      /**
       * <code>required uint32 battleCount = 4;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder setBattleCount(int value) {
        bitField0_ |= 0x00000008;
        battleCount_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 battleCount = 4;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder clearBattleCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        battleCount_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.TankScoreItem)
    }

    static {
      defaultInstance = new TankScoreItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.TankScoreItem)
  }

  public interface CTS_SAVE_WAREHOUSE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated uint32 tankIds = 1;
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     *
     * <pre>
     *常用坦克列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getTankIdsList();
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     *
     * <pre>
     *常用坦克列表
     * </pre>
     */
    int getTankIdsCount();
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     *
     * <pre>
     *常用坦克列表
     * </pre>
     */
    int getTankIds(int index);
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_SAVE_WAREHOUSE_MSG}
   */
  public static final class CTS_SAVE_WAREHOUSE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_SAVE_WAREHOUSE_MSGOrBuilder {
    // Use CTS_SAVE_WAREHOUSE_MSG.newBuilder() to construct.
    private CTS_SAVE_WAREHOUSE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_SAVE_WAREHOUSE_MSG(boolean noInit) {}

    private static final CTS_SAVE_WAREHOUSE_MSG defaultInstance;
    public static CTS_SAVE_WAREHOUSE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_SAVE_WAREHOUSE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_SAVE_WAREHOUSE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tankIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              tankIds_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                tankIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                tankIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tankIds_ = java.util.Collections.unmodifiableList(tankIds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_SAVE_WAREHOUSE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_SAVE_WAREHOUSE_MSG>() {
      public CTS_SAVE_WAREHOUSE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_SAVE_WAREHOUSE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_SAVE_WAREHOUSE_MSG> getParserForType() {
      return PARSER;
    }

    // repeated uint32 tankIds = 1;
    public static final int TANKIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> tankIds_;
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     *
     * <pre>
     *常用坦克列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTankIdsList() {
      return tankIds_;
    }
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     *
     * <pre>
     *常用坦克列表
     * </pre>
     */
    public int getTankIdsCount() {
      return tankIds_.size();
    }
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     *
     * <pre>
     *常用坦克列表
     * </pre>
     */
    public int getTankIds(int index) {
      return tankIds_.get(index);
    }

    private void initFields() {
      tankIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tankIds_.size(); i++) {
        output.writeUInt32(1, tankIds_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < tankIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(tankIds_.get(i));
        }
        size += dataSize;
        size += 1 * getTankIdsList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_SAVE_WAREHOUSE_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tankIds_ = java.util.Collections.unmodifiableList(tankIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tankIds_ = tankIds_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG.getDefaultInstance()) return this;
        if (!other.tankIds_.isEmpty()) {
          if (tankIds_.isEmpty()) {
            tankIds_ = other.tankIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTankIdsIsMutable();
            tankIds_.addAll(other.tankIds_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_SAVE_WAREHOUSE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated uint32 tankIds = 1;
      private java.util.List<java.lang.Integer> tankIds_ = java.util.Collections.emptyList();
      private void ensureTankIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tankIds_ = new java.util.ArrayList<java.lang.Integer>(tankIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       *
       * <pre>
       *常用坦克列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTankIdsList() {
        return java.util.Collections.unmodifiableList(tankIds_);
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       *
       * <pre>
       *常用坦克列表
       * </pre>
       */
      public int getTankIdsCount() {
        return tankIds_.size();
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       *
       * <pre>
       *常用坦克列表
       * </pre>
       */
      public int getTankIds(int index) {
        return tankIds_.get(index);
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       *
       * <pre>
       *常用坦克列表
       * </pre>
       */
      public Builder setTankIds(
          int index, int value) {
        ensureTankIdsIsMutable();
        tankIds_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       *
       * <pre>
       *常用坦克列表
       * </pre>
       */
      public Builder addTankIds(int value) {
        ensureTankIdsIsMutable();
        tankIds_.add(value);
        
        return this;
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       *
       * <pre>
       *常用坦克列表
       * </pre>
       */
      public Builder addAllTankIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTankIdsIsMutable();
        super.addAll(values, tankIds_);
        
        return this;
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       *
       * <pre>
       *常用坦克列表
       * </pre>
       */
      public Builder clearTankIds() {
        tankIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_SAVE_WAREHOUSE_MSG)
    }

    static {
      defaultInstance = new CTS_SAVE_WAREHOUSE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_SAVE_WAREHOUSE_MSG)
  }

  public interface STC_SAVE_WAREHOUSE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 result = 1;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     *1:成功 0:失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     *1:成功 0:失败
     * </pre>
     */
    int getResult();

    // required string info = 2;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_SAVE_WAREHOUSE_MSG}
   */
  public static final class STC_SAVE_WAREHOUSE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_SAVE_WAREHOUSE_MSGOrBuilder {
    // Use STC_SAVE_WAREHOUSE_MSG.newBuilder() to construct.
    private STC_SAVE_WAREHOUSE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_SAVE_WAREHOUSE_MSG(boolean noInit) {}

    private static final STC_SAVE_WAREHOUSE_MSG defaultInstance;
    public static STC_SAVE_WAREHOUSE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_SAVE_WAREHOUSE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_SAVE_WAREHOUSE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_SAVE_WAREHOUSE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_SAVE_WAREHOUSE_MSG>() {
      public STC_SAVE_WAREHOUSE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_SAVE_WAREHOUSE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_SAVE_WAREHOUSE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     *1:成功 0:失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     *1:成功 0:失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // required string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_SAVE_WAREHOUSE_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_SAVE_WAREHOUSE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 result = 1;
      private int result_ ;
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       *1:成功 0:失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       *1:成功 0:失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       *1:成功 0:失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       *1:成功 0:失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // required string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_SAVE_WAREHOUSE_MSG)
    }

    static {
      defaultInstance = new STC_SAVE_WAREHOUSE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_SAVE_WAREHOUSE_MSG)
  }

  public interface CTS_GOODS_WAR_CHANGE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    int getTankId();

    // required uint32 index = 2;
    /**
     * <code>required uint32 index = 2;</code>
     *
     * <pre>
     *格子索引（下标0开始）
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>required uint32 index = 2;</code>
     *
     * <pre>
     *格子索引（下标0开始）
     * </pre>
     */
    int getIndex();

    // required uint32 goodsId = 3;
    /**
     * <code>required uint32 goodsId = 3;</code>
     *
     * <pre>
     *道具id
     * </pre>
     */
    boolean hasGoodsId();
    /**
     * <code>required uint32 goodsId = 3;</code>
     *
     * <pre>
     *道具id
     * </pre>
     */
    int getGoodsId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_GOODS_WAR_CHANGE_MSG}
   */
  public static final class CTS_GOODS_WAR_CHANGE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_GOODS_WAR_CHANGE_MSGOrBuilder {
    // Use CTS_GOODS_WAR_CHANGE_MSG.newBuilder() to construct.
    private CTS_GOODS_WAR_CHANGE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_GOODS_WAR_CHANGE_MSG(boolean noInit) {}

    private static final CTS_GOODS_WAR_CHANGE_MSG defaultInstance;
    public static CTS_GOODS_WAR_CHANGE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_GOODS_WAR_CHANGE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_GOODS_WAR_CHANGE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              index_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              goodsId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_GOODS_WAR_CHANGE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_GOODS_WAR_CHANGE_MSG>() {
      public CTS_GOODS_WAR_CHANGE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_GOODS_WAR_CHANGE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_GOODS_WAR_CHANGE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 index = 2;
    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    /**
     * <code>required uint32 index = 2;</code>
     *
     * <pre>
     *格子索引（下标0开始）
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 index = 2;</code>
     *
     * <pre>
     *格子索引（下标0开始）
     * </pre>
     */
    public int getIndex() {
      return index_;
    }

    // required uint32 goodsId = 3;
    public static final int GOODSID_FIELD_NUMBER = 3;
    private int goodsId_;
    /**
     * <code>required uint32 goodsId = 3;</code>
     *
     * <pre>
     *道具id
     * </pre>
     */
    public boolean hasGoodsId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 goodsId = 3;</code>
     *
     * <pre>
     *道具id
     * </pre>
     */
    public int getGoodsId() {
      return goodsId_;
    }

    private void initFields() {
      tankId_ = 0;
      index_ = 0;
      goodsId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGoodsId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, goodsId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, goodsId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_GOODS_WAR_CHANGE_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        goodsId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.goodsId_ = goodsId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasGoodsId()) {
          setGoodsId(other.getGoodsId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasIndex()) {
          
          return false;
        }
        if (!hasGoodsId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CHANGE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 index = 2;
      private int index_ ;
      /**
       * <code>required uint32 index = 2;</code>
       *
       * <pre>
       *格子索引（下标0开始）
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 index = 2;</code>
       *
       * <pre>
       *格子索引（下标0开始）
       * </pre>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>required uint32 index = 2;</code>
       *
       * <pre>
       *格子索引（下标0开始）
       * </pre>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000002;
        index_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 index = 2;</code>
       *
       * <pre>
       *格子索引（下标0开始）
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        
        return this;
      }

      // required uint32 goodsId = 3;
      private int goodsId_ ;
      /**
       * <code>required uint32 goodsId = 3;</code>
       *
       * <pre>
       *道具id
       * </pre>
       */
      public boolean hasGoodsId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 goodsId = 3;</code>
       *
       * <pre>
       *道具id
       * </pre>
       */
      public int getGoodsId() {
        return goodsId_;
      }
      /**
       * <code>required uint32 goodsId = 3;</code>
       *
       * <pre>
       *道具id
       * </pre>
       */
      public Builder setGoodsId(int value) {
        bitField0_ |= 0x00000004;
        goodsId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 goodsId = 3;</code>
       *
       * <pre>
       *道具id
       * </pre>
       */
      public Builder clearGoodsId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        goodsId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_GOODS_WAR_CHANGE_MSG)
    }

    static {
      defaultInstance = new CTS_GOODS_WAR_CHANGE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_GOODS_WAR_CHANGE_MSG)
  }

  public interface STC_GOODS_WAR_CHANGE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 result = 1;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     *1：成功 0:失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     *1：成功 0:失败
     * </pre>
     */
    int getResult();

    // optional string info = 2;
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // optional uint32 tankId = 3;
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    int getTankId();

    // optional .PROTO_TANK.GoodsWarItem item = 4;
    /**
     * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
     */
    boolean hasItem();
    /**
     * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
     */
    com.ourpalm.tank.message.TANK_MSG.GoodsWarItem getItem();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_GOODS_WAR_CHANGE_MSG}
   */
  public static final class STC_GOODS_WAR_CHANGE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_GOODS_WAR_CHANGE_MSGOrBuilder {
    // Use STC_GOODS_WAR_CHANGE_MSG.newBuilder() to construct.
    private STC_GOODS_WAR_CHANGE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_GOODS_WAR_CHANGE_MSG(boolean noInit) {}

    private static final STC_GOODS_WAR_CHANGE_MSG defaultInstance;
    public static STC_GOODS_WAR_CHANGE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_GOODS_WAR_CHANGE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_GOODS_WAR_CHANGE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tankId_ = input.readUInt32();
              break;
            }
            case 34: {
              com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = item_.toBuilder();
              }
              item_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(item_);
                item_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_GOODS_WAR_CHANGE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_GOODS_WAR_CHANGE_MSG>() {
      public STC_GOODS_WAR_CHANGE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_GOODS_WAR_CHANGE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_GOODS_WAR_CHANGE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     *1：成功 0:失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     *1：成功 0:失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // optional string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 tankId = 3;
    public static final int TANKID_FIELD_NUMBER = 3;
    private int tankId_;
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // optional .PROTO_TANK.GoodsWarItem item = 4;
    public static final int ITEM_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.TANK_MSG.GoodsWarItem item_;
    /**
     * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
     */
    public boolean hasItem() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
     */
    public com.ourpalm.tank.message.TANK_MSG.GoodsWarItem getItem() {
      return item_;
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
      tankId_ = 0;
      item_ = com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasItem()) {
        if (!getItem().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, tankId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, item_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tankId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, item_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_GOODS_WAR_CHANGE_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        item_ = com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.item_ = item_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasItem()) {
          mergeItem(other.getItem());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (hasItem()) {
          if (!getItem().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CHANGE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 result = 1;
      private int result_ ;
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       *1：成功 0:失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       *1：成功 0:失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       *1：成功 0:失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       *1：成功 0:失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // optional string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // optional uint32 tankId = 3;
      private int tankId_ ;
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000004;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tankId_ = 0;
        
        return this;
      }

      // optional .PROTO_TANK.GoodsWarItem item = 4;
      private com.ourpalm.tank.message.TANK_MSG.GoodsWarItem item_ = com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
       */
      public boolean hasItem() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
       */
      public com.ourpalm.tank.message.TANK_MSG.GoodsWarItem getItem() {
        return item_;
      }
      /**
       * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
       */
      public Builder setItem(com.ourpalm.tank.message.TANK_MSG.GoodsWarItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        item_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
       */
      public Builder setItem(
          com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.Builder builderForValue) {
        item_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
       */
      public Builder mergeItem(com.ourpalm.tank.message.TANK_MSG.GoodsWarItem value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            item_ != com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.getDefaultInstance()) {
          item_ =
            com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.newBuilder(item_).mergeFrom(value).buildPartial();
        } else {
          item_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.GoodsWarItem item = 4;</code>
       */
      public Builder clearItem() {
        item_ = com.ourpalm.tank.message.TANK_MSG.GoodsWarItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_GOODS_WAR_CHANGE_MSG)
    }

    static {
      defaultInstance = new STC_GOODS_WAR_CHANGE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_GOODS_WAR_CHANGE_MSG)
  }

  public interface CTS_GOODS_WAR_CLEAR_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    int getTankId();

    // required uint32 type = 2;
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     * 1:清空炮弹 2:清空道具
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     * 1:清空炮弹 2:清空道具
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_GOODS_WAR_CLEAR_MSG}
   */
  public static final class CTS_GOODS_WAR_CLEAR_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_GOODS_WAR_CLEAR_MSGOrBuilder {
    // Use CTS_GOODS_WAR_CLEAR_MSG.newBuilder() to construct.
    private CTS_GOODS_WAR_CLEAR_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_GOODS_WAR_CLEAR_MSG(boolean noInit) {}

    private static final CTS_GOODS_WAR_CLEAR_MSG defaultInstance;
    public static CTS_GOODS_WAR_CLEAR_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_GOODS_WAR_CLEAR_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_GOODS_WAR_CLEAR_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_GOODS_WAR_CLEAR_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_GOODS_WAR_CLEAR_MSG>() {
      public CTS_GOODS_WAR_CLEAR_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_GOODS_WAR_CLEAR_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_GOODS_WAR_CLEAR_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     * 1:清空炮弹 2:清空道具
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     * 1:清空炮弹 2:清空道具
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      tankId_ = 0;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, type_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, type_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_GOODS_WAR_CLEAR_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_GOODS_WAR_CLEAR_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 type = 2;
      private int type_ ;
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       * 1:清空炮弹 2:清空道具
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       * 1:清空炮弹 2:清空道具
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       * 1:清空炮弹 2:清空道具
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       * 1:清空炮弹 2:清空道具
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_GOODS_WAR_CLEAR_MSG)
    }

    static {
      defaultInstance = new CTS_GOODS_WAR_CLEAR_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_GOODS_WAR_CLEAR_MSG)
  }

  public interface STC_GOODS_WAR_CLEAR_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    int getTankId();

    // required uint32 type = 2;
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     * 1:清空炮弹 2:清空道具
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     * 1:清空炮弹 2:清空道具
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_GOODS_WAR_CLEAR_MSG}
   */
  public static final class STC_GOODS_WAR_CLEAR_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_GOODS_WAR_CLEAR_MSGOrBuilder {
    // Use STC_GOODS_WAR_CLEAR_MSG.newBuilder() to construct.
    private STC_GOODS_WAR_CLEAR_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_GOODS_WAR_CLEAR_MSG(boolean noInit) {}

    private static final STC_GOODS_WAR_CLEAR_MSG defaultInstance;
    public static STC_GOODS_WAR_CLEAR_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_GOODS_WAR_CLEAR_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_GOODS_WAR_CLEAR_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_GOODS_WAR_CLEAR_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_GOODS_WAR_CLEAR_MSG>() {
      public STC_GOODS_WAR_CLEAR_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_GOODS_WAR_CLEAR_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_GOODS_WAR_CLEAR_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模版id
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     * 1:清空炮弹 2:清空道具
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 type = 2;</code>
     *
     * <pre>
     * 1:清空炮弹 2:清空道具
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      tankId_ = 0;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, type_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, type_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_GOODS_WAR_CLEAR_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_GOODS_WAR_CLEAR_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模版id
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 type = 2;
      private int type_ ;
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       * 1:清空炮弹 2:清空道具
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       * 1:清空炮弹 2:清空道具
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       * 1:清空炮弹 2:清空道具
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 type = 2;</code>
       *
       * <pre>
       * 1:清空炮弹 2:清空道具
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_GOODS_WAR_CLEAR_MSG)
    }

    static {
      defaultInstance = new STC_GOODS_WAR_CLEAR_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_GOODS_WAR_CLEAR_MSG)
  }

  public interface CTS_CHANGE_MAINTANK_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克Id
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克Id
     * </pre>
     */
    int getTankId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_CHANGE_MAINTANK_MSG}
   *
   * <pre>
   *更换主战坦克
   * </pre>
   */
  public static final class CTS_CHANGE_MAINTANK_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_CHANGE_MAINTANK_MSGOrBuilder {
    // Use CTS_CHANGE_MAINTANK_MSG.newBuilder() to construct.
    private CTS_CHANGE_MAINTANK_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_CHANGE_MAINTANK_MSG(boolean noInit) {}

    private static final CTS_CHANGE_MAINTANK_MSG defaultInstance;
    public static CTS_CHANGE_MAINTANK_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_CHANGE_MAINTANK_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_CHANGE_MAINTANK_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_CHANGE_MAINTANK_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_CHANGE_MAINTANK_MSG>() {
      public CTS_CHANGE_MAINTANK_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_CHANGE_MAINTANK_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_CHANGE_MAINTANK_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克Id
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克Id
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    private void initFields() {
      tankId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_CHANGE_MAINTANK_MSG}
     *
     * <pre>
     *更换主战坦克
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_CHANGE_MAINTANK_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克Id
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克Id
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克Id
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克Id
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_CHANGE_MAINTANK_MSG)
    }

    static {
      defaultInstance = new CTS_CHANGE_MAINTANK_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_CHANGE_MAINTANK_MSG)
  }

  public interface STC_CHANGE_MAINTANK_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool success = 1;
    /**
     * <code>required bool success = 1;</code>
     */
    boolean hasSuccess();
    /**
     * <code>required bool success = 1;</code>
     */
    boolean getSuccess();

    // optional string info = 2;
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *提示
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *提示
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *提示
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_CHANGE_MAINTANK_MSG}
   */
  public static final class STC_CHANGE_MAINTANK_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_CHANGE_MAINTANK_MSGOrBuilder {
    // Use STC_CHANGE_MAINTANK_MSG.newBuilder() to construct.
    private STC_CHANGE_MAINTANK_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_CHANGE_MAINTANK_MSG(boolean noInit) {}

    private static final STC_CHANGE_MAINTANK_MSG defaultInstance;
    public static STC_CHANGE_MAINTANK_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_CHANGE_MAINTANK_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_CHANGE_MAINTANK_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              success_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_CHANGE_MAINTANK_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_CHANGE_MAINTANK_MSG>() {
      public STC_CHANGE_MAINTANK_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_CHANGE_MAINTANK_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_CHANGE_MAINTANK_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool success = 1;
    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    // optional string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *提示
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *提示
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *提示
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      success_ = false;
      info_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_CHANGE_MAINTANK_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.success_ = success_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG.getDefaultInstance()) return this;
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuccess()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_CHANGE_MAINTANK_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool success = 1;
      private boolean success_ ;
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000001;
        success_ = value;
        
        return this;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000001);
        success_ = false;
        
        return this;
      }

      // optional string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *提示
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *提示
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *提示
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *提示
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *提示
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *提示
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_CHANGE_MAINTANK_MSG)
    }

    static {
      defaultInstance = new STC_CHANGE_MAINTANK_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_CHANGE_MAINTANK_MSG)
  }

  public interface CTS_RESEARCH_COST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_RESEARCH_COST_MSG}
   */
  public static final class CTS_RESEARCH_COST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_RESEARCH_COST_MSGOrBuilder {
    // Use CTS_RESEARCH_COST_MSG.newBuilder() to construct.
    private CTS_RESEARCH_COST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_RESEARCH_COST_MSG(boolean noInit) {}

    private static final CTS_RESEARCH_COST_MSG defaultInstance;
    public static CTS_RESEARCH_COST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_RESEARCH_COST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_RESEARCH_COST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_RESEARCH_COST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_RESEARCH_COST_MSG>() {
      public CTS_RESEARCH_COST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_RESEARCH_COST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_RESEARCH_COST_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    private void initFields() {
      tankId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_RESEARCH_COST_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_RESEARCH_COST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_RESEARCH_COST_MSG)
    }

    static {
      defaultInstance = new CTS_RESEARCH_COST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_RESEARCH_COST_MSG)
  }

  public interface STC_RESEARCH_COST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 cost = 1;
    /**
     * <code>required uint32 cost = 1;</code>
     *
     * <pre>
     *花费
     * </pre>
     */
    boolean hasCost();
    /**
     * <code>required uint32 cost = 1;</code>
     *
     * <pre>
     *花费
     * </pre>
     */
    int getCost();

    // required uint32 tankId = 2;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *请求的坦克id
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *请求的坦克id
     * </pre>
     */
    int getTankId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_RESEARCH_COST_MSG}
   */
  public static final class STC_RESEARCH_COST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_RESEARCH_COST_MSGOrBuilder {
    // Use STC_RESEARCH_COST_MSG.newBuilder() to construct.
    private STC_RESEARCH_COST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_RESEARCH_COST_MSG(boolean noInit) {}

    private static final STC_RESEARCH_COST_MSG defaultInstance;
    public static STC_RESEARCH_COST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_RESEARCH_COST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_RESEARCH_COST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cost_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_RESEARCH_COST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_RESEARCH_COST_MSG>() {
      public STC_RESEARCH_COST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_RESEARCH_COST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_RESEARCH_COST_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 cost = 1;
    public static final int COST_FIELD_NUMBER = 1;
    private int cost_;
    /**
     * <code>required uint32 cost = 1;</code>
     *
     * <pre>
     *花费
     * </pre>
     */
    public boolean hasCost() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 cost = 1;</code>
     *
     * <pre>
     *花费
     * </pre>
     */
    public int getCost() {
      return cost_;
    }

    // required uint32 tankId = 2;
    public static final int TANKID_FIELD_NUMBER = 2;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *请求的坦克id
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *请求的坦克id
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    private void initFields() {
      cost_ = 0;
      tankId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCost()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, cost_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cost_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_RESEARCH_COST_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cost_ = cost_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankId_ = tankId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG.getDefaultInstance()) return this;
        if (other.hasCost()) {
          setCost(other.getCost());
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCost()) {
          
          return false;
        }
        if (!hasTankId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_RESEARCH_COST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 cost = 1;
      private int cost_ ;
      /**
       * <code>required uint32 cost = 1;</code>
       *
       * <pre>
       *花费
       * </pre>
       */
      public boolean hasCost() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 cost = 1;</code>
       *
       * <pre>
       *花费
       * </pre>
       */
      public int getCost() {
        return cost_;
      }
      /**
       * <code>required uint32 cost = 1;</code>
       *
       * <pre>
       *花费
       * </pre>
       */
      public Builder setCost(int value) {
        bitField0_ |= 0x00000001;
        cost_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 cost = 1;</code>
       *
       * <pre>
       *花费
       * </pre>
       */
      public Builder clearCost() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cost_ = 0;
        
        return this;
      }

      // required uint32 tankId = 2;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *请求的坦克id
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *请求的坦克id
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *请求的坦克id
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000002;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *请求的坦克id
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_RESEARCH_COST_MSG)
    }

    static {
      defaultInstance = new STC_RESEARCH_COST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_RESEARCH_COST_MSG)
  }

  public interface STC_TANK_UPDATE_PUSH_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .PROTO_TANK.TankItem tank = 1;
    /**
     * <code>required .PROTO_TANK.TankItem tank = 1;</code>
     */
    boolean hasTank();
    /**
     * <code>required .PROTO_TANK.TankItem tank = 1;</code>
     */
    com.ourpalm.tank.message.TANK_MSG.TankItem getTank();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_TANK_UPDATE_PUSH_MSG}
   */
  public static final class STC_TANK_UPDATE_PUSH_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TANK_UPDATE_PUSH_MSGOrBuilder {
    // Use STC_TANK_UPDATE_PUSH_MSG.newBuilder() to construct.
    private STC_TANK_UPDATE_PUSH_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TANK_UPDATE_PUSH_MSG(boolean noInit) {}

    private static final STC_TANK_UPDATE_PUSH_MSG defaultInstance;
    public static STC_TANK_UPDATE_PUSH_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TANK_UPDATE_PUSH_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TANK_UPDATE_PUSH_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.ourpalm.tank.message.TANK_MSG.TankItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = tank_.toBuilder();
              }
              tank_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.TankItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tank_);
                tank_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TANK_UPDATE_PUSH_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TANK_UPDATE_PUSH_MSG>() {
      public STC_TANK_UPDATE_PUSH_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TANK_UPDATE_PUSH_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TANK_UPDATE_PUSH_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .PROTO_TANK.TankItem tank = 1;
    public static final int TANK_FIELD_NUMBER = 1;
    private com.ourpalm.tank.message.TANK_MSG.TankItem tank_;
    /**
     * <code>required .PROTO_TANK.TankItem tank = 1;</code>
     */
    public boolean hasTank() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PROTO_TANK.TankItem tank = 1;</code>
     */
    public com.ourpalm.tank.message.TANK_MSG.TankItem getTank() {
      return tank_;
    }

    private void initFields() {
      tank_ = com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTank().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, tank_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tank_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_TANK_UPDATE_PUSH_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tank_ = com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tank_ = tank_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG.getDefaultInstance()) return this;
        if (other.hasTank()) {
          mergeTank(other.getTank());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTank()) {
          
          return false;
        }
        if (!getTank().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_TANK_UPDATE_PUSH_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .PROTO_TANK.TankItem tank = 1;
      private com.ourpalm.tank.message.TANK_MSG.TankItem tank_ = com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();
      /**
       * <code>required .PROTO_TANK.TankItem tank = 1;</code>
       */
      public boolean hasTank() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PROTO_TANK.TankItem tank = 1;</code>
       */
      public com.ourpalm.tank.message.TANK_MSG.TankItem getTank() {
        return tank_;
      }
      /**
       * <code>required .PROTO_TANK.TankItem tank = 1;</code>
       */
      public Builder setTank(com.ourpalm.tank.message.TANK_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        tank_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PROTO_TANK.TankItem tank = 1;</code>
       */
      public Builder setTank(
          com.ourpalm.tank.message.TANK_MSG.TankItem.Builder builderForValue) {
        tank_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PROTO_TANK.TankItem tank = 1;</code>
       */
      public Builder mergeTank(com.ourpalm.tank.message.TANK_MSG.TankItem value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            tank_ != com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance()) {
          tank_ =
            com.ourpalm.tank.message.TANK_MSG.TankItem.newBuilder(tank_).mergeFrom(value).buildPartial();
        } else {
          tank_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PROTO_TANK.TankItem tank = 1;</code>
       */
      public Builder clearTank() {
        tank_ = com.ourpalm.tank.message.TANK_MSG.TankItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_TANK_UPDATE_PUSH_MSG)
    }

    static {
      defaultInstance = new STC_TANK_UPDATE_PUSH_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_TANK_UPDATE_PUSH_MSG)
  }

  public interface CTS_TANK_EXP_TRANSLATE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated uint32 tankIds = 1;
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     */
    java.util.List<java.lang.Integer> getTankIdsList();
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     */
    int getTankIdsCount();
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     */
    int getTankIds(int index);

    // required uint32 translateExp = 2;
    /**
     * <code>required uint32 translateExp = 2;</code>
     */
    boolean hasTranslateExp();
    /**
     * <code>required uint32 translateExp = 2;</code>
     */
    int getTranslateExp();

    // required uint32 type = 3;
    /**
     * <code>required uint32 type = 3;</code>
     *
     * <pre>
     *转换类型1:金币，2:银币 
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required uint32 type = 3;</code>
     *
     * <pre>
     *转换类型1:金币，2:银币 
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_TANK_EXP_TRANSLATE_MSG}
   */
  public static final class CTS_TANK_EXP_TRANSLATE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TANK_EXP_TRANSLATE_MSGOrBuilder {
    // Use CTS_TANK_EXP_TRANSLATE_MSG.newBuilder() to construct.
    private CTS_TANK_EXP_TRANSLATE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TANK_EXP_TRANSLATE_MSG(boolean noInit) {}

    private static final CTS_TANK_EXP_TRANSLATE_MSG defaultInstance;
    public static CTS_TANK_EXP_TRANSLATE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TANK_EXP_TRANSLATE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TANK_EXP_TRANSLATE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tankIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              tankIds_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                tankIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                tankIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              translateExp_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              type_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tankIds_ = java.util.Collections.unmodifiableList(tankIds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TANK_EXP_TRANSLATE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TANK_EXP_TRANSLATE_MSG>() {
      public CTS_TANK_EXP_TRANSLATE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TANK_EXP_TRANSLATE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TANK_EXP_TRANSLATE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated uint32 tankIds = 1;
    public static final int TANKIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> tankIds_;
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getTankIdsList() {
      return tankIds_;
    }
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     */
    public int getTankIdsCount() {
      return tankIds_.size();
    }
    /**
     * <code>repeated uint32 tankIds = 1;</code>
     */
    public int getTankIds(int index) {
      return tankIds_.get(index);
    }

    // required uint32 translateExp = 2;
    public static final int TRANSLATEEXP_FIELD_NUMBER = 2;
    private int translateExp_;
    /**
     * <code>required uint32 translateExp = 2;</code>
     */
    public boolean hasTranslateExp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 translateExp = 2;</code>
     */
    public int getTranslateExp() {
      return translateExp_;
    }

    // required uint32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>required uint32 type = 3;</code>
     *
     * <pre>
     *转换类型1:金币，2:银币 
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 type = 3;</code>
     *
     * <pre>
     *转换类型1:金币，2:银币 
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      tankIds_ = java.util.Collections.emptyList();
      translateExp_ = 0;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTranslateExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tankIds_.size(); i++) {
        output.writeUInt32(1, tankIds_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, translateExp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, type_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < tankIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(tankIds_.get(i));
        }
        size += dataSize;
        size += 1 * getTankIdsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, translateExp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, type_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_TANK_EXP_TRANSLATE_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        translateExp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tankIds_ = java.util.Collections.unmodifiableList(tankIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tankIds_ = tankIds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.translateExp_ = translateExp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG.getDefaultInstance()) return this;
        if (!other.tankIds_.isEmpty()) {
          if (tankIds_.isEmpty()) {
            tankIds_ = other.tankIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTankIdsIsMutable();
            tankIds_.addAll(other.tankIds_);
          }
          
        }
        if (other.hasTranslateExp()) {
          setTranslateExp(other.getTranslateExp());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTranslateExp()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_TANK_EXP_TRANSLATE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated uint32 tankIds = 1;
      private java.util.List<java.lang.Integer> tankIds_ = java.util.Collections.emptyList();
      private void ensureTankIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tankIds_ = new java.util.ArrayList<java.lang.Integer>(tankIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getTankIdsList() {
        return java.util.Collections.unmodifiableList(tankIds_);
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       */
      public int getTankIdsCount() {
        return tankIds_.size();
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       */
      public int getTankIds(int index) {
        return tankIds_.get(index);
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       */
      public Builder setTankIds(
          int index, int value) {
        ensureTankIdsIsMutable();
        tankIds_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       */
      public Builder addTankIds(int value) {
        ensureTankIdsIsMutable();
        tankIds_.add(value);
        
        return this;
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       */
      public Builder addAllTankIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTankIdsIsMutable();
        super.addAll(values, tankIds_);
        
        return this;
      }
      /**
       * <code>repeated uint32 tankIds = 1;</code>
       */
      public Builder clearTankIds() {
        tankIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }

      // required uint32 translateExp = 2;
      private int translateExp_ ;
      /**
       * <code>required uint32 translateExp = 2;</code>
       */
      public boolean hasTranslateExp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 translateExp = 2;</code>
       */
      public int getTranslateExp() {
        return translateExp_;
      }
      /**
       * <code>required uint32 translateExp = 2;</code>
       */
      public Builder setTranslateExp(int value) {
        bitField0_ |= 0x00000002;
        translateExp_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 translateExp = 2;</code>
       */
      public Builder clearTranslateExp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        translateExp_ = 0;
        
        return this;
      }

      // required uint32 type = 3;
      private int type_ ;
      /**
       * <code>required uint32 type = 3;</code>
       *
       * <pre>
       *转换类型1:金币，2:银币 
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 type = 3;</code>
       *
       * <pre>
       *转换类型1:金币，2:银币 
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required uint32 type = 3;</code>
       *
       * <pre>
       *转换类型1:金币，2:银币 
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 type = 3;</code>
       *
       * <pre>
       *转换类型1:金币，2:银币 
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_TANK_EXP_TRANSLATE_MSG)
    }

    static {
      defaultInstance = new CTS_TANK_EXP_TRANSLATE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_TANK_EXP_TRANSLATE_MSG)
  }

  public interface TankTranslateExpItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     */
    int getTankId();

    // required uint32 tankExp = 2;
    /**
     * <code>required uint32 tankExp = 2;</code>
     *
     * <pre>
     *剩余经验
     * </pre>
     */
    boolean hasTankExp();
    /**
     * <code>required uint32 tankExp = 2;</code>
     *
     * <pre>
     *剩余经验
     * </pre>
     */
    int getTankExp();
  }
  /**
   * Protobuf type {@code PROTO_TANK.TankTranslateExpItem}
   */
  public static final class TankTranslateExpItem extends
      com.google.protobuf.GeneratedMessageLite
      implements TankTranslateExpItemOrBuilder {
    // Use TankTranslateExpItem.newBuilder() to construct.
    private TankTranslateExpItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TankTranslateExpItem(boolean noInit) {}

    private static final TankTranslateExpItem defaultInstance;
    public static TankTranslateExpItem getDefaultInstance() {
      return defaultInstance;
    }

    public TankTranslateExpItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TankTranslateExpItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankExp_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TankTranslateExpItem> PARSER =
        new com.google.protobuf.AbstractParser<TankTranslateExpItem>() {
      public TankTranslateExpItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TankTranslateExpItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TankTranslateExpItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 tankExp = 2;
    public static final int TANKEXP_FIELD_NUMBER = 2;
    private int tankExp_;
    /**
     * <code>required uint32 tankExp = 2;</code>
     *
     * <pre>
     *剩余经验
     * </pre>
     */
    public boolean hasTankExp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankExp = 2;</code>
     *
     * <pre>
     *剩余经验
     * </pre>
     */
    public int getTankExp() {
      return tankExp_;
    }

    private void initFields() {
      tankId_ = 0;
      tankExp_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankExp_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankExp_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.TankTranslateExpItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItemOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankExp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem build() {
        com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem result = new com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankExp_ = tankExp_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasTankExp()) {
          setTankExp(other.getTankExp());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasTankExp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 tankExp = 2;
      private int tankExp_ ;
      /**
       * <code>required uint32 tankExp = 2;</code>
       *
       * <pre>
       *剩余经验
       * </pre>
       */
      public boolean hasTankExp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankExp = 2;</code>
       *
       * <pre>
       *剩余经验
       * </pre>
       */
      public int getTankExp() {
        return tankExp_;
      }
      /**
       * <code>required uint32 tankExp = 2;</code>
       *
       * <pre>
       *剩余经验
       * </pre>
       */
      public Builder setTankExp(int value) {
        bitField0_ |= 0x00000002;
        tankExp_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankExp = 2;</code>
       *
       * <pre>
       *剩余经验
       * </pre>
       */
      public Builder clearTankExp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankExp_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.TankTranslateExpItem)
    }

    static {
      defaultInstance = new TankTranslateExpItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.TankTranslateExpItem)
  }

  public interface STC_TANK_EXP_TRANSLATE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool success = 1;
    /**
     * <code>required bool success = 1;</code>
     */
    boolean hasSuccess();
    /**
     * <code>required bool success = 1;</code>
     */
    boolean getSuccess();

    // optional string info = 2;
    /**
     * <code>optional string info = 2;</code>
     */
    boolean hasInfo();
    /**
     * <code>optional string info = 2;</code>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 2;</code>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;
    /**
     * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
     */
    java.util.List<com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem> 
        getTanksList();
    /**
     * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
     */
    com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem getTanks(int index);
    /**
     * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
     */
    int getTanksCount();

    // required uint32 tankExp = 4;
    /**
     * <code>required uint32 tankExp = 4;</code>
     */
    boolean hasTankExp();
    /**
     * <code>required uint32 tankExp = 4;</code>
     */
    int getTankExp();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_TANK_EXP_TRANSLATE_MSG}
   */
  public static final class STC_TANK_EXP_TRANSLATE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TANK_EXP_TRANSLATE_MSGOrBuilder {
    // Use STC_TANK_EXP_TRANSLATE_MSG.newBuilder() to construct.
    private STC_TANK_EXP_TRANSLATE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TANK_EXP_TRANSLATE_MSG(boolean noInit) {}

    private static final STC_TANK_EXP_TRANSLATE_MSG defaultInstance;
    public static STC_TANK_EXP_TRANSLATE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TANK_EXP_TRANSLATE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TANK_EXP_TRANSLATE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              success_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem>();
                mutable_bitField0_ |= 0x00000004;
              }
              tanks_.add(input.readMessage(com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              tankExp_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TANK_EXP_TRANSLATE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TANK_EXP_TRANSLATE_MSG>() {
      public STC_TANK_EXP_TRANSLATE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TANK_EXP_TRANSLATE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TANK_EXP_TRANSLATE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool success = 1;
    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    // optional string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>optional string info = 2;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string info = 2;</code>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string info = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;
    public static final int TANKS_FIELD_NUMBER = 3;
    private java.util.List<com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem> tanks_;
    /**
     * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
     */
    public java.util.List<com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem> getTanksList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
     */
    public java.util.List<? extends com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItemOrBuilder> 
        getTanksOrBuilderList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
     */
    public int getTanksCount() {
      return tanks_.size();
    }
    /**
     * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
     */
    public com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem getTanks(int index) {
      return tanks_.get(index);
    }
    /**
     * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
     */
    public com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItemOrBuilder getTanksOrBuilder(
        int index) {
      return tanks_.get(index);
    }

    // required uint32 tankExp = 4;
    public static final int TANKEXP_FIELD_NUMBER = 4;
    private int tankExp_;
    /**
     * <code>required uint32 tankExp = 4;</code>
     */
    public boolean hasTankExp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 tankExp = 4;</code>
     */
    public int getTankExp() {
      return tankExp_;
    }

    private void initFields() {
      success_ = false;
      info_ = "";
      tanks_ = java.util.Collections.emptyList();
      tankExp_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankExp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTanksCount(); i++) {
        if (!getTanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      for (int i = 0; i < tanks_.size(); i++) {
        output.writeMessage(3, tanks_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, tankExp_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      for (int i = 0; i < tanks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tanks_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, tankExp_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_TANK_EXP_TRANSLATE_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        tankExp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.success_ = success_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.tanks_ = tanks_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tankExp_ = tankExp_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG.getDefaultInstance()) return this;
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (!other.tanks_.isEmpty()) {
          if (tanks_.isEmpty()) {
            tanks_ = other.tanks_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTanksIsMutable();
            tanks_.addAll(other.tanks_);
          }
          
        }
        if (other.hasTankExp()) {
          setTankExp(other.getTankExp());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuccess()) {
          
          return false;
        }
        if (!hasTankExp()) {
          
          return false;
        }
        for (int i = 0; i < getTanksCount(); i++) {
          if (!getTanks(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_TANK_EXP_TRANSLATE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool success = 1;
      private boolean success_ ;
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000001;
        success_ = value;
        
        return this;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000001);
        success_ = false;
        
        return this;
      }

      // optional string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 2;</code>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;
      private java.util.List<com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem> tanks_ =
        java.util.Collections.emptyList();
      private void ensureTanksIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem>(tanks_);
          bitField0_ |= 0x00000004;
         }
      }

      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public java.util.List<com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem> getTanksList() {
        return java.util.Collections.unmodifiableList(tanks_);
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public int getTanksCount() {
        return tanks_.size();
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem getTanks(int index) {
        return tanks_.get(index);
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder addTanks(com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder addTanks(
          com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder addAllTanks(
          java.lang.Iterable<? extends com.ourpalm.tank.message.TANK_MSG.TankTranslateExpItem> values) {
        ensureTanksIsMutable();
        super.addAll(values, tanks_);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder clearTanks() {
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TankTranslateExpItem tanks = 3;</code>
       */
      public Builder removeTanks(int index) {
        ensureTanksIsMutable();
        tanks_.remove(index);

        return this;
      }

      // required uint32 tankExp = 4;
      private int tankExp_ ;
      /**
       * <code>required uint32 tankExp = 4;</code>
       */
      public boolean hasTankExp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 tankExp = 4;</code>
       */
      public int getTankExp() {
        return tankExp_;
      }
      /**
       * <code>required uint32 tankExp = 4;</code>
       */
      public Builder setTankExp(int value) {
        bitField0_ |= 0x00000008;
        tankExp_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankExp = 4;</code>
       */
      public Builder clearTankExp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tankExp_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_TANK_EXP_TRANSLATE_MSG)
    }

    static {
      defaultInstance = new STC_TANK_EXP_TRANSLATE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_TANK_EXP_TRANSLATE_MSG)
  }

  public interface GoldTankItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     */
    int getTankId();

    // required uint32 gold = 2;
    /**
     * <code>required uint32 gold = 2;</code>
     *
     * <pre>
     *所需金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>required uint32 gold = 2;</code>
     *
     * <pre>
     *所需金币
     * </pre>
     */
    int getGold();

    // required uint32 diamond = 3;
    /**
     * <code>required uint32 diamond = 3;</code>
     *
     * <pre>
     *所需钻石
     * </pre>
     */
    boolean hasDiamond();
    /**
     * <code>required uint32 diamond = 3;</code>
     *
     * <pre>
     *所需钻石
     * </pre>
     */
    int getDiamond();
  }
  /**
   * Protobuf type {@code PROTO_TANK.GoldTankItem}
   */
  public static final class GoldTankItem extends
      com.google.protobuf.GeneratedMessageLite
      implements GoldTankItemOrBuilder {
    // Use GoldTankItem.newBuilder() to construct.
    private GoldTankItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private GoldTankItem(boolean noInit) {}

    private static final GoldTankItem defaultInstance;
    public static GoldTankItem getDefaultInstance() {
      return defaultInstance;
    }

    public GoldTankItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private GoldTankItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gold_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              diamond_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<GoldTankItem> PARSER =
        new com.google.protobuf.AbstractParser<GoldTankItem>() {
      public GoldTankItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GoldTankItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GoldTankItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 gold = 2;
    public static final int GOLD_FIELD_NUMBER = 2;
    private int gold_;
    /**
     * <code>required uint32 gold = 2;</code>
     *
     * <pre>
     *所需金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 gold = 2;</code>
     *
     * <pre>
     *所需金币
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // required uint32 diamond = 3;
    public static final int DIAMOND_FIELD_NUMBER = 3;
    private int diamond_;
    /**
     * <code>required uint32 diamond = 3;</code>
     *
     * <pre>
     *所需钻石
     * </pre>
     */
    public boolean hasDiamond() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 diamond = 3;</code>
     *
     * <pre>
     *所需钻石
     * </pre>
     */
    public int getDiamond() {
      return diamond_;
    }

    private void initFields() {
      tankId_ = 0;
      gold_ = 0;
      diamond_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDiamond()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, gold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, diamond_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gold_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, diamond_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.GoldTankItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.GoldTankItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.GoldTankItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.GoldTankItem, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.GoldTankItemOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.GoldTankItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        diamond_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.GoldTankItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.GoldTankItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.GoldTankItem build() {
        com.ourpalm.tank.message.TANK_MSG.GoldTankItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.GoldTankItem buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.GoldTankItem result = new com.ourpalm.tank.message.TANK_MSG.GoldTankItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.diamond_ = diamond_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.GoldTankItem other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.GoldTankItem.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasDiamond()) {
          setDiamond(other.getDiamond());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasGold()) {
          
          return false;
        }
        if (!hasDiamond()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.GoldTankItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.GoldTankItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 gold = 2;
      private int gold_ ;
      /**
       * <code>required uint32 gold = 2;</code>
       *
       * <pre>
       *所需金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 gold = 2;</code>
       *
       * <pre>
       *所需金币
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>required uint32 gold = 2;</code>
       *
       * <pre>
       *所需金币
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000002;
        gold_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 gold = 2;</code>
       *
       * <pre>
       *所需金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gold_ = 0;
        
        return this;
      }

      // required uint32 diamond = 3;
      private int diamond_ ;
      /**
       * <code>required uint32 diamond = 3;</code>
       *
       * <pre>
       *所需钻石
       * </pre>
       */
      public boolean hasDiamond() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 diamond = 3;</code>
       *
       * <pre>
       *所需钻石
       * </pre>
       */
      public int getDiamond() {
        return diamond_;
      }
      /**
       * <code>required uint32 diamond = 3;</code>
       *
       * <pre>
       *所需钻石
       * </pre>
       */
      public Builder setDiamond(int value) {
        bitField0_ |= 0x00000004;
        diamond_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 diamond = 3;</code>
       *
       * <pre>
       *所需钻石
       * </pre>
       */
      public Builder clearDiamond() {
        bitField0_ = (bitField0_ & ~0x00000004);
        diamond_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.GoldTankItem)
    }

    static {
      defaultInstance = new GoldTankItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.GoldTankItem)
  }

  public interface STC_GOLD_TANK_LIST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_TANK.GoldTankItem tanks = 1;
    /**
     * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
     */
    java.util.List<com.ourpalm.tank.message.TANK_MSG.GoldTankItem> 
        getTanksList();
    /**
     * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
     */
    com.ourpalm.tank.message.TANK_MSG.GoldTankItem getTanks(int index);
    /**
     * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
     */
    int getTanksCount();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_GOLD_TANK_LIST_MSG}
   */
  public static final class STC_GOLD_TANK_LIST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_GOLD_TANK_LIST_MSGOrBuilder {
    // Use STC_GOLD_TANK_LIST_MSG.newBuilder() to construct.
    private STC_GOLD_TANK_LIST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_GOLD_TANK_LIST_MSG(boolean noInit) {}

    private static final STC_GOLD_TANK_LIST_MSG defaultInstance;
    public static STC_GOLD_TANK_LIST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_GOLD_TANK_LIST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_GOLD_TANK_LIST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.GoldTankItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              tanks_.add(input.readMessage(com.ourpalm.tank.message.TANK_MSG.GoldTankItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_GOLD_TANK_LIST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_GOLD_TANK_LIST_MSG>() {
      public STC_GOLD_TANK_LIST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_GOLD_TANK_LIST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_GOLD_TANK_LIST_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_TANK.GoldTankItem tanks = 1;
    public static final int TANKS_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.TANK_MSG.GoldTankItem> tanks_;
    /**
     * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
     */
    public java.util.List<com.ourpalm.tank.message.TANK_MSG.GoldTankItem> getTanksList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
     */
    public java.util.List<? extends com.ourpalm.tank.message.TANK_MSG.GoldTankItemOrBuilder> 
        getTanksOrBuilderList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
     */
    public int getTanksCount() {
      return tanks_.size();
    }
    /**
     * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
     */
    public com.ourpalm.tank.message.TANK_MSG.GoldTankItem getTanks(int index) {
      return tanks_.get(index);
    }
    /**
     * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
     */
    public com.ourpalm.tank.message.TANK_MSG.GoldTankItemOrBuilder getTanksOrBuilder(
        int index) {
      return tanks_.get(index);
    }

    private void initFields() {
      tanks_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getTanksCount(); i++) {
        if (!getTanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tanks_.size(); i++) {
        output.writeMessage(1, tanks_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tanks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tanks_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_GOLD_TANK_LIST_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tanks_ = tanks_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG.getDefaultInstance()) return this;
        if (!other.tanks_.isEmpty()) {
          if (tanks_.isEmpty()) {
            tanks_ = other.tanks_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTanksIsMutable();
            tanks_.addAll(other.tanks_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getTanksCount(); i++) {
          if (!getTanks(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_GOLD_TANK_LIST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_TANK.GoldTankItem tanks = 1;
      private java.util.List<com.ourpalm.tank.message.TANK_MSG.GoldTankItem> tanks_ =
        java.util.Collections.emptyList();
      private void ensureTanksIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.GoldTankItem>(tanks_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public java.util.List<com.ourpalm.tank.message.TANK_MSG.GoldTankItem> getTanksList() {
        return java.util.Collections.unmodifiableList(tanks_);
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public int getTanksCount() {
        return tanks_.size();
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public com.ourpalm.tank.message.TANK_MSG.GoldTankItem getTanks(int index) {
        return tanks_.get(index);
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.GoldTankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.GoldTankItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder addTanks(com.ourpalm.tank.message.TANK_MSG.GoldTankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.GoldTankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder addTanks(
          com.ourpalm.tank.message.TANK_MSG.GoldTankItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.TANK_MSG.GoldTankItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder addAllTanks(
          java.lang.Iterable<? extends com.ourpalm.tank.message.TANK_MSG.GoldTankItem> values) {
        ensureTanksIsMutable();
        super.addAll(values, tanks_);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder clearTanks() {
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.GoldTankItem tanks = 1;</code>
       */
      public Builder removeTanks(int index) {
        ensureTanksIsMutable();
        tanks_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_GOLD_TANK_LIST_MSG)
    }

    static {
      defaultInstance = new STC_GOLD_TANK_LIST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_GOLD_TANK_LIST_MSG)
  }

  public interface CTS_GOLD_TANK_BUY_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *购买id
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *购买id
     * </pre>
     */
    int getTankId();

    // required uint32 moneyType = 2;
    /**
     * <code>required uint32 moneyType = 2;</code>
     *
     * <pre>
     *购买货币类型，（与RoleAttr对应）
     * </pre>
     */
    boolean hasMoneyType();
    /**
     * <code>required uint32 moneyType = 2;</code>
     *
     * <pre>
     *购买货币类型，（与RoleAttr对应）
     * </pre>
     */
    int getMoneyType();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_GOLD_TANK_BUY_MSG}
   */
  public static final class CTS_GOLD_TANK_BUY_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_GOLD_TANK_BUY_MSGOrBuilder {
    // Use CTS_GOLD_TANK_BUY_MSG.newBuilder() to construct.
    private CTS_GOLD_TANK_BUY_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_GOLD_TANK_BUY_MSG(boolean noInit) {}

    private static final CTS_GOLD_TANK_BUY_MSG defaultInstance;
    public static CTS_GOLD_TANK_BUY_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_GOLD_TANK_BUY_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_GOLD_TANK_BUY_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              moneyType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_GOLD_TANK_BUY_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_GOLD_TANK_BUY_MSG>() {
      public CTS_GOLD_TANK_BUY_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_GOLD_TANK_BUY_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_GOLD_TANK_BUY_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *购买id
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *购买id
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required uint32 moneyType = 2;
    public static final int MONEYTYPE_FIELD_NUMBER = 2;
    private int moneyType_;
    /**
     * <code>required uint32 moneyType = 2;</code>
     *
     * <pre>
     *购买货币类型，（与RoleAttr对应）
     * </pre>
     */
    public boolean hasMoneyType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 moneyType = 2;</code>
     *
     * <pre>
     *购买货币类型，（与RoleAttr对应）
     * </pre>
     */
    public int getMoneyType() {
      return moneyType_;
    }

    private void initFields() {
      tankId_ = 0;
      moneyType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMoneyType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, moneyType_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, moneyType_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_GOLD_TANK_BUY_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        moneyType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.moneyType_ = moneyType_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasMoneyType()) {
          setMoneyType(other.getMoneyType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasMoneyType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_GOLD_TANK_BUY_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *购买id
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *购买id
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *购买id
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *购买id
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required uint32 moneyType = 2;
      private int moneyType_ ;
      /**
       * <code>required uint32 moneyType = 2;</code>
       *
       * <pre>
       *购买货币类型，（与RoleAttr对应）
       * </pre>
       */
      public boolean hasMoneyType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 moneyType = 2;</code>
       *
       * <pre>
       *购买货币类型，（与RoleAttr对应）
       * </pre>
       */
      public int getMoneyType() {
        return moneyType_;
      }
      /**
       * <code>required uint32 moneyType = 2;</code>
       *
       * <pre>
       *购买货币类型，（与RoleAttr对应）
       * </pre>
       */
      public Builder setMoneyType(int value) {
        bitField0_ |= 0x00000002;
        moneyType_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 moneyType = 2;</code>
       *
       * <pre>
       *购买货币类型，（与RoleAttr对应）
       * </pre>
       */
      public Builder clearMoneyType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        moneyType_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_GOLD_TANK_BUY_MSG)
    }

    static {
      defaultInstance = new CTS_GOLD_TANK_BUY_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_GOLD_TANK_BUY_MSG)
  }

  public interface CTS_BUYPARK_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_BUYPARK_MSG}
   *
   * <pre>
   *购买车位
   * </pre>
   */
  public static final class CTS_BUYPARK_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_BUYPARK_MSGOrBuilder {
    // Use CTS_BUYPARK_MSG.newBuilder() to construct.
    private CTS_BUYPARK_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_BUYPARK_MSG(boolean noInit) {}

    private static final CTS_BUYPARK_MSG defaultInstance;
    public static CTS_BUYPARK_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_BUYPARK_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_BUYPARK_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_BUYPARK_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_BUYPARK_MSG>() {
      public CTS_BUYPARK_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_BUYPARK_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_BUYPARK_MSG> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_BUYPARK_MSG}
     *
     * <pre>
     *购买车位
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG(this);
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG.getDefaultInstance()) return this;
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_BUYPARK_MSG)
    }

    static {
      defaultInstance = new CTS_BUYPARK_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_BUYPARK_MSG)
  }

  public interface STC_BUYPARK_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool result = 1;
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     * 
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     * 
     * </pre>
     */
    boolean getResult();

    // required int32 park = 2;
    /**
     * <code>required int32 park = 2;</code>
     *
     * <pre>
     *当前车位
     * </pre>
     */
    boolean hasPark();
    /**
     * <code>required int32 park = 2;</code>
     *
     * <pre>
     *当前车位
     * </pre>
     */
    int getPark();

    // optional string info = 3;
    /**
     * <code>optional string info = 3;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional string info = 3;</code>
     *
     * <pre>
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 3;</code>
     *
     * <pre>
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_BUYPARK_MSG}
   */
  public static final class STC_BUYPARK_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_BUYPARK_MSGOrBuilder {
    // Use STC_BUYPARK_MSG.newBuilder() to construct.
    private STC_BUYPARK_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_BUYPARK_MSG(boolean noInit) {}

    private static final STC_BUYPARK_MSG defaultInstance;
    public static STC_BUYPARK_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_BUYPARK_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_BUYPARK_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              park_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_BUYPARK_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_BUYPARK_MSG>() {
      public STC_BUYPARK_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_BUYPARK_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_BUYPARK_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     * 
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     * 
     * </pre>
     */
    public boolean getResult() {
      return result_;
    }

    // required int32 park = 2;
    public static final int PARK_FIELD_NUMBER = 2;
    private int park_;
    /**
     * <code>required int32 park = 2;</code>
     *
     * <pre>
     *当前车位
     * </pre>
     */
    public boolean hasPark() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 park = 2;</code>
     *
     * <pre>
     *当前车位
     * </pre>
     */
    public int getPark() {
      return park_;
    }

    // optional string info = 3;
    public static final int INFO_FIELD_NUMBER = 3;
    private java.lang.Object info_;
    /**
     * <code>optional string info = 3;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string info = 3;</code>
     *
     * <pre>
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string info = 3;</code>
     *
     * <pre>
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      result_ = false;
      park_ = 0;
      info_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPark()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, park_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, park_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_BUYPARK_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        park_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.park_ = park_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasPark()) {
          setPark(other.getPark());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000004;
          info_ = other.info_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasPark()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool result = 1;
      private boolean result_ ;
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       * 
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       * 
       * </pre>
       */
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       * 
       * </pre>
       */
      public Builder setResult(boolean value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       * 
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = false;
        
        return this;
      }

      // required int32 park = 2;
      private int park_ ;
      /**
       * <code>required int32 park = 2;</code>
       *
       * <pre>
       *当前车位
       * </pre>
       */
      public boolean hasPark() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 park = 2;</code>
       *
       * <pre>
       *当前车位
       * </pre>
       */
      public int getPark() {
        return park_;
      }
      /**
       * <code>required int32 park = 2;</code>
       *
       * <pre>
       *当前车位
       * </pre>
       */
      public Builder setPark(int value) {
        bitField0_ |= 0x00000002;
        park_ = value;
        
        return this;
      }
      /**
       * <code>required int32 park = 2;</code>
       *
       * <pre>
       *当前车位
       * </pre>
       */
      public Builder clearPark() {
        bitField0_ = (bitField0_ & ~0x00000002);
        park_ = 0;
        
        return this;
      }

      // optional string info = 3;
      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string info = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        info_ = value;
        
        return this;
      }
      /**
       * <code>optional string info = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>optional string info = 3;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        info_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_BUYPARK_MSG)
    }

    static {
      defaultInstance = new STC_BUYPARK_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_BUYPARK_MSG)
  }

  public interface CTS_BUYPARK_GOLD_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_BUYPARK_GOLD_MSG}
   */
  public static final class CTS_BUYPARK_GOLD_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_BUYPARK_GOLD_MSGOrBuilder {
    // Use CTS_BUYPARK_GOLD_MSG.newBuilder() to construct.
    private CTS_BUYPARK_GOLD_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_BUYPARK_GOLD_MSG(boolean noInit) {}

    private static final CTS_BUYPARK_GOLD_MSG defaultInstance;
    public static CTS_BUYPARK_GOLD_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_BUYPARK_GOLD_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_BUYPARK_GOLD_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_BUYPARK_GOLD_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_BUYPARK_GOLD_MSG>() {
      public CTS_BUYPARK_GOLD_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_BUYPARK_GOLD_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_BUYPARK_GOLD_MSG> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_BUYPARK_GOLD_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG(this);
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG.getDefaultInstance()) return this;
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_BUYPARK_GOLD_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_BUYPARK_GOLD_MSG)
    }

    static {
      defaultInstance = new CTS_BUYPARK_GOLD_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_BUYPARK_GOLD_MSG)
  }

  public interface STC_BUYPARK_GOLD_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 gold = 1;
    /**
     * <code>required int32 gold = 1;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>required int32 gold = 1;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    int getGold();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_BUYPARK_GOLD_MSG}
   */
  public static final class STC_BUYPARK_GOLD_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_BUYPARK_GOLD_MSGOrBuilder {
    // Use STC_BUYPARK_GOLD_MSG.newBuilder() to construct.
    private STC_BUYPARK_GOLD_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_BUYPARK_GOLD_MSG(boolean noInit) {}

    private static final STC_BUYPARK_GOLD_MSG defaultInstance;
    public static STC_BUYPARK_GOLD_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_BUYPARK_GOLD_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_BUYPARK_GOLD_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gold_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_BUYPARK_GOLD_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_BUYPARK_GOLD_MSG>() {
      public STC_BUYPARK_GOLD_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_BUYPARK_GOLD_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_BUYPARK_GOLD_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 gold = 1;
    public static final int GOLD_FIELD_NUMBER = 1;
    private int gold_;
    /**
     * <code>required int32 gold = 1;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 gold = 1;</code>
     *
     * <pre>
     *金币
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    private void initFields() {
      gold_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gold_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gold_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_BUYPARK_GOLD_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG.getDefaultInstance()) return this;
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGold()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_BUYPARK_GOLD_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 gold = 1;
      private int gold_ ;
      /**
       * <code>required int32 gold = 1;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 gold = 1;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>required int32 gold = 1;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000001;
        gold_ = value;
        
        return this;
      }
      /**
       * <code>required int32 gold = 1;</code>
       *
       * <pre>
       *金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_BUYPARK_GOLD_MSG)
    }

    static {
      defaultInstance = new STC_BUYPARK_GOLD_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_BUYPARK_GOLD_MSG)
  }

  public interface PartNewInfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .PROTO_TANK.PART_INDEX index = 1;
    /**
     * <code>optional .PROTO_TANK.PART_INDEX index = 1;</code>
     *
     * <pre>
     *索引
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>optional .PROTO_TANK.PART_INDEX index = 1;</code>
     *
     * <pre>
     *索引
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.PART_INDEX getIndex();

    // optional int32 id = 2;
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     *配件ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     *配件ID
     * </pre>
     */
    int getId();

    // optional bool active = 3;
    /**
     * <code>optional bool active = 3;</code>
     *
     * <pre>
     *是否激活
     * </pre>
     */
    boolean hasActive();
    /**
     * <code>optional bool active = 3;</code>
     *
     * <pre>
     *是否激活
     * </pre>
     */
    boolean getActive();

    // optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;
    /**
     * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
     *
     * <pre>
     *强化体
     * </pre>
     */
    boolean hasStrengthenInfo();
    /**
     * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
     *
     * <pre>
     *强化体
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.Strengthen_Info getStrengthenInfo();

    // optional int32 level = 5;
    /**
     * <code>optional int32 level = 5;</code>
     *
     * <pre>
     *配件等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 5;</code>
     *
     * <pre>
     *配件等级
     * </pre>
     */
    int getLevel();

    // optional string name = 6;
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string desc = 7;
    /**
     * <code>optional string desc = 7;</code>
     *
     * <pre>
     *描述
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>optional string desc = 7;</code>
     *
     * <pre>
     *描述
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>optional string desc = 7;</code>
     *
     * <pre>
     *描述
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();
  }
  /**
   * Protobuf type {@code PROTO_TANK.PartNewInfo}
   *
   * <pre>
   *===============新改装 ===============================================
   *配件信息体
   * </pre>
   */
  public static final class PartNewInfo extends
      com.google.protobuf.GeneratedMessageLite
      implements PartNewInfoOrBuilder {
    // Use PartNewInfo.newBuilder() to construct.
    private PartNewInfo(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private PartNewInfo(boolean noInit) {}

    private static final PartNewInfo defaultInstance;
    public static PartNewInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PartNewInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private PartNewInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.TANK_MSG.PART_INDEX value = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                index_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              active_ = input.readBool();
              break;
            }
            case 34: {
              com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = strengthenInfo_.toBuilder();
              }
              strengthenInfo_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(strengthenInfo_);
                strengthenInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              level_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              name_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              desc_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<PartNewInfo> PARSER =
        new com.google.protobuf.AbstractParser<PartNewInfo>() {
      public PartNewInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PartNewInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PartNewInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PROTO_TANK.PART_INDEX index = 1;
    public static final int INDEX_FIELD_NUMBER = 1;
    private com.ourpalm.tank.message.TANK_MSG.PART_INDEX index_;
    /**
     * <code>optional .PROTO_TANK.PART_INDEX index = 1;</code>
     *
     * <pre>
     *索引
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PROTO_TANK.PART_INDEX index = 1;</code>
     *
     * <pre>
     *索引
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.PART_INDEX getIndex() {
      return index_;
    }

    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     *配件ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     *配件ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional bool active = 3;
    public static final int ACTIVE_FIELD_NUMBER = 3;
    private boolean active_;
    /**
     * <code>optional bool active = 3;</code>
     *
     * <pre>
     *是否激活
     * </pre>
     */
    public boolean hasActive() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool active = 3;</code>
     *
     * <pre>
     *是否激活
     * </pre>
     */
    public boolean getActive() {
      return active_;
    }

    // optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;
    public static final int STRENGTHENINFO_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.TANK_MSG.Strengthen_Info strengthenInfo_;
    /**
     * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
     *
     * <pre>
     *强化体
     * </pre>
     */
    public boolean hasStrengthenInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
     *
     * <pre>
     *强化体
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.Strengthen_Info getStrengthenInfo() {
      return strengthenInfo_;
    }

    // optional int32 level = 5;
    public static final int LEVEL_FIELD_NUMBER = 5;
    private int level_;
    /**
     * <code>optional int32 level = 5;</code>
     *
     * <pre>
     *配件等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 level = 5;</code>
     *
     * <pre>
     *配件等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // optional string name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 6;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string desc = 7;
    public static final int DESC_FIELD_NUMBER = 7;
    private java.lang.Object desc_;
    /**
     * <code>optional string desc = 7;</code>
     *
     * <pre>
     *描述
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string desc = 7;</code>
     *
     * <pre>
     *描述
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string desc = 7;</code>
     *
     * <pre>
     *描述
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      index_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
      id_ = 0;
      active_ = false;
      strengthenInfo_ = com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.getDefaultInstance();
      level_ = 0;
      name_ = "";
      desc_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, index_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, active_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, strengthenInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, level_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getDescBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, index_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, active_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, strengthenInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, level_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getDescBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.PartNewInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.PartNewInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.PartNewInfo}
     *
     * <pre>
     *===============新改装 ===============================================
     *配件信息体
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.PartNewInfo, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.PartNewInfoOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.PartNewInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        index_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        active_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        strengthenInfo_ = com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.PartNewInfo getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.PartNewInfo build() {
        com.ourpalm.tank.message.TANK_MSG.PartNewInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.PartNewInfo buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.PartNewInfo result = new com.ourpalm.tank.message.TANK_MSG.PartNewInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.active_ = active_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.strengthenInfo_ = strengthenInfo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.desc_ = desc_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.PartNewInfo other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasActive()) {
          setActive(other.getActive());
        }
        if (other.hasStrengthenInfo()) {
          mergeStrengthenInfo(other.getStrengthenInfo());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000020;
          name_ = other.name_;
          
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000040;
          desc_ = other.desc_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.PartNewInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.PartNewInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PROTO_TANK.PART_INDEX index = 1;
      private com.ourpalm.tank.message.TANK_MSG.PART_INDEX index_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
      /**
       * <code>optional .PROTO_TANK.PART_INDEX index = 1;</code>
       *
       * <pre>
       *索引
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PROTO_TANK.PART_INDEX index = 1;</code>
       *
       * <pre>
       *索引
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.PART_INDEX getIndex() {
        return index_;
      }
      /**
       * <code>optional .PROTO_TANK.PART_INDEX index = 1;</code>
       *
       * <pre>
       *索引
       * </pre>
       */
      public Builder setIndex(com.ourpalm.tank.message.TANK_MSG.PART_INDEX value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        index_ = value;
        
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.PART_INDEX index = 1;</code>
       *
       * <pre>
       *索引
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
        
        return this;
      }

      // optional int32 id = 2;
      private int id_ ;
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       *配件ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       *配件ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       *配件ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       *配件ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        
        return this;
      }

      // optional bool active = 3;
      private boolean active_ ;
      /**
       * <code>optional bool active = 3;</code>
       *
       * <pre>
       *是否激活
       * </pre>
       */
      public boolean hasActive() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool active = 3;</code>
       *
       * <pre>
       *是否激活
       * </pre>
       */
      public boolean getActive() {
        return active_;
      }
      /**
       * <code>optional bool active = 3;</code>
       *
       * <pre>
       *是否激活
       * </pre>
       */
      public Builder setActive(boolean value) {
        bitField0_ |= 0x00000004;
        active_ = value;
        
        return this;
      }
      /**
       * <code>optional bool active = 3;</code>
       *
       * <pre>
       *是否激活
       * </pre>
       */
      public Builder clearActive() {
        bitField0_ = (bitField0_ & ~0x00000004);
        active_ = false;
        
        return this;
      }

      // optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;
      private com.ourpalm.tank.message.TANK_MSG.Strengthen_Info strengthenInfo_ = com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
       *
       * <pre>
       *强化体
       * </pre>
       */
      public boolean hasStrengthenInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
       *
       * <pre>
       *强化体
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.Strengthen_Info getStrengthenInfo() {
        return strengthenInfo_;
      }
      /**
       * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
       *
       * <pre>
       *强化体
       * </pre>
       */
      public Builder setStrengthenInfo(com.ourpalm.tank.message.TANK_MSG.Strengthen_Info value) {
        if (value == null) {
          throw new NullPointerException();
        }
        strengthenInfo_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
       *
       * <pre>
       *强化体
       * </pre>
       */
      public Builder setStrengthenInfo(
          com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.Builder builderForValue) {
        strengthenInfo_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
       *
       * <pre>
       *强化体
       * </pre>
       */
      public Builder mergeStrengthenInfo(com.ourpalm.tank.message.TANK_MSG.Strengthen_Info value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            strengthenInfo_ != com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.getDefaultInstance()) {
          strengthenInfo_ =
            com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.newBuilder(strengthenInfo_).mergeFrom(value).buildPartial();
        } else {
          strengthenInfo_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Strengthen_Info strengthenInfo = 4;</code>
       *
       * <pre>
       *强化体
       * </pre>
       */
      public Builder clearStrengthenInfo() {
        strengthenInfo_ = com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // optional int32 level = 5;
      private int level_ ;
      /**
       * <code>optional int32 level = 5;</code>
       *
       * <pre>
       *配件等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 level = 5;</code>
       *
       * <pre>
       *配件等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 5;</code>
       *
       * <pre>
       *配件等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000010;
        level_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 level = 5;</code>
       *
       * <pre>
       *配件等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        level_ = 0;
        
        return this;
      }

      // optional string name = 6;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 6;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        name_ = value;
        
        return this;
      }

      // optional string desc = 7;
      private java.lang.Object desc_ = "";
      /**
       * <code>optional string desc = 7;</code>
       *
       * <pre>
       *描述
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string desc = 7;</code>
       *
       * <pre>
       *描述
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string desc = 7;</code>
       *
       * <pre>
       *描述
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string desc = 7;</code>
       *
       * <pre>
       *描述
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        desc_ = value;
        
        return this;
      }
      /**
       * <code>optional string desc = 7;</code>
       *
       * <pre>
       *描述
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000040);
        desc_ = getDefaultInstance().getDesc();
        
        return this;
      }
      /**
       * <code>optional string desc = 7;</code>
       *
       * <pre>
       *描述
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        desc_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.PartNewInfo)
    }

    static {
      defaultInstance = new PartNewInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.PartNewInfo)
  }

  public interface CTS_STRENGTHEN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1银币强化2金币保成强化，3一键金币保成无CD强化
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1银币强化2金币保成强化，3一键金币保成无CD强化
     * </pre>
     */
    int getType();

    // required uint32 tankId = 2;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // required .PROTO_TANK.PART_INDEX partIndex = 3;
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    boolean hasPartIndex();
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex();

    // optional int32 level = 4;
    /**
     * <code>optional int32 level = 4;</code>
     *
     * <pre>
     *3type下的  要强化到的等级 
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 4;</code>
     *
     * <pre>
     *3type下的  要强化到的等级 
     * </pre>
     */
    int getLevel();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_STRENGTHEN_MSG}
   *
   * <pre>
   *强化
   * </pre>
   */
  public static final class CTS_STRENGTHEN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_STRENGTHEN_MSGOrBuilder {
    // Use CTS_STRENGTHEN_MSG.newBuilder() to construct.
    private CTS_STRENGTHEN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_STRENGTHEN_MSG(boolean noInit) {}

    private static final CTS_STRENGTHEN_MSG defaultInstance;
    public static CTS_STRENGTHEN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_STRENGTHEN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_STRENGTHEN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankId_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.TANK_MSG.PART_INDEX value = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                partIndex_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              level_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_STRENGTHEN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_STRENGTHEN_MSG>() {
      public CTS_STRENGTHEN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_STRENGTHEN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_STRENGTHEN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1银币强化2金币保成强化，3一键金币保成无CD强化
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1银币强化2金币保成强化，3一键金币保成无CD强化
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required uint32 tankId = 2;
    public static final int TANKID_FIELD_NUMBER = 2;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required .PROTO_TANK.PART_INDEX partIndex = 3;
    public static final int PARTINDEX_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.TANK_MSG.PART_INDEX partIndex_;
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    public boolean hasPartIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex() {
      return partIndex_;
    }

    // optional int32 level = 4;
    public static final int LEVEL_FIELD_NUMBER = 4;
    private int level_;
    /**
     * <code>optional int32 level = 4;</code>
     *
     * <pre>
     *3type下的  要强化到的等级 
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 level = 4;</code>
     *
     * <pre>
     *3type下的  要强化到的等级 
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    private void initFields() {
      type_ = 0;
      tankId_ = 0;
      partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
      level_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPartIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, partIndex_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, level_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, partIndex_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, level_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_STRENGTHEN_MSG}
     *
     * <pre>
     *强化
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.partIndex_ = partIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.level_ = level_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasPartIndex()) {
          setPartIndex(other.getPartIndex());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasPartIndex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_STRENGTHEN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1银币强化2金币保成强化，3一键金币保成无CD强化
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1银币强化2金币保成强化，3一键金币保成无CD强化
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1银币强化2金币保成强化，3一键金币保成无CD强化
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1银币强化2金币保成强化，3一键金币保成无CD强化
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        
        return this;
      }

      // required uint32 tankId = 2;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000002;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        
        return this;
      }

      // required .PROTO_TANK.PART_INDEX partIndex = 3;
      private com.ourpalm.tank.message.TANK_MSG.PART_INDEX partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public boolean hasPartIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex() {
        return partIndex_;
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public Builder setPartIndex(com.ourpalm.tank.message.TANK_MSG.PART_INDEX value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        partIndex_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public Builder clearPartIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
        
        return this;
      }

      // optional int32 level = 4;
      private int level_ ;
      /**
       * <code>optional int32 level = 4;</code>
       *
       * <pre>
       *3type下的  要强化到的等级 
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 level = 4;</code>
       *
       * <pre>
       *3type下的  要强化到的等级 
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 4;</code>
       *
       * <pre>
       *3type下的  要强化到的等级 
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000008;
        level_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 level = 4;</code>
       *
       * <pre>
       *3type下的  要强化到的等级 
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_STRENGTHEN_MSG)
    }

    static {
      defaultInstance = new CTS_STRENGTHEN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_STRENGTHEN_MSG)
  }

  public interface STC_STRENGTHEN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 result = 1;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    int getResult();

    // required string info = 2;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // optional uint32 tankId = 3;
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // optional .PROTO_TANK.PartNewInfo part = 4;
    /**
     * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
     *
     * <pre>
     *配件
     * </pre>
     */
    boolean hasPart();
    /**
     * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
     *
     * <pre>
     *配件
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.PartNewInfo getPart();

    // optional .PROTO_TANK.Freeze_Info freezeInfo = 5;
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
     *
     * <pre>
     *冷却体
     * </pre>
     */
    boolean hasFreezeInfo();
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
     *
     * <pre>
     *冷却体
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo();

    // optional int32 success = 6;
    /**
     * <code>optional int32 success = 6;</code>
     *
     * <pre>
     *1强化成功 0强化失败
     * </pre>
     */
    boolean hasSuccess();
    /**
     * <code>optional int32 success = 6;</code>
     *
     * <pre>
     *1强化成功 0强化失败
     * </pre>
     */
    int getSuccess();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_STRENGTHEN_MSG}
   *
   * <pre>
   *强化返回
   * </pre>
   */
  public static final class STC_STRENGTHEN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_STRENGTHEN_MSGOrBuilder {
    // Use STC_STRENGTHEN_MSG.newBuilder() to construct.
    private STC_STRENGTHEN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_STRENGTHEN_MSG(boolean noInit) {}

    private static final STC_STRENGTHEN_MSG defaultInstance;
    public static STC_STRENGTHEN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_STRENGTHEN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_STRENGTHEN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tankId_ = input.readUInt32();
              break;
            }
            case 34: {
              com.ourpalm.tank.message.TANK_MSG.PartNewInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = part_.toBuilder();
              }
              part_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.PartNewInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(part_);
                part_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.ourpalm.tank.message.TANK_MSG.Freeze_Info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = freezeInfo_.toBuilder();
              }
              freezeInfo_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.Freeze_Info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freezeInfo_);
                freezeInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              success_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_STRENGTHEN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_STRENGTHEN_MSG>() {
      public STC_STRENGTHEN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_STRENGTHEN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_STRENGTHEN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // required string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 tankId = 3;
    public static final int TANKID_FIELD_NUMBER = 3;
    private int tankId_;
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // optional .PROTO_TANK.PartNewInfo part = 4;
    public static final int PART_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.TANK_MSG.PartNewInfo part_;
    /**
     * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
     *
     * <pre>
     *配件
     * </pre>
     */
    public boolean hasPart() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
     *
     * <pre>
     *配件
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.PartNewInfo getPart() {
      return part_;
    }

    // optional .PROTO_TANK.Freeze_Info freezeInfo = 5;
    public static final int FREEZEINFO_FIELD_NUMBER = 5;
    private com.ourpalm.tank.message.TANK_MSG.Freeze_Info freezeInfo_;
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
     *
     * <pre>
     *冷却体
     * </pre>
     */
    public boolean hasFreezeInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
     *
     * <pre>
     *冷却体
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo() {
      return freezeInfo_;
    }

    // optional int32 success = 6;
    public static final int SUCCESS_FIELD_NUMBER = 6;
    private int success_;
    /**
     * <code>optional int32 success = 6;</code>
     *
     * <pre>
     *1强化成功 0强化失败
     * </pre>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 success = 6;</code>
     *
     * <pre>
     *1强化成功 0强化失败
     * </pre>
     */
    public int getSuccess() {
      return success_;
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
      tankId_ = 0;
      part_ = com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();
      freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
      success_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, tankId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, part_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, freezeInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, success_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tankId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, part_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, freezeInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, success_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_STRENGTHEN_MSG}
     *
     * <pre>
     *强化返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        part_ = com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        success_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.part_ = part_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.freezeInfo_ = freezeInfo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.success_ = success_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasPart()) {
          mergePart(other.getPart());
        }
        if (other.hasFreezeInfo()) {
          mergeFreezeInfo(other.getFreezeInfo());
        }
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_STRENGTHEN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 result = 1;
      private int result_ ;
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // required string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // optional uint32 tankId = 3;
      private int tankId_ ;
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000004;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tankId_ = 0;
        
        return this;
      }

      // optional .PROTO_TANK.PartNewInfo part = 4;
      private com.ourpalm.tank.message.TANK_MSG.PartNewInfo part_ = com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public boolean hasPart() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.PartNewInfo getPart() {
        return part_;
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public Builder setPart(com.ourpalm.tank.message.TANK_MSG.PartNewInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        part_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public Builder setPart(
          com.ourpalm.tank.message.TANK_MSG.PartNewInfo.Builder builderForValue) {
        part_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public Builder mergePart(com.ourpalm.tank.message.TANK_MSG.PartNewInfo value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            part_ != com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance()) {
          part_ =
            com.ourpalm.tank.message.TANK_MSG.PartNewInfo.newBuilder(part_).mergeFrom(value).buildPartial();
        } else {
          part_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public Builder clearPart() {
        part_ = com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // optional .PROTO_TANK.Freeze_Info freezeInfo = 5;
      private com.ourpalm.tank.message.TANK_MSG.Freeze_Info freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public boolean hasFreezeInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo() {
        return freezeInfo_;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public Builder setFreezeInfo(com.ourpalm.tank.message.TANK_MSG.Freeze_Info value) {
        if (value == null) {
          throw new NullPointerException();
        }
        freezeInfo_ = value;

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public Builder setFreezeInfo(
          com.ourpalm.tank.message.TANK_MSG.Freeze_Info.Builder builderForValue) {
        freezeInfo_ = builderForValue.build();

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public Builder mergeFreezeInfo(com.ourpalm.tank.message.TANK_MSG.Freeze_Info value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            freezeInfo_ != com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance()) {
          freezeInfo_ =
            com.ourpalm.tank.message.TANK_MSG.Freeze_Info.newBuilder(freezeInfo_).mergeFrom(value).buildPartial();
        } else {
          freezeInfo_ = value;
        }

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 5;</code>
       *
       * <pre>
       *冷却体
       * </pre>
       */
      public Builder clearFreezeInfo() {
        freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      // optional int32 success = 6;
      private int success_ ;
      /**
       * <code>optional int32 success = 6;</code>
       *
       * <pre>
       *1强化成功 0强化失败
       * </pre>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 success = 6;</code>
       *
       * <pre>
       *1强化成功 0强化失败
       * </pre>
       */
      public int getSuccess() {
        return success_;
      }
      /**
       * <code>optional int32 success = 6;</code>
       *
       * <pre>
       *1强化成功 0强化失败
       * </pre>
       */
      public Builder setSuccess(int value) {
        bitField0_ |= 0x00000020;
        success_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 success = 6;</code>
       *
       * <pre>
       *1强化成功 0强化失败
       * </pre>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000020);
        success_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_STRENGTHEN_MSG)
    }

    static {
      defaultInstance = new STC_STRENGTHEN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_STRENGTHEN_MSG)
  }

  public interface Strengthen_InfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int32 strengthenSuccessRate = 1;
    /**
     * <code>optional int32 strengthenSuccessRate = 1;</code>
     *
     * <pre>
     *强化成功率
     * </pre>
     */
    boolean hasStrengthenSuccessRate();
    /**
     * <code>optional int32 strengthenSuccessRate = 1;</code>
     *
     * <pre>
     *强化成功率
     * </pre>
     */
    int getStrengthenSuccessRate();

    // optional int32 iron = 2;
    /**
     * <code>optional int32 iron = 2;</code>
     *
     * <pre>
     *强化花费银币
     * </pre>
     */
    boolean hasIron();
    /**
     * <code>optional int32 iron = 2;</code>
     *
     * <pre>
     *强化花费银币
     * </pre>
     */
    int getIron();

    // optional int32 gold = 3;
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *保成 强化需要金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *保成 强化需要金币
     * </pre>
     */
    int getGold();
  }
  /**
   * Protobuf type {@code PROTO_TANK.Strengthen_Info}
   *
   * <pre>
   *强化体
   * </pre>
   */
  public static final class Strengthen_Info extends
      com.google.protobuf.GeneratedMessageLite
      implements Strengthen_InfoOrBuilder {
    // Use Strengthen_Info.newBuilder() to construct.
    private Strengthen_Info(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Strengthen_Info(boolean noInit) {}

    private static final Strengthen_Info defaultInstance;
    public static Strengthen_Info getDefaultInstance() {
      return defaultInstance;
    }

    public Strengthen_Info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Strengthen_Info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              strengthenSuccessRate_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              iron_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gold_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Strengthen_Info> PARSER =
        new com.google.protobuf.AbstractParser<Strengthen_Info>() {
      public Strengthen_Info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Strengthen_Info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Strengthen_Info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 strengthenSuccessRate = 1;
    public static final int STRENGTHENSUCCESSRATE_FIELD_NUMBER = 1;
    private int strengthenSuccessRate_;
    /**
     * <code>optional int32 strengthenSuccessRate = 1;</code>
     *
     * <pre>
     *强化成功率
     * </pre>
     */
    public boolean hasStrengthenSuccessRate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 strengthenSuccessRate = 1;</code>
     *
     * <pre>
     *强化成功率
     * </pre>
     */
    public int getStrengthenSuccessRate() {
      return strengthenSuccessRate_;
    }

    // optional int32 iron = 2;
    public static final int IRON_FIELD_NUMBER = 2;
    private int iron_;
    /**
     * <code>optional int32 iron = 2;</code>
     *
     * <pre>
     *强化花费银币
     * </pre>
     */
    public boolean hasIron() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 iron = 2;</code>
     *
     * <pre>
     *强化花费银币
     * </pre>
     */
    public int getIron() {
      return iron_;
    }

    // optional int32 gold = 3;
    public static final int GOLD_FIELD_NUMBER = 3;
    private int gold_;
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *保成 强化需要金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 gold = 3;</code>
     *
     * <pre>
     *保成 强化需要金币
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    private void initFields() {
      strengthenSuccessRate_ = 0;
      iron_ = 0;
      gold_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, strengthenSuccessRate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, iron_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gold_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, strengthenSuccessRate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, iron_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gold_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.Strengthen_Info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.Strengthen_Info}
     *
     * <pre>
     *强化体
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.Strengthen_Info, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.Strengthen_InfoOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        strengthenSuccessRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        iron_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.Strengthen_Info getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.Strengthen_Info build() {
        com.ourpalm.tank.message.TANK_MSG.Strengthen_Info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.Strengthen_Info buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.Strengthen_Info result = new com.ourpalm.tank.message.TANK_MSG.Strengthen_Info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.strengthenSuccessRate_ = strengthenSuccessRate_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iron_ = iron_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.Strengthen_Info other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.Strengthen_Info.getDefaultInstance()) return this;
        if (other.hasStrengthenSuccessRate()) {
          setStrengthenSuccessRate(other.getStrengthenSuccessRate());
        }
        if (other.hasIron()) {
          setIron(other.getIron());
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.Strengthen_Info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.Strengthen_Info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 strengthenSuccessRate = 1;
      private int strengthenSuccessRate_ ;
      /**
       * <code>optional int32 strengthenSuccessRate = 1;</code>
       *
       * <pre>
       *强化成功率
       * </pre>
       */
      public boolean hasStrengthenSuccessRate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 strengthenSuccessRate = 1;</code>
       *
       * <pre>
       *强化成功率
       * </pre>
       */
      public int getStrengthenSuccessRate() {
        return strengthenSuccessRate_;
      }
      /**
       * <code>optional int32 strengthenSuccessRate = 1;</code>
       *
       * <pre>
       *强化成功率
       * </pre>
       */
      public Builder setStrengthenSuccessRate(int value) {
        bitField0_ |= 0x00000001;
        strengthenSuccessRate_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 strengthenSuccessRate = 1;</code>
       *
       * <pre>
       *强化成功率
       * </pre>
       */
      public Builder clearStrengthenSuccessRate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        strengthenSuccessRate_ = 0;
        
        return this;
      }

      // optional int32 iron = 2;
      private int iron_ ;
      /**
       * <code>optional int32 iron = 2;</code>
       *
       * <pre>
       *强化花费银币
       * </pre>
       */
      public boolean hasIron() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 iron = 2;</code>
       *
       * <pre>
       *强化花费银币
       * </pre>
       */
      public int getIron() {
        return iron_;
      }
      /**
       * <code>optional int32 iron = 2;</code>
       *
       * <pre>
       *强化花费银币
       * </pre>
       */
      public Builder setIron(int value) {
        bitField0_ |= 0x00000002;
        iron_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 iron = 2;</code>
       *
       * <pre>
       *强化花费银币
       * </pre>
       */
      public Builder clearIron() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iron_ = 0;
        
        return this;
      }

      // optional int32 gold = 3;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *保成 强化需要金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *保成 强化需要金币
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *保成 强化需要金币
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000004;
        gold_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 gold = 3;</code>
       *
       * <pre>
       *保成 强化需要金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gold_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.Strengthen_Info)
    }

    static {
      defaultInstance = new Strengthen_Info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.Strengthen_Info)
  }

  public interface Freeze_InfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 freezeTime = 1;
    /**
     * <code>optional int64 freezeTime = 1;</code>
     *
     * <pre>
     *剩余强化冷却时间	 毫秒
     * </pre>
     */
    boolean hasFreezeTime();
    /**
     * <code>optional int64 freezeTime = 1;</code>
     *
     * <pre>
     *剩余强化冷却时间	 毫秒
     * </pre>
     */
    long getFreezeTime();

    // optional int32 freezeTimeAll = 2;
    /**
     * <code>optional int32 freezeTimeAll = 2;</code>
     *
     * <pre>
     *强化冷却时间上限 小时
     * </pre>
     */
    boolean hasFreezeTimeAll();
    /**
     * <code>optional int32 freezeTimeAll = 2;</code>
     *
     * <pre>
     *强化冷却时间上限 小时
     * </pre>
     */
    int getFreezeTimeAll();

    // optional bool canFreeze = 3;
    /**
     * <code>optional bool canFreeze = 3;</code>
     *
     * <pre>
     *是否可以强化
     * </pre>
     */
    boolean hasCanFreeze();
    /**
     * <code>optional bool canFreeze = 3;</code>
     *
     * <pre>
     *是否可以强化
     * </pre>
     */
    boolean getCanFreeze();

    // optional int32 unFreezeGold = 4;
    /**
     * <code>optional int32 unFreezeGold = 4;</code>
     *
     * <pre>
     *消除强化时间的金币数
     * </pre>
     */
    boolean hasUnFreezeGold();
    /**
     * <code>optional int32 unFreezeGold = 4;</code>
     *
     * <pre>
     *消除强化时间的金币数
     * </pre>
     */
    int getUnFreezeGold();
  }
  /**
   * Protobuf type {@code PROTO_TANK.Freeze_Info}
   *
   * <pre>
   *冷却体
   * </pre>
   */
  public static final class Freeze_Info extends
      com.google.protobuf.GeneratedMessageLite
      implements Freeze_InfoOrBuilder {
    // Use Freeze_Info.newBuilder() to construct.
    private Freeze_Info(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Freeze_Info(boolean noInit) {}

    private static final Freeze_Info defaultInstance;
    public static Freeze_Info getDefaultInstance() {
      return defaultInstance;
    }

    public Freeze_Info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Freeze_Info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              freezeTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              freezeTimeAll_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              canFreeze_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              unFreezeGold_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Freeze_Info> PARSER =
        new com.google.protobuf.AbstractParser<Freeze_Info>() {
      public Freeze_Info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Freeze_Info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Freeze_Info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 freezeTime = 1;
    public static final int FREEZETIME_FIELD_NUMBER = 1;
    private long freezeTime_;
    /**
     * <code>optional int64 freezeTime = 1;</code>
     *
     * <pre>
     *剩余强化冷却时间	 毫秒
     * </pre>
     */
    public boolean hasFreezeTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 freezeTime = 1;</code>
     *
     * <pre>
     *剩余强化冷却时间	 毫秒
     * </pre>
     */
    public long getFreezeTime() {
      return freezeTime_;
    }

    // optional int32 freezeTimeAll = 2;
    public static final int FREEZETIMEALL_FIELD_NUMBER = 2;
    private int freezeTimeAll_;
    /**
     * <code>optional int32 freezeTimeAll = 2;</code>
     *
     * <pre>
     *强化冷却时间上限 小时
     * </pre>
     */
    public boolean hasFreezeTimeAll() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 freezeTimeAll = 2;</code>
     *
     * <pre>
     *强化冷却时间上限 小时
     * </pre>
     */
    public int getFreezeTimeAll() {
      return freezeTimeAll_;
    }

    // optional bool canFreeze = 3;
    public static final int CANFREEZE_FIELD_NUMBER = 3;
    private boolean canFreeze_;
    /**
     * <code>optional bool canFreeze = 3;</code>
     *
     * <pre>
     *是否可以强化
     * </pre>
     */
    public boolean hasCanFreeze() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool canFreeze = 3;</code>
     *
     * <pre>
     *是否可以强化
     * </pre>
     */
    public boolean getCanFreeze() {
      return canFreeze_;
    }

    // optional int32 unFreezeGold = 4;
    public static final int UNFREEZEGOLD_FIELD_NUMBER = 4;
    private int unFreezeGold_;
    /**
     * <code>optional int32 unFreezeGold = 4;</code>
     *
     * <pre>
     *消除强化时间的金币数
     * </pre>
     */
    public boolean hasUnFreezeGold() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 unFreezeGold = 4;</code>
     *
     * <pre>
     *消除强化时间的金币数
     * </pre>
     */
    public int getUnFreezeGold() {
      return unFreezeGold_;
    }

    private void initFields() {
      freezeTime_ = 0L;
      freezeTimeAll_ = 0;
      canFreeze_ = false;
      unFreezeGold_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, freezeTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, freezeTimeAll_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, canFreeze_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, unFreezeGold_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, freezeTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, freezeTimeAll_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, canFreeze_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, unFreezeGold_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.Freeze_Info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.Freeze_Info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.Freeze_Info}
     *
     * <pre>
     *冷却体
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.Freeze_Info, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.Freeze_InfoOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.Freeze_Info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        freezeTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        freezeTimeAll_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        canFreeze_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        unFreezeGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.Freeze_Info getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.Freeze_Info build() {
        com.ourpalm.tank.message.TANK_MSG.Freeze_Info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.Freeze_Info buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.Freeze_Info result = new com.ourpalm.tank.message.TANK_MSG.Freeze_Info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.freezeTime_ = freezeTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freezeTimeAll_ = freezeTimeAll_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.canFreeze_ = canFreeze_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.unFreezeGold_ = unFreezeGold_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.Freeze_Info other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance()) return this;
        if (other.hasFreezeTime()) {
          setFreezeTime(other.getFreezeTime());
        }
        if (other.hasFreezeTimeAll()) {
          setFreezeTimeAll(other.getFreezeTimeAll());
        }
        if (other.hasCanFreeze()) {
          setCanFreeze(other.getCanFreeze());
        }
        if (other.hasUnFreezeGold()) {
          setUnFreezeGold(other.getUnFreezeGold());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.Freeze_Info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.Freeze_Info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 freezeTime = 1;
      private long freezeTime_ ;
      /**
       * <code>optional int64 freezeTime = 1;</code>
       *
       * <pre>
       *剩余强化冷却时间	 毫秒
       * </pre>
       */
      public boolean hasFreezeTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 freezeTime = 1;</code>
       *
       * <pre>
       *剩余强化冷却时间	 毫秒
       * </pre>
       */
      public long getFreezeTime() {
        return freezeTime_;
      }
      /**
       * <code>optional int64 freezeTime = 1;</code>
       *
       * <pre>
       *剩余强化冷却时间	 毫秒
       * </pre>
       */
      public Builder setFreezeTime(long value) {
        bitField0_ |= 0x00000001;
        freezeTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 freezeTime = 1;</code>
       *
       * <pre>
       *剩余强化冷却时间	 毫秒
       * </pre>
       */
      public Builder clearFreezeTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        freezeTime_ = 0L;
        
        return this;
      }

      // optional int32 freezeTimeAll = 2;
      private int freezeTimeAll_ ;
      /**
       * <code>optional int32 freezeTimeAll = 2;</code>
       *
       * <pre>
       *强化冷却时间上限 小时
       * </pre>
       */
      public boolean hasFreezeTimeAll() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 freezeTimeAll = 2;</code>
       *
       * <pre>
       *强化冷却时间上限 小时
       * </pre>
       */
      public int getFreezeTimeAll() {
        return freezeTimeAll_;
      }
      /**
       * <code>optional int32 freezeTimeAll = 2;</code>
       *
       * <pre>
       *强化冷却时间上限 小时
       * </pre>
       */
      public Builder setFreezeTimeAll(int value) {
        bitField0_ |= 0x00000002;
        freezeTimeAll_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 freezeTimeAll = 2;</code>
       *
       * <pre>
       *强化冷却时间上限 小时
       * </pre>
       */
      public Builder clearFreezeTimeAll() {
        bitField0_ = (bitField0_ & ~0x00000002);
        freezeTimeAll_ = 0;
        
        return this;
      }

      // optional bool canFreeze = 3;
      private boolean canFreeze_ ;
      /**
       * <code>optional bool canFreeze = 3;</code>
       *
       * <pre>
       *是否可以强化
       * </pre>
       */
      public boolean hasCanFreeze() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool canFreeze = 3;</code>
       *
       * <pre>
       *是否可以强化
       * </pre>
       */
      public boolean getCanFreeze() {
        return canFreeze_;
      }
      /**
       * <code>optional bool canFreeze = 3;</code>
       *
       * <pre>
       *是否可以强化
       * </pre>
       */
      public Builder setCanFreeze(boolean value) {
        bitField0_ |= 0x00000004;
        canFreeze_ = value;
        
        return this;
      }
      /**
       * <code>optional bool canFreeze = 3;</code>
       *
       * <pre>
       *是否可以强化
       * </pre>
       */
      public Builder clearCanFreeze() {
        bitField0_ = (bitField0_ & ~0x00000004);
        canFreeze_ = false;
        
        return this;
      }

      // optional int32 unFreezeGold = 4;
      private int unFreezeGold_ ;
      /**
       * <code>optional int32 unFreezeGold = 4;</code>
       *
       * <pre>
       *消除强化时间的金币数
       * </pre>
       */
      public boolean hasUnFreezeGold() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 unFreezeGold = 4;</code>
       *
       * <pre>
       *消除强化时间的金币数
       * </pre>
       */
      public int getUnFreezeGold() {
        return unFreezeGold_;
      }
      /**
       * <code>optional int32 unFreezeGold = 4;</code>
       *
       * <pre>
       *消除强化时间的金币数
       * </pre>
       */
      public Builder setUnFreezeGold(int value) {
        bitField0_ |= 0x00000008;
        unFreezeGold_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 unFreezeGold = 4;</code>
       *
       * <pre>
       *消除强化时间的金币数
       * </pre>
       */
      public Builder clearUnFreezeGold() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unFreezeGold_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.Freeze_Info)
    }

    static {
      defaultInstance = new Freeze_Info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.Freeze_Info)
  }

  public interface CTS_OPEN_GROOVE_SHOW_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_OPEN_GROOVE_SHOW_MSG}
   *
   * <pre>
   *开槽信息
   * </pre>
   */
  public static final class CTS_OPEN_GROOVE_SHOW_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_OPEN_GROOVE_SHOW_MSGOrBuilder {
    // Use CTS_OPEN_GROOVE_SHOW_MSG.newBuilder() to construct.
    private CTS_OPEN_GROOVE_SHOW_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_OPEN_GROOVE_SHOW_MSG(boolean noInit) {}

    private static final CTS_OPEN_GROOVE_SHOW_MSG defaultInstance;
    public static CTS_OPEN_GROOVE_SHOW_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_OPEN_GROOVE_SHOW_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_OPEN_GROOVE_SHOW_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_OPEN_GROOVE_SHOW_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_OPEN_GROOVE_SHOW_MSG>() {
      public CTS_OPEN_GROOVE_SHOW_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_OPEN_GROOVE_SHOW_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_OPEN_GROOVE_SHOW_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    private void initFields() {
      tankId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_OPEN_GROOVE_SHOW_MSG}
     *
     * <pre>
     *开槽信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_SHOW_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_OPEN_GROOVE_SHOW_MSG)
    }

    static {
      defaultInstance = new CTS_OPEN_GROOVE_SHOW_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_OPEN_GROOVE_SHOW_MSG)
  }

  public interface STC_OPEN_GROOVE_SHOW_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int32 drawGold = 1;
    /**
     * <code>optional int32 drawGold = 1;</code>
     *
     * <pre>
     *抽奖金币
     * </pre>
     */
    boolean hasDrawGold();
    /**
     * <code>optional int32 drawGold = 1;</code>
     *
     * <pre>
     *抽奖金币
     * </pre>
     */
    int getDrawGold();

    // optional int32 buyGold = 2;
    /**
     * <code>optional int32 buyGold = 2;</code>
     *
     * <pre>
     *直接购买金币
     * </pre>
     */
    boolean hasBuyGold();
    /**
     * <code>optional int32 buyGold = 2;</code>
     *
     * <pre>
     *直接购买金币
     * </pre>
     */
    int getBuyGold();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_OPEN_GROOVE_SHOW_MSG}
   *
   * <pre>
   *开槽信息返回
   * </pre>
   */
  public static final class STC_OPEN_GROOVE_SHOW_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_OPEN_GROOVE_SHOW_MSGOrBuilder {
    // Use STC_OPEN_GROOVE_SHOW_MSG.newBuilder() to construct.
    private STC_OPEN_GROOVE_SHOW_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_OPEN_GROOVE_SHOW_MSG(boolean noInit) {}

    private static final STC_OPEN_GROOVE_SHOW_MSG defaultInstance;
    public static STC_OPEN_GROOVE_SHOW_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_OPEN_GROOVE_SHOW_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_OPEN_GROOVE_SHOW_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              drawGold_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              buyGold_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_OPEN_GROOVE_SHOW_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_OPEN_GROOVE_SHOW_MSG>() {
      public STC_OPEN_GROOVE_SHOW_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_OPEN_GROOVE_SHOW_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_OPEN_GROOVE_SHOW_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 drawGold = 1;
    public static final int DRAWGOLD_FIELD_NUMBER = 1;
    private int drawGold_;
    /**
     * <code>optional int32 drawGold = 1;</code>
     *
     * <pre>
     *抽奖金币
     * </pre>
     */
    public boolean hasDrawGold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 drawGold = 1;</code>
     *
     * <pre>
     *抽奖金币
     * </pre>
     */
    public int getDrawGold() {
      return drawGold_;
    }

    // optional int32 buyGold = 2;
    public static final int BUYGOLD_FIELD_NUMBER = 2;
    private int buyGold_;
    /**
     * <code>optional int32 buyGold = 2;</code>
     *
     * <pre>
     *直接购买金币
     * </pre>
     */
    public boolean hasBuyGold() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 buyGold = 2;</code>
     *
     * <pre>
     *直接购买金币
     * </pre>
     */
    public int getBuyGold() {
      return buyGold_;
    }

    private void initFields() {
      drawGold_ = 0;
      buyGold_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, drawGold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, buyGold_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, drawGold_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, buyGold_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_OPEN_GROOVE_SHOW_MSG}
     *
     * <pre>
     *开槽信息返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        drawGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        buyGold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.drawGold_ = drawGold_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.buyGold_ = buyGold_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG.getDefaultInstance()) return this;
        if (other.hasDrawGold()) {
          setDrawGold(other.getDrawGold());
        }
        if (other.hasBuyGold()) {
          setBuyGold(other.getBuyGold());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_SHOW_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 drawGold = 1;
      private int drawGold_ ;
      /**
       * <code>optional int32 drawGold = 1;</code>
       *
       * <pre>
       *抽奖金币
       * </pre>
       */
      public boolean hasDrawGold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 drawGold = 1;</code>
       *
       * <pre>
       *抽奖金币
       * </pre>
       */
      public int getDrawGold() {
        return drawGold_;
      }
      /**
       * <code>optional int32 drawGold = 1;</code>
       *
       * <pre>
       *抽奖金币
       * </pre>
       */
      public Builder setDrawGold(int value) {
        bitField0_ |= 0x00000001;
        drawGold_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 drawGold = 1;</code>
       *
       * <pre>
       *抽奖金币
       * </pre>
       */
      public Builder clearDrawGold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        drawGold_ = 0;
        
        return this;
      }

      // optional int32 buyGold = 2;
      private int buyGold_ ;
      /**
       * <code>optional int32 buyGold = 2;</code>
       *
       * <pre>
       *直接购买金币
       * </pre>
       */
      public boolean hasBuyGold() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 buyGold = 2;</code>
       *
       * <pre>
       *直接购买金币
       * </pre>
       */
      public int getBuyGold() {
        return buyGold_;
      }
      /**
       * <code>optional int32 buyGold = 2;</code>
       *
       * <pre>
       *直接购买金币
       * </pre>
       */
      public Builder setBuyGold(int value) {
        bitField0_ |= 0x00000002;
        buyGold_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 buyGold = 2;</code>
       *
       * <pre>
       *直接购买金币
       * </pre>
       */
      public Builder clearBuyGold() {
        bitField0_ = (bitField0_ & ~0x00000002);
        buyGold_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_OPEN_GROOVE_SHOW_MSG)
    }

    static {
      defaultInstance = new STC_OPEN_GROOVE_SHOW_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_OPEN_GROOVE_SHOW_MSG)
  }

  public interface CTS_OPEN_GROOVE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1抽奖 2直接购买
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1抽奖 2直接购买
     * </pre>
     */
    int getType();

    // required uint32 tankId = 2;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_OPEN_GROOVE_MSG}
   *
   * <pre>
   *开槽
   * </pre>
   */
  public static final class CTS_OPEN_GROOVE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_OPEN_GROOVE_MSGOrBuilder {
    // Use CTS_OPEN_GROOVE_MSG.newBuilder() to construct.
    private CTS_OPEN_GROOVE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_OPEN_GROOVE_MSG(boolean noInit) {}

    private static final CTS_OPEN_GROOVE_MSG defaultInstance;
    public static CTS_OPEN_GROOVE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_OPEN_GROOVE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_OPEN_GROOVE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_OPEN_GROOVE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_OPEN_GROOVE_MSG>() {
      public CTS_OPEN_GROOVE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_OPEN_GROOVE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_OPEN_GROOVE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1抽奖 2直接购买
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1抽奖 2直接购买
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required uint32 tankId = 2;
    public static final int TANKID_FIELD_NUMBER = 2;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    private void initFields() {
      type_ = 0;
      tankId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_OPEN_GROOVE_MSG}
     *
     * <pre>
     *开槽
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankId_ = tankId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasTankId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_OPEN_GROOVE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1抽奖 2直接购买
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1抽奖 2直接购买
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1抽奖 2直接购买
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1抽奖 2直接购买
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        
        return this;
      }

      // required uint32 tankId = 2;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000002;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_OPEN_GROOVE_MSG)
    }

    static {
      defaultInstance = new CTS_OPEN_GROOVE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_OPEN_GROOVE_MSG)
  }

  public interface STC_OPEN_GROOVE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1抽奖2直接购买
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1抽奖2直接购买
     * </pre>
     */
    int getType();

    // required int32 result = 2;
    /**
     * <code>required int32 result = 2;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required int32 result = 2;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    int getResult();

    // required string info = 3;
    /**
     * <code>required string info = 3;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 3;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 3;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // optional .PROTO_TANK.RewardItem item = 4;
    /**
     * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
     *
     * <pre>
     *抽奖没得到开槽，所得奖励，目前是银币，物品两种
     * </pre>
     */
    boolean hasItem();
    /**
     * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
     *
     * <pre>
     *抽奖没得到开槽，所得奖励，目前是银币，物品两种
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.RewardItem getItem();

    // optional int32 grooveNum = 5;
    /**
     * <code>optional int32 grooveNum = 5;</code>
     *
     * <pre>
     *当前槽位数	
     * </pre>
     */
    boolean hasGrooveNum();
    /**
     * <code>optional int32 grooveNum = 5;</code>
     *
     * <pre>
     *当前槽位数	
     * </pre>
     */
    int getGrooveNum();

    // optional int32 partOnNum = 6;
    /**
     * <code>optional int32 partOnNum = 6;</code>
     *
     * <pre>
     *当前已装备的槽位	
     * </pre>
     */
    boolean hasPartOnNum();
    /**
     * <code>optional int32 partOnNum = 6;</code>
     *
     * <pre>
     *当前已装备的槽位	
     * </pre>
     */
    int getPartOnNum();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_OPEN_GROOVE_MSG}
   *
   * <pre>
   *开槽返回 
   * </pre>
   */
  public static final class STC_OPEN_GROOVE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_OPEN_GROOVE_MSGOrBuilder {
    // Use STC_OPEN_GROOVE_MSG.newBuilder() to construct.
    private STC_OPEN_GROOVE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_OPEN_GROOVE_MSG(boolean noInit) {}

    private static final STC_OPEN_GROOVE_MSG defaultInstance;
    public static STC_OPEN_GROOVE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_OPEN_GROOVE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_OPEN_GROOVE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              result_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              info_ = input.readBytes();
              break;
            }
            case 34: {
              com.ourpalm.tank.message.TANK_MSG.RewardItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = item_.toBuilder();
              }
              item_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.RewardItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(item_);
                item_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              grooveNum_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              partOnNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_OPEN_GROOVE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_OPEN_GROOVE_MSG>() {
      public STC_OPEN_GROOVE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_OPEN_GROOVE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_OPEN_GROOVE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1抽奖2直接购买
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1抽奖2直接购买
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 result = 2;
    public static final int RESULT_FIELD_NUMBER = 2;
    private int result_;
    /**
     * <code>required int32 result = 2;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 result = 2;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // required string info = 3;
    public static final int INFO_FIELD_NUMBER = 3;
    private java.lang.Object info_;
    /**
     * <code>required string info = 3;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string info = 3;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 3;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .PROTO_TANK.RewardItem item = 4;
    public static final int ITEM_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.TANK_MSG.RewardItem item_;
    /**
     * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
     *
     * <pre>
     *抽奖没得到开槽，所得奖励，目前是银币，物品两种
     * </pre>
     */
    public boolean hasItem() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
     *
     * <pre>
     *抽奖没得到开槽，所得奖励，目前是银币，物品两种
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.RewardItem getItem() {
      return item_;
    }

    // optional int32 grooveNum = 5;
    public static final int GROOVENUM_FIELD_NUMBER = 5;
    private int grooveNum_;
    /**
     * <code>optional int32 grooveNum = 5;</code>
     *
     * <pre>
     *当前槽位数	
     * </pre>
     */
    public boolean hasGrooveNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 grooveNum = 5;</code>
     *
     * <pre>
     *当前槽位数	
     * </pre>
     */
    public int getGrooveNum() {
      return grooveNum_;
    }

    // optional int32 partOnNum = 6;
    public static final int PARTONNUM_FIELD_NUMBER = 6;
    private int partOnNum_;
    /**
     * <code>optional int32 partOnNum = 6;</code>
     *
     * <pre>
     *当前已装备的槽位	
     * </pre>
     */
    public boolean hasPartOnNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 partOnNum = 6;</code>
     *
     * <pre>
     *当前已装备的槽位	
     * </pre>
     */
    public int getPartOnNum() {
      return partOnNum_;
    }

    private void initFields() {
      type_ = 0;
      result_ = 0;
      info_ = "";
      item_ = com.ourpalm.tank.message.TANK_MSG.RewardItem.getDefaultInstance();
      grooveNum_ = 0;
      partOnNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, result_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getInfoBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, item_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, grooveNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, partOnNum_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, result_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getInfoBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, item_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, grooveNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, partOnNum_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_OPEN_GROOVE_MSG}
     *
     * <pre>
     *开槽返回 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        item_ = com.ourpalm.tank.message.TANK_MSG.RewardItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        grooveNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        partOnNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.item_ = item_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.grooveNum_ = grooveNum_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.partOnNum_ = partOnNum_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000004;
          info_ = other.info_;
          
        }
        if (other.hasItem()) {
          mergeItem(other.getItem());
        }
        if (other.hasGrooveNum()) {
          setGrooveNum(other.getGrooveNum());
        }
        if (other.hasPartOnNum()) {
          setPartOnNum(other.getPartOnNum());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasResult()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_OPEN_GROOVE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1抽奖2直接购买
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1抽奖2直接购买
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1抽奖2直接购买
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1抽奖2直接购买
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        
        return this;
      }

      // required int32 result = 2;
      private int result_ ;
      /**
       * <code>required int32 result = 2;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 result = 2;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required int32 result = 2;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000002;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required int32 result = 2;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = 0;
        
        return this;
      }

      // required string info = 3;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 3;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string info = 3;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 3;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 3;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 3;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 3;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        info_ = value;
        
        return this;
      }

      // optional .PROTO_TANK.RewardItem item = 4;
      private com.ourpalm.tank.message.TANK_MSG.RewardItem item_ = com.ourpalm.tank.message.TANK_MSG.RewardItem.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
       *
       * <pre>
       *抽奖没得到开槽，所得奖励，目前是银币，物品两种
       * </pre>
       */
      public boolean hasItem() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
       *
       * <pre>
       *抽奖没得到开槽，所得奖励，目前是银币，物品两种
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.RewardItem getItem() {
        return item_;
      }
      /**
       * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
       *
       * <pre>
       *抽奖没得到开槽，所得奖励，目前是银币，物品两种
       * </pre>
       */
      public Builder setItem(com.ourpalm.tank.message.TANK_MSG.RewardItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        item_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
       *
       * <pre>
       *抽奖没得到开槽，所得奖励，目前是银币，物品两种
       * </pre>
       */
      public Builder setItem(
          com.ourpalm.tank.message.TANK_MSG.RewardItem.Builder builderForValue) {
        item_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
       *
       * <pre>
       *抽奖没得到开槽，所得奖励，目前是银币，物品两种
       * </pre>
       */
      public Builder mergeItem(com.ourpalm.tank.message.TANK_MSG.RewardItem value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            item_ != com.ourpalm.tank.message.TANK_MSG.RewardItem.getDefaultInstance()) {
          item_ =
            com.ourpalm.tank.message.TANK_MSG.RewardItem.newBuilder(item_).mergeFrom(value).buildPartial();
        } else {
          item_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.RewardItem item = 4;</code>
       *
       * <pre>
       *抽奖没得到开槽，所得奖励，目前是银币，物品两种
       * </pre>
       */
      public Builder clearItem() {
        item_ = com.ourpalm.tank.message.TANK_MSG.RewardItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // optional int32 grooveNum = 5;
      private int grooveNum_ ;
      /**
       * <code>optional int32 grooveNum = 5;</code>
       *
       * <pre>
       *当前槽位数	
       * </pre>
       */
      public boolean hasGrooveNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 grooveNum = 5;</code>
       *
       * <pre>
       *当前槽位数	
       * </pre>
       */
      public int getGrooveNum() {
        return grooveNum_;
      }
      /**
       * <code>optional int32 grooveNum = 5;</code>
       *
       * <pre>
       *当前槽位数	
       * </pre>
       */
      public Builder setGrooveNum(int value) {
        bitField0_ |= 0x00000010;
        grooveNum_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 grooveNum = 5;</code>
       *
       * <pre>
       *当前槽位数	
       * </pre>
       */
      public Builder clearGrooveNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        grooveNum_ = 0;
        
        return this;
      }

      // optional int32 partOnNum = 6;
      private int partOnNum_ ;
      /**
       * <code>optional int32 partOnNum = 6;</code>
       *
       * <pre>
       *当前已装备的槽位	
       * </pre>
       */
      public boolean hasPartOnNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 partOnNum = 6;</code>
       *
       * <pre>
       *当前已装备的槽位	
       * </pre>
       */
      public int getPartOnNum() {
        return partOnNum_;
      }
      /**
       * <code>optional int32 partOnNum = 6;</code>
       *
       * <pre>
       *当前已装备的槽位	
       * </pre>
       */
      public Builder setPartOnNum(int value) {
        bitField0_ |= 0x00000020;
        partOnNum_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 partOnNum = 6;</code>
       *
       * <pre>
       *当前已装备的槽位	
       * </pre>
       */
      public Builder clearPartOnNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        partOnNum_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_OPEN_GROOVE_MSG)
    }

    static {
      defaultInstance = new STC_OPEN_GROOVE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_OPEN_GROOVE_MSG)
  }

  public interface RewardItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional uint32 id = 1;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     *id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     *id
     * </pre>
     */
    int getId();

    // optional uint32 count = 2;
    /**
     * <code>optional uint32 count = 2;</code>
     *
     * <pre>
     *数量
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>optional uint32 count = 2;</code>
     *
     * <pre>
     *数量
     * </pre>
     */
    int getCount();

    // optional .PROTO_TANK.RewardType type = 3;
    /**
     * <code>optional .PROTO_TANK.RewardType type = 3;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .PROTO_TANK.RewardType type = 3;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.RewardType getType();
  }
  /**
   * Protobuf type {@code PROTO_TANK.RewardItem}
   *
   * <pre>
   *奖励内容
   * </pre>
   */
  public static final class RewardItem extends
      com.google.protobuf.GeneratedMessageLite
      implements RewardItemOrBuilder {
    // Use RewardItem.newBuilder() to construct.
    private RewardItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private RewardItem(boolean noInit) {}

    private static final RewardItem defaultInstance;
    public static RewardItem getDefaultInstance() {
      return defaultInstance;
    }

    public RewardItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private RewardItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.TANK_MSG.RewardType value = com.ourpalm.tank.message.TANK_MSG.RewardType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<RewardItem> PARSER =
        new com.google.protobuf.AbstractParser<RewardItem>() {
      public RewardItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RewardItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RewardItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     *id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     *id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional uint32 count = 2;
    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>optional uint32 count = 2;</code>
     *
     * <pre>
     *数量
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 count = 2;</code>
     *
     * <pre>
     *数量
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    // optional .PROTO_TANK.RewardType type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.TANK_MSG.RewardType type_;
    /**
     * <code>optional .PROTO_TANK.RewardType type = 3;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .PROTO_TANK.RewardType type = 3;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.RewardType getType() {
      return type_;
    }

    private void initFields() {
      id_ = 0;
      count_ = 0;
      type_ = com.ourpalm.tank.message.TANK_MSG.RewardType.TANK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.RewardItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.RewardItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.RewardItem}
     *
     * <pre>
     *奖励内容
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.RewardItem, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.RewardItemOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.RewardItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.ourpalm.tank.message.TANK_MSG.RewardType.TANK;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.RewardItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.RewardItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.RewardItem build() {
        com.ourpalm.tank.message.TANK_MSG.RewardItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.RewardItem buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.RewardItem result = new com.ourpalm.tank.message.TANK_MSG.RewardItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.RewardItem other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.RewardItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.RewardItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.RewardItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 id = 1;
      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       *id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       *id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       *id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       *id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // optional uint32 count = 2;
      private int count_ ;
      /**
       * <code>optional uint32 count = 2;</code>
       *
       * <pre>
       *数量
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 count = 2;</code>
       *
       * <pre>
       *数量
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       *
       * <pre>
       *数量
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       *
       * <pre>
       *数量
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        
        return this;
      }

      // optional .PROTO_TANK.RewardType type = 3;
      private com.ourpalm.tank.message.TANK_MSG.RewardType type_ = com.ourpalm.tank.message.TANK_MSG.RewardType.TANK;
      /**
       * <code>optional .PROTO_TANK.RewardType type = 3;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PROTO_TANK.RewardType type = 3;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.RewardType getType() {
        return type_;
      }
      /**
       * <code>optional .PROTO_TANK.RewardType type = 3;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder setType(com.ourpalm.tank.message.TANK_MSG.RewardType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.RewardType type = 3;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = com.ourpalm.tank.message.TANK_MSG.RewardType.TANK;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.RewardItem)
    }

    static {
      defaultInstance = new RewardItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.RewardItem)
  }

  public interface CTS_CLEAR_FREEZE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_CLEAR_FREEZE_MSG}
   *
   * <pre>
   *消除冷却
   * </pre>
   */
  public static final class CTS_CLEAR_FREEZE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_CLEAR_FREEZE_MSGOrBuilder {
    // Use CTS_CLEAR_FREEZE_MSG.newBuilder() to construct.
    private CTS_CLEAR_FREEZE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_CLEAR_FREEZE_MSG(boolean noInit) {}

    private static final CTS_CLEAR_FREEZE_MSG defaultInstance;
    public static CTS_CLEAR_FREEZE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_CLEAR_FREEZE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_CLEAR_FREEZE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_CLEAR_FREEZE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_CLEAR_FREEZE_MSG>() {
      public CTS_CLEAR_FREEZE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_CLEAR_FREEZE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_CLEAR_FREEZE_MSG> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_CLEAR_FREEZE_MSG}
     *
     * <pre>
     *消除冷却
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG(this);
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG.getDefaultInstance()) return this;
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_CLEAR_FREEZE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_CLEAR_FREEZE_MSG)
    }

    static {
      defaultInstance = new CTS_CLEAR_FREEZE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_CLEAR_FREEZE_MSG)
  }

  public interface STC_CLEAR_FREEZE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 result = 1;
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    int getResult();

    // required string info = 2;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // optional .PROTO_TANK.Freeze_Info freezeInfo = 3;
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
     *
     * <pre>
     *冷却体	
     * </pre>
     */
    boolean hasFreezeInfo();
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
     *
     * <pre>
     *冷却体	
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_CLEAR_FREEZE_MSG}
   *
   * <pre>
   *消除冷却返回
   * </pre>
   */
  public static final class STC_CLEAR_FREEZE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_CLEAR_FREEZE_MSGOrBuilder {
    // Use STC_CLEAR_FREEZE_MSG.newBuilder() to construct.
    private STC_CLEAR_FREEZE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_CLEAR_FREEZE_MSG(boolean noInit) {}

    private static final STC_CLEAR_FREEZE_MSG defaultInstance;
    public static STC_CLEAR_FREEZE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_CLEAR_FREEZE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_CLEAR_FREEZE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 26: {
              com.ourpalm.tank.message.TANK_MSG.Freeze_Info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = freezeInfo_.toBuilder();
              }
              freezeInfo_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.Freeze_Info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freezeInfo_);
                freezeInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_CLEAR_FREEZE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_CLEAR_FREEZE_MSG>() {
      public STC_CLEAR_FREEZE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_CLEAR_FREEZE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_CLEAR_FREEZE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // required string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .PROTO_TANK.Freeze_Info freezeInfo = 3;
    public static final int FREEZEINFO_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.TANK_MSG.Freeze_Info freezeInfo_;
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
     *
     * <pre>
     *冷却体	
     * </pre>
     */
    public boolean hasFreezeInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
     *
     * <pre>
     *冷却体	
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo() {
      return freezeInfo_;
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
      freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, freezeInfo_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, freezeInfo_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_CLEAR_FREEZE_MSG}
     *
     * <pre>
     *消除冷却返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.freezeInfo_ = freezeInfo_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (other.hasFreezeInfo()) {
          mergeFreezeInfo(other.getFreezeInfo());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_CLEAR_FREEZE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 result = 1;
      private int result_ ;
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // required string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // optional .PROTO_TANK.Freeze_Info freezeInfo = 3;
      private com.ourpalm.tank.message.TANK_MSG.Freeze_Info freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体	
       * </pre>
       */
      public boolean hasFreezeInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体	
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.Freeze_Info getFreezeInfo() {
        return freezeInfo_;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体	
       * </pre>
       */
      public Builder setFreezeInfo(com.ourpalm.tank.message.TANK_MSG.Freeze_Info value) {
        if (value == null) {
          throw new NullPointerException();
        }
        freezeInfo_ = value;

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体	
       * </pre>
       */
      public Builder setFreezeInfo(
          com.ourpalm.tank.message.TANK_MSG.Freeze_Info.Builder builderForValue) {
        freezeInfo_ = builderForValue.build();

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体	
       * </pre>
       */
      public Builder mergeFreezeInfo(com.ourpalm.tank.message.TANK_MSG.Freeze_Info value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            freezeInfo_ != com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance()) {
          freezeInfo_ =
            com.ourpalm.tank.message.TANK_MSG.Freeze_Info.newBuilder(freezeInfo_).mergeFrom(value).buildPartial();
        } else {
          freezeInfo_ = value;
        }

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.Freeze_Info freezeInfo = 3;</code>
       *
       * <pre>
       *冷却体	
       * </pre>
       */
      public Builder clearFreezeInfo() {
        freezeInfo_ = com.ourpalm.tank.message.TANK_MSG.Freeze_Info.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_CLEAR_FREEZE_MSG)
    }

    static {
      defaultInstance = new STC_CLEAR_FREEZE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_CLEAR_FREEZE_MSG)
  }

  public interface CTS_ONE_KEY_STRENGTHEN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 level = 1;
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     *目标等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     *目标等级
     * </pre>
     */
    int getLevel();

    // required uint32 tankId = 2;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // required .PROTO_TANK.PART_INDEX partIndex = 3;
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    boolean hasPartIndex();
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_ONE_KEY_STRENGTHEN_MSG}
   *
   * <pre>
   *一键强化需要金币数
   * </pre>
   */
  public static final class CTS_ONE_KEY_STRENGTHEN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_ONE_KEY_STRENGTHEN_MSGOrBuilder {
    // Use CTS_ONE_KEY_STRENGTHEN_MSG.newBuilder() to construct.
    private CTS_ONE_KEY_STRENGTHEN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_ONE_KEY_STRENGTHEN_MSG(boolean noInit) {}

    private static final CTS_ONE_KEY_STRENGTHEN_MSG defaultInstance;
    public static CTS_ONE_KEY_STRENGTHEN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_ONE_KEY_STRENGTHEN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_ONE_KEY_STRENGTHEN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              level_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankId_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.TANK_MSG.PART_INDEX value = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                partIndex_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_ONE_KEY_STRENGTHEN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_ONE_KEY_STRENGTHEN_MSG>() {
      public CTS_ONE_KEY_STRENGTHEN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_ONE_KEY_STRENGTHEN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_ONE_KEY_STRENGTHEN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 level = 1;
    public static final int LEVEL_FIELD_NUMBER = 1;
    private int level_;
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     *目标等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     *目标等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // required uint32 tankId = 2;
    public static final int TANKID_FIELD_NUMBER = 2;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required .PROTO_TANK.PART_INDEX partIndex = 3;
    public static final int PARTINDEX_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.TANK_MSG.PART_INDEX partIndex_;
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    public boolean hasPartIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex() {
      return partIndex_;
    }

    private void initFields() {
      level_ = 0;
      tankId_ = 0;
      partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPartIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, partIndex_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, partIndex_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_ONE_KEY_STRENGTHEN_MSG}
     *
     * <pre>
     *一键强化需要金币数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.partIndex_ = partIndex_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG.getDefaultInstance()) return this;
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasPartIndex()) {
          setPartIndex(other.getPartIndex());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasPartIndex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_ONE_KEY_STRENGTHEN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 level = 1;
      private int level_ ;
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       *目标等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       *目标等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       *目标等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000001;
        level_ = value;
        
        return this;
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       *目标等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        
        return this;
      }

      // required uint32 tankId = 2;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000002;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        
        return this;
      }

      // required .PROTO_TANK.PART_INDEX partIndex = 3;
      private com.ourpalm.tank.message.TANK_MSG.PART_INDEX partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public boolean hasPartIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex() {
        return partIndex_;
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public Builder setPartIndex(com.ourpalm.tank.message.TANK_MSG.PART_INDEX value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        partIndex_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public Builder clearPartIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_ONE_KEY_STRENGTHEN_MSG)
    }

    static {
      defaultInstance = new CTS_ONE_KEY_STRENGTHEN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_ONE_KEY_STRENGTHEN_MSG)
  }

  public interface STC_ONE_KEY_STRENGTHEN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 gold = 1;
    /**
     * <code>required int32 gold = 1;</code>
     *
     * <pre>
     *共需要的金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>required int32 gold = 1;</code>
     *
     * <pre>
     *共需要的金币
     * </pre>
     */
    int getGold();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_ONE_KEY_STRENGTHEN_MSG}
   *
   * <pre>
   *一键强化需要金币数返回
   * </pre>
   */
  public static final class STC_ONE_KEY_STRENGTHEN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_ONE_KEY_STRENGTHEN_MSGOrBuilder {
    // Use STC_ONE_KEY_STRENGTHEN_MSG.newBuilder() to construct.
    private STC_ONE_KEY_STRENGTHEN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_ONE_KEY_STRENGTHEN_MSG(boolean noInit) {}

    private static final STC_ONE_KEY_STRENGTHEN_MSG defaultInstance;
    public static STC_ONE_KEY_STRENGTHEN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_ONE_KEY_STRENGTHEN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_ONE_KEY_STRENGTHEN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gold_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_ONE_KEY_STRENGTHEN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_ONE_KEY_STRENGTHEN_MSG>() {
      public STC_ONE_KEY_STRENGTHEN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_ONE_KEY_STRENGTHEN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_ONE_KEY_STRENGTHEN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 gold = 1;
    public static final int GOLD_FIELD_NUMBER = 1;
    private int gold_;
    /**
     * <code>required int32 gold = 1;</code>
     *
     * <pre>
     *共需要的金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 gold = 1;</code>
     *
     * <pre>
     *共需要的金币
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    private void initFields() {
      gold_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gold_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gold_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_ONE_KEY_STRENGTHEN_MSG}
     *
     * <pre>
     *一键强化需要金币数返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gold_ = gold_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG.getDefaultInstance()) return this;
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGold()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_ONE_KEY_STRENGTHEN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 gold = 1;
      private int gold_ ;
      /**
       * <code>required int32 gold = 1;</code>
       *
       * <pre>
       *共需要的金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 gold = 1;</code>
       *
       * <pre>
       *共需要的金币
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>required int32 gold = 1;</code>
       *
       * <pre>
       *共需要的金币
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000001;
        gold_ = value;
        
        return this;
      }
      /**
       * <code>required int32 gold = 1;</code>
       *
       * <pre>
       *共需要的金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gold_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_ONE_KEY_STRENGTHEN_MSG)
    }

    static {
      defaultInstance = new STC_ONE_KEY_STRENGTHEN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_ONE_KEY_STRENGTHEN_MSG)
  }

  public interface CTS_UP_DOWN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1装 2 卸
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1装 2 卸
     * </pre>
     */
    int getType();

    // required uint32 tankId = 2;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // required .PROTO_TANK.PART_INDEX partIndex = 3;
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    boolean hasPartIndex();
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_UP_DOWN_MSG}
   *
   * <pre>
   *装和卸
   * </pre>
   */
  public static final class CTS_UP_DOWN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_UP_DOWN_MSGOrBuilder {
    // Use CTS_UP_DOWN_MSG.newBuilder() to construct.
    private CTS_UP_DOWN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_UP_DOWN_MSG(boolean noInit) {}

    private static final CTS_UP_DOWN_MSG defaultInstance;
    public static CTS_UP_DOWN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_UP_DOWN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_UP_DOWN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankId_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.TANK_MSG.PART_INDEX value = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                partIndex_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_UP_DOWN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_UP_DOWN_MSG>() {
      public CTS_UP_DOWN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_UP_DOWN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_UP_DOWN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1装 2 卸
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *1装 2 卸
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required uint32 tankId = 2;
    public static final int TANKID_FIELD_NUMBER = 2;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required .PROTO_TANK.PART_INDEX partIndex = 3;
    public static final int PARTINDEX_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.TANK_MSG.PART_INDEX partIndex_;
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    public boolean hasPartIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
     *
     * <pre>
     *配件位置
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex() {
      return partIndex_;
    }

    private void initFields() {
      type_ = 0;
      tankId_ = 0;
      partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPartIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, partIndex_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, partIndex_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_UP_DOWN_MSG}
     *
     * <pre>
     *装和卸
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.partIndex_ = partIndex_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasPartIndex()) {
          setPartIndex(other.getPartIndex());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasPartIndex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_UP_DOWN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1装 2 卸
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1装 2 卸
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1装 2 卸
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *1装 2 卸
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        
        return this;
      }

      // required uint32 tankId = 2;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000002;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        
        return this;
      }

      // required .PROTO_TANK.PART_INDEX partIndex = 3;
      private com.ourpalm.tank.message.TANK_MSG.PART_INDEX partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public boolean hasPartIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.PART_INDEX getPartIndex() {
        return partIndex_;
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public Builder setPartIndex(com.ourpalm.tank.message.TANK_MSG.PART_INDEX value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        partIndex_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_TANK.PART_INDEX partIndex = 3;</code>
       *
       * <pre>
       *配件位置
       * </pre>
       */
      public Builder clearPartIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        partIndex_ = com.ourpalm.tank.message.TANK_MSG.PART_INDEX.HIT;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_UP_DOWN_MSG)
    }

    static {
      defaultInstance = new CTS_UP_DOWN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_UP_DOWN_MSG)
  }

  public interface STC_UP_DOWN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 result = 1;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    int getResult();

    // required string info = 2;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // optional uint32 tankId = 3;
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // optional .PROTO_TANK.PartNewInfo part = 4;
    /**
     * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
     *
     * <pre>
     *配件
     * </pre>
     */
    boolean hasPart();
    /**
     * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
     *
     * <pre>
     *配件
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.PartNewInfo getPart();

    // optional int32 grooveNum = 5;
    /**
     * <code>optional int32 grooveNum = 5;</code>
     *
     * <pre>
     *当前槽位数	
     * </pre>
     */
    boolean hasGrooveNum();
    /**
     * <code>optional int32 grooveNum = 5;</code>
     *
     * <pre>
     *当前槽位数	
     * </pre>
     */
    int getGrooveNum();

    // optional int32 partOnNum = 6;
    /**
     * <code>optional int32 partOnNum = 6;</code>
     *
     * <pre>
     *当前已装备的槽位	
     * </pre>
     */
    boolean hasPartOnNum();
    /**
     * <code>optional int32 partOnNum = 6;</code>
     *
     * <pre>
     *当前已装备的槽位	
     * </pre>
     */
    int getPartOnNum();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_UP_DOWN_MSG}
   *
   * <pre>
   *装和卸 返回
   * </pre>
   */
  public static final class STC_UP_DOWN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_UP_DOWN_MSGOrBuilder {
    // Use STC_UP_DOWN_MSG.newBuilder() to construct.
    private STC_UP_DOWN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_UP_DOWN_MSG(boolean noInit) {}

    private static final STC_UP_DOWN_MSG defaultInstance;
    public static STC_UP_DOWN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_UP_DOWN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_UP_DOWN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tankId_ = input.readUInt32();
              break;
            }
            case 34: {
              com.ourpalm.tank.message.TANK_MSG.PartNewInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = part_.toBuilder();
              }
              part_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.PartNewInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(part_);
                part_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              grooveNum_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              partOnNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_UP_DOWN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_UP_DOWN_MSG>() {
      public STC_UP_DOWN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_UP_DOWN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_UP_DOWN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // required string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 tankId = 3;
    public static final int TANKID_FIELD_NUMBER = 3;
    private int tankId_;
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 tankId = 3;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // optional .PROTO_TANK.PartNewInfo part = 4;
    public static final int PART_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.TANK_MSG.PartNewInfo part_;
    /**
     * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
     *
     * <pre>
     *配件
     * </pre>
     */
    public boolean hasPart() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
     *
     * <pre>
     *配件
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.PartNewInfo getPart() {
      return part_;
    }

    // optional int32 grooveNum = 5;
    public static final int GROOVENUM_FIELD_NUMBER = 5;
    private int grooveNum_;
    /**
     * <code>optional int32 grooveNum = 5;</code>
     *
     * <pre>
     *当前槽位数	
     * </pre>
     */
    public boolean hasGrooveNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 grooveNum = 5;</code>
     *
     * <pre>
     *当前槽位数	
     * </pre>
     */
    public int getGrooveNum() {
      return grooveNum_;
    }

    // optional int32 partOnNum = 6;
    public static final int PARTONNUM_FIELD_NUMBER = 6;
    private int partOnNum_;
    /**
     * <code>optional int32 partOnNum = 6;</code>
     *
     * <pre>
     *当前已装备的槽位	
     * </pre>
     */
    public boolean hasPartOnNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 partOnNum = 6;</code>
     *
     * <pre>
     *当前已装备的槽位	
     * </pre>
     */
    public int getPartOnNum() {
      return partOnNum_;
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
      tankId_ = 0;
      part_ = com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();
      grooveNum_ = 0;
      partOnNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, tankId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, part_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, grooveNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, partOnNum_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tankId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, part_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, grooveNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, partOnNum_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_UP_DOWN_MSG}
     *
     * <pre>
     *装和卸 返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        part_ = com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        grooveNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        partOnNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.part_ = part_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.grooveNum_ = grooveNum_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.partOnNum_ = partOnNum_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasPart()) {
          mergePart(other.getPart());
        }
        if (other.hasGrooveNum()) {
          setGrooveNum(other.getGrooveNum());
        }
        if (other.hasPartOnNum()) {
          setPartOnNum(other.getPartOnNum());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_UP_DOWN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 result = 1;
      private int result_ ;
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // required string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // optional uint32 tankId = 3;
      private int tankId_ ;
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000004;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 tankId = 3;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tankId_ = 0;
        
        return this;
      }

      // optional .PROTO_TANK.PartNewInfo part = 4;
      private com.ourpalm.tank.message.TANK_MSG.PartNewInfo part_ = com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public boolean hasPart() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.PartNewInfo getPart() {
        return part_;
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public Builder setPart(com.ourpalm.tank.message.TANK_MSG.PartNewInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        part_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public Builder setPart(
          com.ourpalm.tank.message.TANK_MSG.PartNewInfo.Builder builderForValue) {
        part_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public Builder mergePart(com.ourpalm.tank.message.TANK_MSG.PartNewInfo value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            part_ != com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance()) {
          part_ =
            com.ourpalm.tank.message.TANK_MSG.PartNewInfo.newBuilder(part_).mergeFrom(value).buildPartial();
        } else {
          part_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.PartNewInfo part = 4;</code>
       *
       * <pre>
       *配件
       * </pre>
       */
      public Builder clearPart() {
        part_ = com.ourpalm.tank.message.TANK_MSG.PartNewInfo.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // optional int32 grooveNum = 5;
      private int grooveNum_ ;
      /**
       * <code>optional int32 grooveNum = 5;</code>
       *
       * <pre>
       *当前槽位数	
       * </pre>
       */
      public boolean hasGrooveNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 grooveNum = 5;</code>
       *
       * <pre>
       *当前槽位数	
       * </pre>
       */
      public int getGrooveNum() {
        return grooveNum_;
      }
      /**
       * <code>optional int32 grooveNum = 5;</code>
       *
       * <pre>
       *当前槽位数	
       * </pre>
       */
      public Builder setGrooveNum(int value) {
        bitField0_ |= 0x00000010;
        grooveNum_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 grooveNum = 5;</code>
       *
       * <pre>
       *当前槽位数	
       * </pre>
       */
      public Builder clearGrooveNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        grooveNum_ = 0;
        
        return this;
      }

      // optional int32 partOnNum = 6;
      private int partOnNum_ ;
      /**
       * <code>optional int32 partOnNum = 6;</code>
       *
       * <pre>
       *当前已装备的槽位	
       * </pre>
       */
      public boolean hasPartOnNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 partOnNum = 6;</code>
       *
       * <pre>
       *当前已装备的槽位	
       * </pre>
       */
      public int getPartOnNum() {
        return partOnNum_;
      }
      /**
       * <code>optional int32 partOnNum = 6;</code>
       *
       * <pre>
       *当前已装备的槽位	
       * </pre>
       */
      public Builder setPartOnNum(int value) {
        bitField0_ |= 0x00000020;
        partOnNum_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 partOnNum = 6;</code>
       *
       * <pre>
       *当前已装备的槽位	
       * </pre>
       */
      public Builder clearPartOnNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        partOnNum_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_UP_DOWN_MSG)
    }

    static {
      defaultInstance = new STC_UP_DOWN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_UP_DOWN_MSG)
  }

  public interface TANK_DEVELOP_INFOOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int32 tankTemplateId = 1;
    /**
     * <code>optional int32 tankTemplateId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankTemplateId();
    /**
     * <code>optional int32 tankTemplateId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankTemplateId();

    // optional int32 state = 2;
    /**
     * <code>optional int32 state = 2;</code>
     *
     * <pre>
     *&#47;  2可购买 3已购买
     * </pre>
     */
    boolean hasState();
    /**
     * <code>optional int32 state = 2;</code>
     *
     * <pre>
     *&#47;  2可购买 3已购买
     * </pre>
     */
    int getState();
  }
  /**
   * Protobuf type {@code PROTO_TANK.TANK_DEVELOP_INFO}
   *
   * <pre>
   *坦克树体
   * </pre>
   */
  public static final class TANK_DEVELOP_INFO extends
      com.google.protobuf.GeneratedMessageLite
      implements TANK_DEVELOP_INFOOrBuilder {
    // Use TANK_DEVELOP_INFO.newBuilder() to construct.
    private TANK_DEVELOP_INFO(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TANK_DEVELOP_INFO(boolean noInit) {}

    private static final TANK_DEVELOP_INFO defaultInstance;
    public static TANK_DEVELOP_INFO getDefaultInstance() {
      return defaultInstance;
    }

    public TANK_DEVELOP_INFO getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TANK_DEVELOP_INFO(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankTemplateId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              state_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TANK_DEVELOP_INFO> PARSER =
        new com.google.protobuf.AbstractParser<TANK_DEVELOP_INFO>() {
      public TANK_DEVELOP_INFO parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TANK_DEVELOP_INFO(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TANK_DEVELOP_INFO> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 tankTemplateId = 1;
    public static final int TANKTEMPLATEID_FIELD_NUMBER = 1;
    private int tankTemplateId_;
    /**
     * <code>optional int32 tankTemplateId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankTemplateId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 tankTemplateId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankTemplateId() {
      return tankTemplateId_;
    }

    // optional int32 state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private int state_;
    /**
     * <code>optional int32 state = 2;</code>
     *
     * <pre>
     *&#47;  2可购买 3已购买
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 state = 2;</code>
     *
     * <pre>
     *&#47;  2可购买 3已购买
     * </pre>
     */
    public int getState() {
      return state_;
    }

    private void initFields() {
      tankTemplateId_ = 0;
      state_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, tankTemplateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, state_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tankTemplateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, state_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.TANK_DEVELOP_INFO}
     *
     * <pre>
     *坦克树体
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFOOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankTemplateId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO build() {
        com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO result = new com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankTemplateId_ = tankTemplateId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance()) return this;
        if (other.hasTankTemplateId()) {
          setTankTemplateId(other.getTankTemplateId());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 tankTemplateId = 1;
      private int tankTemplateId_ ;
      /**
       * <code>optional int32 tankTemplateId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankTemplateId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 tankTemplateId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankTemplateId() {
        return tankTemplateId_;
      }
      /**
       * <code>optional int32 tankTemplateId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankTemplateId(int value) {
        bitField0_ |= 0x00000001;
        tankTemplateId_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 tankTemplateId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankTemplateId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankTemplateId_ = 0;
        
        return this;
      }

      // optional int32 state = 2;
      private int state_ ;
      /**
       * <code>optional int32 state = 2;</code>
       *
       * <pre>
       *&#47;  2可购买 3已购买
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 state = 2;</code>
       *
       * <pre>
       *&#47;  2可购买 3已购买
       * </pre>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>optional int32 state = 2;</code>
       *
       * <pre>
       *&#47;  2可购买 3已购买
       * </pre>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000002;
        state_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 state = 2;</code>
       *
       * <pre>
       *&#47;  2可购买 3已购买
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.TANK_DEVELOP_INFO)
    }

    static {
      defaultInstance = new TANK_DEVELOP_INFO(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.TANK_DEVELOP_INFO)
  }

  public interface CTS_TANK_DEVELOP_LIST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_TANK_DEVELOP_LIST_MSG}
   *
   * <pre>
   *请求坦克树
   * </pre>
   */
  public static final class CTS_TANK_DEVELOP_LIST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TANK_DEVELOP_LIST_MSGOrBuilder {
    // Use CTS_TANK_DEVELOP_LIST_MSG.newBuilder() to construct.
    private CTS_TANK_DEVELOP_LIST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TANK_DEVELOP_LIST_MSG(boolean noInit) {}

    private static final CTS_TANK_DEVELOP_LIST_MSG defaultInstance;
    public static CTS_TANK_DEVELOP_LIST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TANK_DEVELOP_LIST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TANK_DEVELOP_LIST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TANK_DEVELOP_LIST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TANK_DEVELOP_LIST_MSG>() {
      public CTS_TANK_DEVELOP_LIST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TANK_DEVELOP_LIST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TANK_DEVELOP_LIST_MSG> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_TANK_DEVELOP_LIST_MSG}
     *
     * <pre>
     *请求坦克树
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG(this);
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG.getDefaultInstance()) return this;
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_LIST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_TANK_DEVELOP_LIST_MSG)
    }

    static {
      defaultInstance = new CTS_TANK_DEVELOP_LIST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_TANK_DEVELOP_LIST_MSG)
  }

  public interface STC_TANK_DEVELOP_LIST_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;
    /**
     * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
     */
    java.util.List<com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO> 
        getInfosList();
    /**
     * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
     */
    com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getInfos(int index);
    /**
     * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
     */
    int getInfosCount();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_TANK_DEVELOP_LIST_MSG}
   *
   * <pre>
   *请求坦克树返回
   * </pre>
   */
  public static final class STC_TANK_DEVELOP_LIST_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TANK_DEVELOP_LIST_MSGOrBuilder {
    // Use STC_TANK_DEVELOP_LIST_MSG.newBuilder() to construct.
    private STC_TANK_DEVELOP_LIST_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TANK_DEVELOP_LIST_MSG(boolean noInit) {}

    private static final STC_TANK_DEVELOP_LIST_MSG defaultInstance;
    public static STC_TANK_DEVELOP_LIST_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TANK_DEVELOP_LIST_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TANK_DEVELOP_LIST_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                infos_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO>();
                mutable_bitField0_ |= 0x00000001;
              }
              infos_.add(input.readMessage(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = java.util.Collections.unmodifiableList(infos_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TANK_DEVELOP_LIST_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TANK_DEVELOP_LIST_MSG>() {
      public STC_TANK_DEVELOP_LIST_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TANK_DEVELOP_LIST_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TANK_DEVELOP_LIST_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;
    public static final int INFOS_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO> infos_;
    /**
     * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
     */
    public java.util.List<com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO> getInfosList() {
      return infos_;
    }
    /**
     * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
     */
    public java.util.List<? extends com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFOOrBuilder> 
        getInfosOrBuilderList() {
      return infos_;
    }
    /**
     * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
     */
    public int getInfosCount() {
      return infos_.size();
    }
    /**
     * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
     */
    public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getInfos(int index) {
      return infos_.get(index);
    }
    /**
     * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
     */
    public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFOOrBuilder getInfosOrBuilder(
        int index) {
      return infos_.get(index);
    }

    private void initFields() {
      infos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < infos_.size(); i++) {
        output.writeMessage(1, infos_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < infos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, infos_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_TANK_DEVELOP_LIST_MSG}
     *
     * <pre>
     *请求坦克树返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        infos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = java.util.Collections.unmodifiableList(infos_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.infos_ = infos_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG.getDefaultInstance()) return this;
        if (!other.infos_.isEmpty()) {
          if (infos_.isEmpty()) {
            infos_ = other.infos_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInfosIsMutable();
            infos_.addAll(other.infos_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_LIST_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;
      private java.util.List<com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO> infos_ =
        java.util.Collections.emptyList();
      private void ensureInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = new java.util.ArrayList<com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO>(infos_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public java.util.List<com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO> getInfosList() {
        return java.util.Collections.unmodifiableList(infos_);
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public int getInfosCount() {
        return infos_.size();
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getInfos(int index) {
        return infos_.get(index);
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder setInfos(
          int index, com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder setInfos(
          int index, com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder addInfos(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder addInfos(
          int index, com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder addInfos(
          com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder addInfos(
          int index, com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder addAllInfos(
          java.lang.Iterable<? extends com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO> values) {
        ensureInfosIsMutable();
        super.addAll(values, infos_);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder clearInfos() {
        infos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_TANK.TANK_DEVELOP_INFO infos = 1;</code>
       */
      public Builder removeInfos(int index) {
        ensureInfosIsMutable();
        infos_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_TANK_DEVELOP_LIST_MSG)
    }

    static {
      defaultInstance = new STC_TANK_DEVELOP_LIST_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_TANK_DEVELOP_LIST_MSG)
  }

  public interface CTS_TANK_DEVELOP_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 tankTemplateId = 1;
    /**
     * <code>required int32 tankTemplateId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankTemplateId();
    /**
     * <code>required int32 tankTemplateId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankTemplateId();
  }
  /**
   * Protobuf type {@code PROTO_TANK.CTS_TANK_DEVELOP_MSG}
   *
   * <pre>
   *研发
   * </pre>
   */
  public static final class CTS_TANK_DEVELOP_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TANK_DEVELOP_MSGOrBuilder {
    // Use CTS_TANK_DEVELOP_MSG.newBuilder() to construct.
    private CTS_TANK_DEVELOP_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TANK_DEVELOP_MSG(boolean noInit) {}

    private static final CTS_TANK_DEVELOP_MSG defaultInstance;
    public static CTS_TANK_DEVELOP_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TANK_DEVELOP_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TANK_DEVELOP_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankTemplateId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TANK_DEVELOP_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TANK_DEVELOP_MSG>() {
      public CTS_TANK_DEVELOP_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TANK_DEVELOP_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TANK_DEVELOP_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 tankTemplateId = 1;
    public static final int TANKTEMPLATEID_FIELD_NUMBER = 1;
    private int tankTemplateId_;
    /**
     * <code>required int32 tankTemplateId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankTemplateId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 tankTemplateId = 1;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankTemplateId() {
      return tankTemplateId_;
    }

    private void initFields() {
      tankTemplateId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankTemplateId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, tankTemplateId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tankTemplateId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.CTS_TANK_DEVELOP_MSG}
     *
     * <pre>
     *研发
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankTemplateId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG result = new com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankTemplateId_ = tankTemplateId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG.getDefaultInstance()) return this;
        if (other.hasTankTemplateId()) {
          setTankTemplateId(other.getTankTemplateId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankTemplateId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.CTS_TANK_DEVELOP_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 tankTemplateId = 1;
      private int tankTemplateId_ ;
      /**
       * <code>required int32 tankTemplateId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankTemplateId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 tankTemplateId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankTemplateId() {
        return tankTemplateId_;
      }
      /**
       * <code>required int32 tankTemplateId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankTemplateId(int value) {
        bitField0_ |= 0x00000001;
        tankTemplateId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 tankTemplateId = 1;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankTemplateId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankTemplateId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.CTS_TANK_DEVELOP_MSG)
    }

    static {
      defaultInstance = new CTS_TANK_DEVELOP_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.CTS_TANK_DEVELOP_MSG)
  }

  public interface STC_TANK_DEVELOP_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int32 result = 1;
    /**
     * <code>optional int32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>optional int32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    int getResult();

    // optional string desc = 2;
    /**
     * <code>optional string desc = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>optional string desc = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getDesc();
    /**
     * <code>optional string desc = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    // optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;
    /**
     * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
     *
     * <pre>
     *	坦克状态
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
     *
     * <pre>
     *	坦克状态
     * </pre>
     */
    com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getInfo();
  }
  /**
   * Protobuf type {@code PROTO_TANK.STC_TANK_DEVELOP_MSG}
   *
   * <pre>
   *研发返回
   * </pre>
   */
  public static final class STC_TANK_DEVELOP_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TANK_DEVELOP_MSGOrBuilder {
    // Use STC_TANK_DEVELOP_MSG.newBuilder() to construct.
    private STC_TANK_DEVELOP_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TANK_DEVELOP_MSG(boolean noInit) {}

    private static final STC_TANK_DEVELOP_MSG defaultInstance;
    public static STC_TANK_DEVELOP_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TANK_DEVELOP_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TANK_DEVELOP_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              desc_ = input.readBytes();
              break;
            }
            case 26: {
              com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TANK_DEVELOP_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TANK_DEVELOP_MSG>() {
      public STC_TANK_DEVELOP_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TANK_DEVELOP_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TANK_DEVELOP_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional int32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 result = 1;</code>
     *
     * <pre>
     * 1：成功 0：失败
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // optional string desc = 2;
    public static final int DESC_FIELD_NUMBER = 2;
    private java.lang.Object desc_;
    /**
     * <code>optional string desc = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string desc = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string desc = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;
    public static final int INFO_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO info_;
    /**
     * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
     *
     * <pre>
     *	坦克状态
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
     *
     * <pre>
     *	坦克状态
     * </pre>
     */
    public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getInfo() {
      return info_;
    }

    private void initFields() {
      result_ = 0;
      desc_ = "";
      info_ = com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDescBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, info_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDescBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, info_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_TANK.STC_TANK_DEVELOP_MSG}
     *
     * <pre>
     *研发返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG, Builder>
        implements com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG build() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG buildPartial() {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG result = new com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG other) {
        if (other == com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000002;
          desc_ = other.desc_;
          
        }
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.TANK_MSG.STC_TANK_DEVELOP_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 result = 1;
      private int result_ ;
      /**
       * <code>optional int32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional int32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 result = 1;</code>
       *
       * <pre>
       * 1：成功 0：失败
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // optional string desc = 2;
      private java.lang.Object desc_ = "";
      /**
       * <code>optional string desc = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string desc = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string desc = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string desc = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        desc_ = value;
        
        return this;
      }
      /**
       * <code>optional string desc = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = getDefaultInstance().getDesc();
        
        return this;
      }
      /**
       * <code>optional string desc = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        desc_ = value;
        
        return this;
      }

      // optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;
      private com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO info_ = com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
       *
       * <pre>
       *	坦克状态
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
       *
       * <pre>
       *	坦克状态
       * </pre>
       */
      public com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO getInfo() {
        return info_;
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
       *
       * <pre>
       *	坦克状态
       * </pre>
       */
      public Builder setInfo(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO value) {
        if (value == null) {
          throw new NullPointerException();
        }
        info_ = value;

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
       *
       * <pre>
       *	坦克状态
       * </pre>
       */
      public Builder setInfo(
          com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.Builder builderForValue) {
        info_ = builderForValue.build();

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
       *
       * <pre>
       *	坦克状态
       * </pre>
       */
      public Builder mergeInfo(com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            info_ != com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance()) {
          info_ =
            com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.newBuilder(info_).mergeFrom(value).buildPartial();
        } else {
          info_ = value;
        }

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_TANK.TANK_DEVELOP_INFO info = 3;</code>
       *
       * <pre>
       *	坦克状态
       * </pre>
       */
      public Builder clearInfo() {
        info_ = com.ourpalm.tank.message.TANK_MSG.TANK_DEVELOP_INFO.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_TANK.STC_TANK_DEVELOP_MSG)
    }

    static {
      defaultInstance = new STC_TANK_DEVELOP_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_TANK.STC_TANK_DEVELOP_MSG)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
