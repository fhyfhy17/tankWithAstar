// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_3_match.proto

package com.ourpalm.tank.message;

public final class MATCH_MSG {
  private MATCH_MSG() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code PROTO_MATCH.CMD_TYPE}
   */
  public enum CMD_TYPE
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CMD_TYPE_MATCH = 3;</code>
     */
    CMD_TYPE_MATCH(0, 3),
    ;

    /**
     * <code>CMD_TYPE_MATCH = 3;</code>
     */
    public static final int CMD_TYPE_MATCH_VALUE = 3;


    public final int getNumber() { return value; }

    public static CMD_TYPE valueOf(int value) {
      switch (value) {
        case 3: return CMD_TYPE_MATCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CMD_TYPE>() {
            public CMD_TYPE findValueByNumber(int number) {
              return CMD_TYPE.valueOf(number);
            }
          };

    private final int value;

    private CMD_TYPE(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_MATCH.CMD_TYPE)
  }

  /**
   * Protobuf enum {@code PROTO_MATCH.CMD_ID}
   */
  public enum CMD_ID
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CTS_MATCH = 1;</code>
     *
     * <pre>
     *请求战斗匹配
     * </pre>
     */
    CTS_MATCH(0, 1),
    /**
     * <code>CTS_ENTER = 2;</code>
     *
     * <pre>
     *请求进入战场(无结构体)
     * </pre>
     */
    CTS_ENTER(1, 2),
    /**
     * <code>CTS_READY = 3;</code>
     *
     * <pre>
     *准备完毕(无结构体)
     * </pre>
     */
    CTS_READY(2, 3),
    /**
     * <code>STC_MATCH = 4;</code>
     *
     * <pre>
     *返回战斗匹配(STC_MATCH_MSG)
     * </pre>
     */
    STC_MATCH(3, 4),
    /**
     * <code>STC_NOTIFY_ENTER = 5;</code>
     *
     * <pre>
     *通知进入战场(STC_NOTIFY_ENTER_MSG)
     * </pre>
     */
    STC_NOTIFY_ENTER(4, 5),
    /**
     * <code>STC_ENTER = 6;</code>
     *
     * <pre>
     *进入战场返回(STC_ENTER_MSG)
     * </pre>
     */
    STC_ENTER(5, 6),
    /**
     * <code>STC_READY = 7;</code>
     *
     * <pre>
     *准备返回(无结构体)
     * </pre>
     */
    STC_READY(6, 7),
    /**
     * <code>STC_BEGIN = 8;</code>
     *
     * <pre>
     *比赛开始(STC_BEGIN_MSG)
     * </pre>
     */
    STC_BEGIN(7, 8),
    /**
     * <code>CTS_ENTER_CAMPAIGN = 9;</code>
     *
     * <pre>
     *请求进入战役
     * </pre>
     */
    CTS_ENTER_CAMPAIGN(8, 9),
    /**
     * <code>STC_ENTER_CAMPAIGN = 10;</code>
     *
     * <pre>
     *进入战役返回
     * </pre>
     */
    STC_ENTER_CAMPAIGN(9, 10),
    /**
     * <code>STC_TANK_BIRTH = 11;</code>
     *
     * <pre>
     *坦克出生
     * </pre>
     */
    STC_TANK_BIRTH(10, 11),
    /**
     * <code>CTS_ENTER_TEACH = 12;</code>
     *
     * <pre>
     *请求进入教学战场(无结构体)
     * </pre>
     */
    CTS_ENTER_TEACH(11, 12),
    /**
     * <code>STC_ENTER_TEACH = 13;</code>
     *
     * <pre>
     *返回进入教学战场
     * </pre>
     */
    STC_ENTER_TEACH(12, 13),
    /**
     * <code>CTS_MATCH_CANCEL = 14;</code>
     *
     * <pre>
     *请求取消匹配（无结构体）
     * </pre>
     */
    CTS_MATCH_CANCEL(13, 14),
    /**
     * <code>STC_MATCH_CANCEL = 15;</code>
     *
     * <pre>
     *返回取消（无结构体）
     * </pre>
     */
    STC_MATCH_CANCEL(14, 15),
    /**
     * <code>CTS_BACK_WAR = 16;</code>
     *
     * <pre>
     *请求回到战场(空命令)(可以进入返回STC_MATCH, 不可则无返回)
     * </pre>
     */
    CTS_BACK_WAR(15, 16),
    /**
     * <code>STC_BACK_WAR = 17;</code>
     *
     * <pre>
     *收到此命令客户端返回大厅(空命令)
     * </pre>
     */
    STC_BACK_WAR(16, 17),
    /**
     * <code>STC_PLAYER_READY = 18;</code>
     *
     * <pre>
     *主推已做好准备的玩家
     * </pre>
     */
    STC_PLAYER_READY(17, 18),
    /**
     * <code>CTS_TEAM_CREATE = 19;</code>
     *
     * <pre>
     *创建队伍
     * </pre>
     */
    CTS_TEAM_CREATE(18, 19),
    /**
     * <code>STC_TEAM_INFO = 20;</code>
     *
     * <pre>
     *主推队伍信息
     * </pre>
     */
    STC_TEAM_INFO(19, 20),
    /**
     * <code>CTS_TEAM_REQ = 21;</code>
     *
     * <pre>
     *组队邀请
     * </pre>
     */
    CTS_TEAM_REQ(20, 21),
    /**
     * <code>STC_TEAM_REQ = 22;</code>
     *
     * <pre>
     *主推给被邀请者
     * </pre>
     */
    STC_TEAM_REQ(21, 22),
    /**
     * <code>CTS_TEAM_AGREE = 23;</code>
     *
     * <pre>
     *同意邀请组队(给双方返回队伍信息 STC_TEAM_INFO_MSG)
     * </pre>
     */
    CTS_TEAM_AGREE(22, 23),
    /**
     * <code>CTS_TEAM_REFUSE = 24;</code>
     *
     * <pre>
     *拒绝邀请组队
     * </pre>
     */
    CTS_TEAM_REFUSE(23, 24),
    /**
     * <code>STC_TEAM_REFUSE = 25;</code>
     *
     * <pre>
     *拒绝邀请组队主推给邀请者
     * </pre>
     */
    STC_TEAM_REFUSE(24, 25),
    /**
     * <code>CTS_TEAM_CHANGE_TANK = 26;</code>
     *
     * <pre>
     *组队更换所使用的坦克
     * </pre>
     */
    CTS_TEAM_CHANGE_TANK(25, 26),
    /**
     * <code>STC_TEAM_CHANGE_TANK = 27;</code>
     *
     * <pre>
     *返回队员所使用的坦克
     * </pre>
     */
    STC_TEAM_CHANGE_TANK(26, 27),
    /**
     * <code>CTS_TEAM_READY = 28;</code>
     *
     * <pre>
     *组队完成准备(返回:STC_TEAM_CHANGE_TANK)
     * </pre>
     */
    CTS_TEAM_READY(27, 28),
    /**
     * <code>CTS_TEAM_MATCH = 29;</code>
     *
     * <pre>
     *组队匹配申请
     * </pre>
     */
    CTS_TEAM_MATCH(28, 29),
    /**
     * <code>STC_TEAM_MATCH = 30;</code>
     *
     * <pre>
     *返回组队匹配结果(主推所有队员)
     * </pre>
     */
    STC_TEAM_MATCH(29, 30),
    /**
     * <code>CTS_TEAM_QUIT = 31;</code>
     *
     * <pre>
     *退出组队(给其他人推送 STC_TEAM_INFO)
     * </pre>
     */
    CTS_TEAM_QUIT(30, 31),
    /**
     * <code>CTS_TEAM_GOAWAY = 32;</code>
     *
     * <pre>
     *踢人(给其他人推送 STC_TEAM_INFO)
     * </pre>
     */
    CTS_TEAM_GOAWAY(31, 32),
    /**
     * <code>STC_TEAM_GOAWAY = 33;</code>
     *
     * <pre>
     *给被踢者主推(空命令)
     * </pre>
     */
    STC_TEAM_GOAWAY(32, 33),
    /**
     * <code>CTS_TEAM_INFO = 34;</code>
     *
     * <pre>
     *请求队伍信息
     * </pre>
     */
    CTS_TEAM_INFO(33, 34),
    /**
     * <code>CTS_TEAM_CANCEL = 35;</code>
     *
     * <pre>
     *取消匹配
     * </pre>
     */
    CTS_TEAM_CANCEL(34, 35),
    /**
     * <code>STC_TEAM_CANCEL = 36;</code>
     *
     * <pre>
     *返回取消匹配(取消匹配)
     * </pre>
     */
    STC_TEAM_CANCEL(35, 36),
    /**
     * <code>CTS_MATCH_FRI = 37;</code>
     *
     * <pre>
     *请求匹配下的好友列表状态(空命令)
     * </pre>
     */
    CTS_MATCH_FRI(36, 37),
    /**
     * <code>STC_MATCH_FRI = 38;</code>
     *
     * <pre>
     *返回匹配下的好友列表状态
     * </pre>
     */
    STC_MATCH_FRI(37, 38),
    /**
     * <code>CTS_MATCH_COUNT = 39;</code>
     *
     * <pre>
     *请求当前匹配人数
     * </pre>
     */
    CTS_MATCH_COUNT(38, 39),
    /**
     * <code>STC_MATCH_COUNT = 40;</code>
     *
     * <pre>
     *返回当前匹配人数
     * </pre>
     */
    STC_MATCH_COUNT(39, 40),
    /**
     * <code>CTS_MATCH_CORPS_FRI = 41;</code>
     *
     * <pre>
     *匹配队伍下的军团成员列表(空命令)
     * </pre>
     */
    CTS_MATCH_CORPS_FRI(40, 41),
    /**
     * <code>STC_MATCH_CORPS_FRI = 42;</code>
     *
     * <pre>
     *返回匹配队伍下的军团成员列表
     * </pre>
     */
    STC_MATCH_CORPS_FRI(41, 42),
    /**
     * <code>STC_TEAM_INCOME_ADD_NUM = 43;</code>
     *
     * <pre>
     *组队、军团收益加成的百分比
     * </pre>
     */
    STC_TEAM_INCOME_ADD_NUM(42, 43),
    /**
     * <code>CTS_MATCH_SCHEDULE = 44;</code>
     *
     * <pre>
     *准备进度
     * </pre>
     */
    CTS_MATCH_SCHEDULE(43, 44),
    /**
     * <code>STC_MATCH_SCHEDULE = 45;</code>
     *
     * <pre>
     *准备进度返回
     * </pre>
     */
    STC_MATCH_SCHEDULE(44, 45),
    /**
     * <code>STC_ONLY_QUIT_TEAM = 46;</code>
     *
     * <pre>
     *只是退出 ，为了清除客户端队伍信息，临时方案
     * </pre>
     */
    STC_ONLY_QUIT_TEAM(45, 46),
    ;

    /**
     * <code>CTS_MATCH = 1;</code>
     *
     * <pre>
     *请求战斗匹配
     * </pre>
     */
    public static final int CTS_MATCH_VALUE = 1;
    /**
     * <code>CTS_ENTER = 2;</code>
     *
     * <pre>
     *请求进入战场(无结构体)
     * </pre>
     */
    public static final int CTS_ENTER_VALUE = 2;
    /**
     * <code>CTS_READY = 3;</code>
     *
     * <pre>
     *准备完毕(无结构体)
     * </pre>
     */
    public static final int CTS_READY_VALUE = 3;
    /**
     * <code>STC_MATCH = 4;</code>
     *
     * <pre>
     *返回战斗匹配(STC_MATCH_MSG)
     * </pre>
     */
    public static final int STC_MATCH_VALUE = 4;
    /**
     * <code>STC_NOTIFY_ENTER = 5;</code>
     *
     * <pre>
     *通知进入战场(STC_NOTIFY_ENTER_MSG)
     * </pre>
     */
    public static final int STC_NOTIFY_ENTER_VALUE = 5;
    /**
     * <code>STC_ENTER = 6;</code>
     *
     * <pre>
     *进入战场返回(STC_ENTER_MSG)
     * </pre>
     */
    public static final int STC_ENTER_VALUE = 6;
    /**
     * <code>STC_READY = 7;</code>
     *
     * <pre>
     *准备返回(无结构体)
     * </pre>
     */
    public static final int STC_READY_VALUE = 7;
    /**
     * <code>STC_BEGIN = 8;</code>
     *
     * <pre>
     *比赛开始(STC_BEGIN_MSG)
     * </pre>
     */
    public static final int STC_BEGIN_VALUE = 8;
    /**
     * <code>CTS_ENTER_CAMPAIGN = 9;</code>
     *
     * <pre>
     *请求进入战役
     * </pre>
     */
    public static final int CTS_ENTER_CAMPAIGN_VALUE = 9;
    /**
     * <code>STC_ENTER_CAMPAIGN = 10;</code>
     *
     * <pre>
     *进入战役返回
     * </pre>
     */
    public static final int STC_ENTER_CAMPAIGN_VALUE = 10;
    /**
     * <code>STC_TANK_BIRTH = 11;</code>
     *
     * <pre>
     *坦克出生
     * </pre>
     */
    public static final int STC_TANK_BIRTH_VALUE = 11;
    /**
     * <code>CTS_ENTER_TEACH = 12;</code>
     *
     * <pre>
     *请求进入教学战场(无结构体)
     * </pre>
     */
    public static final int CTS_ENTER_TEACH_VALUE = 12;
    /**
     * <code>STC_ENTER_TEACH = 13;</code>
     *
     * <pre>
     *返回进入教学战场
     * </pre>
     */
    public static final int STC_ENTER_TEACH_VALUE = 13;
    /**
     * <code>CTS_MATCH_CANCEL = 14;</code>
     *
     * <pre>
     *请求取消匹配（无结构体）
     * </pre>
     */
    public static final int CTS_MATCH_CANCEL_VALUE = 14;
    /**
     * <code>STC_MATCH_CANCEL = 15;</code>
     *
     * <pre>
     *返回取消（无结构体）
     * </pre>
     */
    public static final int STC_MATCH_CANCEL_VALUE = 15;
    /**
     * <code>CTS_BACK_WAR = 16;</code>
     *
     * <pre>
     *请求回到战场(空命令)(可以进入返回STC_MATCH, 不可则无返回)
     * </pre>
     */
    public static final int CTS_BACK_WAR_VALUE = 16;
    /**
     * <code>STC_BACK_WAR = 17;</code>
     *
     * <pre>
     *收到此命令客户端返回大厅(空命令)
     * </pre>
     */
    public static final int STC_BACK_WAR_VALUE = 17;
    /**
     * <code>STC_PLAYER_READY = 18;</code>
     *
     * <pre>
     *主推已做好准备的玩家
     * </pre>
     */
    public static final int STC_PLAYER_READY_VALUE = 18;
    /**
     * <code>CTS_TEAM_CREATE = 19;</code>
     *
     * <pre>
     *创建队伍
     * </pre>
     */
    public static final int CTS_TEAM_CREATE_VALUE = 19;
    /**
     * <code>STC_TEAM_INFO = 20;</code>
     *
     * <pre>
     *主推队伍信息
     * </pre>
     */
    public static final int STC_TEAM_INFO_VALUE = 20;
    /**
     * <code>CTS_TEAM_REQ = 21;</code>
     *
     * <pre>
     *组队邀请
     * </pre>
     */
    public static final int CTS_TEAM_REQ_VALUE = 21;
    /**
     * <code>STC_TEAM_REQ = 22;</code>
     *
     * <pre>
     *主推给被邀请者
     * </pre>
     */
    public static final int STC_TEAM_REQ_VALUE = 22;
    /**
     * <code>CTS_TEAM_AGREE = 23;</code>
     *
     * <pre>
     *同意邀请组队(给双方返回队伍信息 STC_TEAM_INFO_MSG)
     * </pre>
     */
    public static final int CTS_TEAM_AGREE_VALUE = 23;
    /**
     * <code>CTS_TEAM_REFUSE = 24;</code>
     *
     * <pre>
     *拒绝邀请组队
     * </pre>
     */
    public static final int CTS_TEAM_REFUSE_VALUE = 24;
    /**
     * <code>STC_TEAM_REFUSE = 25;</code>
     *
     * <pre>
     *拒绝邀请组队主推给邀请者
     * </pre>
     */
    public static final int STC_TEAM_REFUSE_VALUE = 25;
    /**
     * <code>CTS_TEAM_CHANGE_TANK = 26;</code>
     *
     * <pre>
     *组队更换所使用的坦克
     * </pre>
     */
    public static final int CTS_TEAM_CHANGE_TANK_VALUE = 26;
    /**
     * <code>STC_TEAM_CHANGE_TANK = 27;</code>
     *
     * <pre>
     *返回队员所使用的坦克
     * </pre>
     */
    public static final int STC_TEAM_CHANGE_TANK_VALUE = 27;
    /**
     * <code>CTS_TEAM_READY = 28;</code>
     *
     * <pre>
     *组队完成准备(返回:STC_TEAM_CHANGE_TANK)
     * </pre>
     */
    public static final int CTS_TEAM_READY_VALUE = 28;
    /**
     * <code>CTS_TEAM_MATCH = 29;</code>
     *
     * <pre>
     *组队匹配申请
     * </pre>
     */
    public static final int CTS_TEAM_MATCH_VALUE = 29;
    /**
     * <code>STC_TEAM_MATCH = 30;</code>
     *
     * <pre>
     *返回组队匹配结果(主推所有队员)
     * </pre>
     */
    public static final int STC_TEAM_MATCH_VALUE = 30;
    /**
     * <code>CTS_TEAM_QUIT = 31;</code>
     *
     * <pre>
     *退出组队(给其他人推送 STC_TEAM_INFO)
     * </pre>
     */
    public static final int CTS_TEAM_QUIT_VALUE = 31;
    /**
     * <code>CTS_TEAM_GOAWAY = 32;</code>
     *
     * <pre>
     *踢人(给其他人推送 STC_TEAM_INFO)
     * </pre>
     */
    public static final int CTS_TEAM_GOAWAY_VALUE = 32;
    /**
     * <code>STC_TEAM_GOAWAY = 33;</code>
     *
     * <pre>
     *给被踢者主推(空命令)
     * </pre>
     */
    public static final int STC_TEAM_GOAWAY_VALUE = 33;
    /**
     * <code>CTS_TEAM_INFO = 34;</code>
     *
     * <pre>
     *请求队伍信息
     * </pre>
     */
    public static final int CTS_TEAM_INFO_VALUE = 34;
    /**
     * <code>CTS_TEAM_CANCEL = 35;</code>
     *
     * <pre>
     *取消匹配
     * </pre>
     */
    public static final int CTS_TEAM_CANCEL_VALUE = 35;
    /**
     * <code>STC_TEAM_CANCEL = 36;</code>
     *
     * <pre>
     *返回取消匹配(取消匹配)
     * </pre>
     */
    public static final int STC_TEAM_CANCEL_VALUE = 36;
    /**
     * <code>CTS_MATCH_FRI = 37;</code>
     *
     * <pre>
     *请求匹配下的好友列表状态(空命令)
     * </pre>
     */
    public static final int CTS_MATCH_FRI_VALUE = 37;
    /**
     * <code>STC_MATCH_FRI = 38;</code>
     *
     * <pre>
     *返回匹配下的好友列表状态
     * </pre>
     */
    public static final int STC_MATCH_FRI_VALUE = 38;
    /**
     * <code>CTS_MATCH_COUNT = 39;</code>
     *
     * <pre>
     *请求当前匹配人数
     * </pre>
     */
    public static final int CTS_MATCH_COUNT_VALUE = 39;
    /**
     * <code>STC_MATCH_COUNT = 40;</code>
     *
     * <pre>
     *返回当前匹配人数
     * </pre>
     */
    public static final int STC_MATCH_COUNT_VALUE = 40;
    /**
     * <code>CTS_MATCH_CORPS_FRI = 41;</code>
     *
     * <pre>
     *匹配队伍下的军团成员列表(空命令)
     * </pre>
     */
    public static final int CTS_MATCH_CORPS_FRI_VALUE = 41;
    /**
     * <code>STC_MATCH_CORPS_FRI = 42;</code>
     *
     * <pre>
     *返回匹配队伍下的军团成员列表
     * </pre>
     */
    public static final int STC_MATCH_CORPS_FRI_VALUE = 42;
    /**
     * <code>STC_TEAM_INCOME_ADD_NUM = 43;</code>
     *
     * <pre>
     *组队、军团收益加成的百分比
     * </pre>
     */
    public static final int STC_TEAM_INCOME_ADD_NUM_VALUE = 43;
    /**
     * <code>CTS_MATCH_SCHEDULE = 44;</code>
     *
     * <pre>
     *准备进度
     * </pre>
     */
    public static final int CTS_MATCH_SCHEDULE_VALUE = 44;
    /**
     * <code>STC_MATCH_SCHEDULE = 45;</code>
     *
     * <pre>
     *准备进度返回
     * </pre>
     */
    public static final int STC_MATCH_SCHEDULE_VALUE = 45;
    /**
     * <code>STC_ONLY_QUIT_TEAM = 46;</code>
     *
     * <pre>
     *只是退出 ，为了清除客户端队伍信息，临时方案
     * </pre>
     */
    public static final int STC_ONLY_QUIT_TEAM_VALUE = 46;


    public final int getNumber() { return value; }

    public static CMD_ID valueOf(int value) {
      switch (value) {
        case 1: return CTS_MATCH;
        case 2: return CTS_ENTER;
        case 3: return CTS_READY;
        case 4: return STC_MATCH;
        case 5: return STC_NOTIFY_ENTER;
        case 6: return STC_ENTER;
        case 7: return STC_READY;
        case 8: return STC_BEGIN;
        case 9: return CTS_ENTER_CAMPAIGN;
        case 10: return STC_ENTER_CAMPAIGN;
        case 11: return STC_TANK_BIRTH;
        case 12: return CTS_ENTER_TEACH;
        case 13: return STC_ENTER_TEACH;
        case 14: return CTS_MATCH_CANCEL;
        case 15: return STC_MATCH_CANCEL;
        case 16: return CTS_BACK_WAR;
        case 17: return STC_BACK_WAR;
        case 18: return STC_PLAYER_READY;
        case 19: return CTS_TEAM_CREATE;
        case 20: return STC_TEAM_INFO;
        case 21: return CTS_TEAM_REQ;
        case 22: return STC_TEAM_REQ;
        case 23: return CTS_TEAM_AGREE;
        case 24: return CTS_TEAM_REFUSE;
        case 25: return STC_TEAM_REFUSE;
        case 26: return CTS_TEAM_CHANGE_TANK;
        case 27: return STC_TEAM_CHANGE_TANK;
        case 28: return CTS_TEAM_READY;
        case 29: return CTS_TEAM_MATCH;
        case 30: return STC_TEAM_MATCH;
        case 31: return CTS_TEAM_QUIT;
        case 32: return CTS_TEAM_GOAWAY;
        case 33: return STC_TEAM_GOAWAY;
        case 34: return CTS_TEAM_INFO;
        case 35: return CTS_TEAM_CANCEL;
        case 36: return STC_TEAM_CANCEL;
        case 37: return CTS_MATCH_FRI;
        case 38: return STC_MATCH_FRI;
        case 39: return CTS_MATCH_COUNT;
        case 40: return STC_MATCH_COUNT;
        case 41: return CTS_MATCH_CORPS_FRI;
        case 42: return STC_MATCH_CORPS_FRI;
        case 43: return STC_TEAM_INCOME_ADD_NUM;
        case 44: return CTS_MATCH_SCHEDULE;
        case 45: return STC_MATCH_SCHEDULE;
        case 46: return STC_ONLY_QUIT_TEAM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CMD_ID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CMD_ID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CMD_ID>() {
            public CMD_ID findValueByNumber(int number) {
              return CMD_ID.valueOf(number);
            }
          };

    private final int value;

    private CMD_ID(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_MATCH.CMD_ID)
  }

  /**
   * Protobuf enum {@code PROTO_MATCH.WAR_TYPE}
   *
   * <pre>
   *战场类型
   * </pre>
   */
  public enum WAR_TYPE
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>RANK = 1;</code>
     *
     * <pre>
     *排行赛
     * </pre>
     */
    RANK(0, 1),
    /**
     * <code>BATTLE = 2;</code>
     *
     * <pre>
     *对战赛
     * </pre>
     */
    BATTLE(1, 2),
    /**
     * <code>PERISH = 3;</code>
     *
     * <pre>
     *歼灭赛
     * </pre>
     */
    PERISH(2, 3),
    ;

    /**
     * <code>RANK = 1;</code>
     *
     * <pre>
     *排行赛
     * </pre>
     */
    public static final int RANK_VALUE = 1;
    /**
     * <code>BATTLE = 2;</code>
     *
     * <pre>
     *对战赛
     * </pre>
     */
    public static final int BATTLE_VALUE = 2;
    /**
     * <code>PERISH = 3;</code>
     *
     * <pre>
     *歼灭赛
     * </pre>
     */
    public static final int PERISH_VALUE = 3;


    public final int getNumber() { return value; }

    public static WAR_TYPE valueOf(int value) {
      switch (value) {
        case 1: return RANK;
        case 2: return BATTLE;
        case 3: return PERISH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WAR_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WAR_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WAR_TYPE>() {
            public WAR_TYPE findValueByNumber(int number) {
              return WAR_TYPE.valueOf(number);
            }
          };

    private final int value;

    private WAR_TYPE(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_MATCH.WAR_TYPE)
  }

  /**
   * Protobuf enum {@code PROTO_MATCH.TEAM}
   */
  public enum TEAM
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>RED = 1;</code>
     *
     * <pre>
     *红方
     * </pre>
     */
    RED(0, 1),
    /**
     * <code>BLUE = 2;</code>
     *
     * <pre>
     *蓝方
     * </pre>
     */
    BLUE(1, 2),
    ;

    /**
     * <code>RED = 1;</code>
     *
     * <pre>
     *红方
     * </pre>
     */
    public static final int RED_VALUE = 1;
    /**
     * <code>BLUE = 2;</code>
     *
     * <pre>
     *蓝方
     * </pre>
     */
    public static final int BLUE_VALUE = 2;


    public final int getNumber() { return value; }

    public static TEAM valueOf(int value) {
      switch (value) {
        case 1: return RED;
        case 2: return BLUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TEAM>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TEAM>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TEAM>() {
            public TEAM findValueByNumber(int number) {
              return TEAM.valueOf(number);
            }
          };

    private final int value;

    private TEAM(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_MATCH.TEAM)
  }

  /**
   * Protobuf enum {@code PROTO_MATCH.AiType}
   */
  public enum AiType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>free = 0;</code>
     *
     * <pre>
     *自由
     * </pre>
     */
    free(0, 0),
    /**
     * <code>intercept = 1;</code>
     *
     * <pre>
     *拦截
     * </pre>
     */
    intercept(1, 1),
    /**
     * <code>patrol = 2;</code>
     *
     * <pre>
     *巡逻
     * </pre>
     */
    patrol(2, 2),
    /**
     * <code>follow = 3;</code>
     *
     * <pre>
     *跟随
     * </pre>
     */
    follow(3, 3),
    /**
     * <code>stop = 4;</code>
     *
     * <pre>
     *静止
     * </pre>
     */
    stop(4, 4),
    ;

    /**
     * <code>free = 0;</code>
     *
     * <pre>
     *自由
     * </pre>
     */
    public static final int free_VALUE = 0;
    /**
     * <code>intercept = 1;</code>
     *
     * <pre>
     *拦截
     * </pre>
     */
    public static final int intercept_VALUE = 1;
    /**
     * <code>patrol = 2;</code>
     *
     * <pre>
     *巡逻
     * </pre>
     */
    public static final int patrol_VALUE = 2;
    /**
     * <code>follow = 3;</code>
     *
     * <pre>
     *跟随
     * </pre>
     */
    public static final int follow_VALUE = 3;
    /**
     * <code>stop = 4;</code>
     *
     * <pre>
     *静止
     * </pre>
     */
    public static final int stop_VALUE = 4;


    public final int getNumber() { return value; }

    public static AiType valueOf(int value) {
      switch (value) {
        case 0: return free;
        case 1: return intercept;
        case 2: return patrol;
        case 3: return follow;
        case 4: return stop;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AiType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AiType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AiType>() {
            public AiType findValueByNumber(int number) {
              return AiType.valueOf(number);
            }
          };

    private final int value;

    private AiType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_MATCH.AiType)
  }

  /**
   * Protobuf enum {@code PROTO_MATCH.TEAM_INFO_TYPE}
   */
  public enum TEAM_INFO_TYPE
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TEAM_AGREE_TYPE = 1;</code>
     *
     * <pre>
     *同意邀请组队
     * </pre>
     */
    TEAM_AGREE_TYPE(0, 1),
    /**
     * <code>TEAM_QUIT_TYPE = 2;</code>
     *
     * <pre>
     *退出组队(给其他人推送 STC_TEAM_INFO)		
     * </pre>
     */
    TEAM_QUIT_TYPE(1, 2),
    /**
     * <code>TEAM_CREATE_TYPE = 3;</code>
     *
     * <pre>
     *创建队伍
     * </pre>
     */
    TEAM_CREATE_TYPE(2, 3),
    /**
     * <code>TEAM_CANCEL_TYPE = 4;</code>
     *
     * <pre>
     *取消匹配
     * </pre>
     */
    TEAM_CANCEL_TYPE(3, 4),
    /**
     * <code>TEAM_INFO_GET_TYPE = 5;</code>
     *
     * <pre>
     *请求队伍信息
     * </pre>
     */
    TEAM_INFO_GET_TYPE(4, 5),
    /**
     * <code>TEAM_INFO_GET_ONLY_TYPE = 6;</code>
     *
     * <pre>
     *请求队伍信息ONLY
     * </pre>
     */
    TEAM_INFO_GET_ONLY_TYPE(5, 6),
    ;

    /**
     * <code>TEAM_AGREE_TYPE = 1;</code>
     *
     * <pre>
     *同意邀请组队
     * </pre>
     */
    public static final int TEAM_AGREE_TYPE_VALUE = 1;
    /**
     * <code>TEAM_QUIT_TYPE = 2;</code>
     *
     * <pre>
     *退出组队(给其他人推送 STC_TEAM_INFO)		
     * </pre>
     */
    public static final int TEAM_QUIT_TYPE_VALUE = 2;
    /**
     * <code>TEAM_CREATE_TYPE = 3;</code>
     *
     * <pre>
     *创建队伍
     * </pre>
     */
    public static final int TEAM_CREATE_TYPE_VALUE = 3;
    /**
     * <code>TEAM_CANCEL_TYPE = 4;</code>
     *
     * <pre>
     *取消匹配
     * </pre>
     */
    public static final int TEAM_CANCEL_TYPE_VALUE = 4;
    /**
     * <code>TEAM_INFO_GET_TYPE = 5;</code>
     *
     * <pre>
     *请求队伍信息
     * </pre>
     */
    public static final int TEAM_INFO_GET_TYPE_VALUE = 5;
    /**
     * <code>TEAM_INFO_GET_ONLY_TYPE = 6;</code>
     *
     * <pre>
     *请求队伍信息ONLY
     * </pre>
     */
    public static final int TEAM_INFO_GET_ONLY_TYPE_VALUE = 6;


    public final int getNumber() { return value; }

    public static TEAM_INFO_TYPE valueOf(int value) {
      switch (value) {
        case 1: return TEAM_AGREE_TYPE;
        case 2: return TEAM_QUIT_TYPE;
        case 3: return TEAM_CREATE_TYPE;
        case 4: return TEAM_CANCEL_TYPE;
        case 5: return TEAM_INFO_GET_TYPE;
        case 6: return TEAM_INFO_GET_ONLY_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TEAM_INFO_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TEAM_INFO_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TEAM_INFO_TYPE>() {
            public TEAM_INFO_TYPE findValueByNumber(int number) {
              return TEAM_INFO_TYPE.valueOf(number);
            }
          };

    private final int value;

    private TEAM_INFO_TYPE(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_MATCH.TEAM_INFO_TYPE)
  }

  /**
   * Protobuf enum {@code PROTO_MATCH.TEAM_REQ_FRIEND}
   *
   * <pre>
   *邀请类型
   * </pre>
   */
  public enum TEAM_REQ_FRIEND
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>FRIEND_TYPE = 1;</code>
     *
     * <pre>
     *好友邀请
     * </pre>
     */
    FRIEND_TYPE(0, 1),
    /**
     * <code>CORP_TYPE = 2;</code>
     *
     * <pre>
     *军团邀请
     * </pre>
     */
    CORP_TYPE(1, 2),
    ;

    /**
     * <code>FRIEND_TYPE = 1;</code>
     *
     * <pre>
     *好友邀请
     * </pre>
     */
    public static final int FRIEND_TYPE_VALUE = 1;
    /**
     * <code>CORP_TYPE = 2;</code>
     *
     * <pre>
     *军团邀请
     * </pre>
     */
    public static final int CORP_TYPE_VALUE = 2;


    public final int getNumber() { return value; }

    public static TEAM_REQ_FRIEND valueOf(int value) {
      switch (value) {
        case 1: return FRIEND_TYPE;
        case 2: return CORP_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TEAM_REQ_FRIEND>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TEAM_REQ_FRIEND>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TEAM_REQ_FRIEND>() {
            public TEAM_REQ_FRIEND findValueByNumber(int number) {
              return TEAM_REQ_FRIEND.valueOf(number);
            }
          };

    private final int value;

    private TEAM_REQ_FRIEND(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PROTO_MATCH.TEAM_REQ_FRIEND)
  }

  public interface CTS_TEAM_INFO_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;
    /**
     * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE getType();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_INFO_MSG}
   */
  public static final class CTS_TEAM_INFO_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_INFO_MSGOrBuilder {
    // Use CTS_TEAM_INFO_MSG.newBuilder() to construct.
    private CTS_TEAM_INFO_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_INFO_MSG(boolean noInit) {}

    private static final CTS_TEAM_INFO_MSG defaultInstance;
    public static CTS_TEAM_INFO_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_INFO_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_INFO_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE value = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_INFO_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_INFO_MSG>() {
      public CTS_TEAM_INFO_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_INFO_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_INFO_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE type_;
    /**
     * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;</code>
     *
     * <pre>
     *类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE getType() {
      return type_;
    }

    private void initFields() {
      type_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.TEAM_AGREE_TYPE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_INFO_MSG}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.TEAM_AGREE_TYPE;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_INFO_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE type_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.TEAM_AGREE_TYPE;
      /**
       * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE getType() {
        return type_;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder setType(com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 1;</code>
       *
       * <pre>
       *类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.TEAM_AGREE_TYPE;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_INFO_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_INFO_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_INFO_MSG)
  }

  public interface STC_ENTER_TEACH_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string mapId = 1;
    /**
     * <code>required string mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    boolean hasMapId();
    /**
     * <code>required string mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    java.lang.String getMapId();
    /**
     * <code>required string mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getMapIdBytes();

    // required .PROTO_MATCH.TankItem tankItem = 2;
    /**
     * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    boolean hasTankItem();
    /**
     * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem();

    // repeated .PROTO_MATCH.TankItem otherTanks = 3;
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> 
        getOtherTanksList();
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index);
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    int getOtherTanksCount();

    // required .PROTO_MATCH.Location mines = 4;
    /**
     * <code>required .PROTO_MATCH.Location mines = 4;</code>
     *
     * <pre>
     *地雷位置
     * </pre>
     */
    boolean hasMines();
    /**
     * <code>required .PROTO_MATCH.Location mines = 4;</code>
     *
     * <pre>
     *地雷位置
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.Location getMines();

    // required uint32 time = 5;
    /**
     * <code>required uint32 time = 5;</code>
     *
     * <pre>
     *比赛时长(单位：秒)
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required uint32 time = 5;</code>
     *
     * <pre>
     *比赛时长(单位：秒)
     * </pre>
     */
    int getTime();

    // required uint32 holdTime = 7;
    /**
     * <code>required uint32 holdTime = 7;</code>
     *
     * <pre>
     *战旗时长(单位：秒)
     * </pre>
     */
    boolean hasHoldTime();
    /**
     * <code>required uint32 holdTime = 7;</code>
     *
     * <pre>
     *战旗时长(单位：秒)
     * </pre>
     */
    int getHoldTime();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_ENTER_TEACH_MSG}
   *
   * <pre>
   *返回进入教学战场
   * </pre>
   */
  public static final class STC_ENTER_TEACH_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_ENTER_TEACH_MSGOrBuilder {
    // Use STC_ENTER_TEACH_MSG.newBuilder() to construct.
    private STC_ENTER_TEACH_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_ENTER_TEACH_MSG(boolean noInit) {}

    private static final STC_ENTER_TEACH_MSG defaultInstance;
    public static STC_ENTER_TEACH_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_ENTER_TEACH_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_ENTER_TEACH_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mapId_ = input.readBytes();
              break;
            }
            case 18: {
              com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tankItem_.toBuilder();
              }
              tankItem_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tankItem_);
                tankItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                otherTanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankItem>();
                mutable_bitField0_ |= 0x00000004;
              }
              otherTanks_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankItem.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              com.ourpalm.tank.message.MATCH_MSG.Location.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = mines_.toBuilder();
              }
              mines_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.Location.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mines_);
                mines_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              time_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              holdTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          otherTanks_ = java.util.Collections.unmodifiableList(otherTanks_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_ENTER_TEACH_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_ENTER_TEACH_MSG>() {
      public STC_ENTER_TEACH_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_ENTER_TEACH_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_ENTER_TEACH_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string mapId = 1;
    public static final int MAPID_FIELD_NUMBER = 1;
    private java.lang.Object mapId_;
    /**
     * <code>required string mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public boolean hasMapId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public java.lang.String getMapId() {
      java.lang.Object ref = mapId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mapId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mapId = 1;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMapIdBytes() {
      java.lang.Object ref = mapId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PROTO_MATCH.TankItem tankItem = 2;
    public static final int TANKITEM_FIELD_NUMBER = 2;
    private com.ourpalm.tank.message.MATCH_MSG.TankItem tankItem_;
    /**
     * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    public boolean hasTankItem() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem() {
      return tankItem_;
    }

    // repeated .PROTO_MATCH.TankItem otherTanks = 3;
    public static final int OTHERTANKS_FIELD_NUMBER = 3;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> otherTanks_;
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> getOtherTanksList() {
      return otherTanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.TankItemOrBuilder> 
        getOtherTanksOrBuilderList() {
      return otherTanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public int getOtherTanksCount() {
      return otherTanks_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index) {
      return otherTanks_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItemOrBuilder getOtherTanksOrBuilder(
        int index) {
      return otherTanks_.get(index);
    }

    // required .PROTO_MATCH.Location mines = 4;
    public static final int MINES_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.MATCH_MSG.Location mines_;
    /**
     * <code>required .PROTO_MATCH.Location mines = 4;</code>
     *
     * <pre>
     *地雷位置
     * </pre>
     */
    public boolean hasMines() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .PROTO_MATCH.Location mines = 4;</code>
     *
     * <pre>
     *地雷位置
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.Location getMines() {
      return mines_;
    }

    // required uint32 time = 5;
    public static final int TIME_FIELD_NUMBER = 5;
    private int time_;
    /**
     * <code>required uint32 time = 5;</code>
     *
     * <pre>
     *比赛时长(单位：秒)
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 time = 5;</code>
     *
     * <pre>
     *比赛时长(单位：秒)
     * </pre>
     */
    public int getTime() {
      return time_;
    }

    // required uint32 holdTime = 7;
    public static final int HOLDTIME_FIELD_NUMBER = 7;
    private int holdTime_;
    /**
     * <code>required uint32 holdTime = 7;</code>
     *
     * <pre>
     *战旗时长(单位：秒)
     * </pre>
     */
    public boolean hasHoldTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 holdTime = 7;</code>
     *
     * <pre>
     *战旗时长(单位：秒)
     * </pre>
     */
    public int getHoldTime() {
      return holdTime_;
    }

    private void initFields() {
      mapId_ = "";
      tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
      otherTanks_ = java.util.Collections.emptyList();
      mines_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
      time_ = 0;
      holdTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMapId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankItem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMines()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHoldTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTankItem().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getOtherTanksCount(); i++) {
        if (!getOtherTanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getMines().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMapIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, tankItem_);
      }
      for (int i = 0; i < otherTanks_.size(); i++) {
        output.writeMessage(3, otherTanks_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, mines_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(7, holdTime_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMapIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tankItem_);
      }
      for (int i = 0; i < otherTanks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, otherTanks_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, mines_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, holdTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_ENTER_TEACH_MSG}
     *
     * <pre>
     *返回进入教学战场
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mapId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        otherTanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        mines_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        holdTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mapId_ = mapId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankItem_ = tankItem_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          otherTanks_ = java.util.Collections.unmodifiableList(otherTanks_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.otherTanks_ = otherTanks_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mines_ = mines_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.holdTime_ = holdTime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG.getDefaultInstance()) return this;
        if (other.hasMapId()) {
          bitField0_ |= 0x00000001;
          mapId_ = other.mapId_;
          
        }
        if (other.hasTankItem()) {
          mergeTankItem(other.getTankItem());
        }
        if (!other.otherTanks_.isEmpty()) {
          if (otherTanks_.isEmpty()) {
            otherTanks_ = other.otherTanks_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOtherTanksIsMutable();
            otherTanks_.addAll(other.otherTanks_);
          }
          
        }
        if (other.hasMines()) {
          mergeMines(other.getMines());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasHoldTime()) {
          setHoldTime(other.getHoldTime());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMapId()) {
          
          return false;
        }
        if (!hasTankItem()) {
          
          return false;
        }
        if (!hasMines()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        if (!hasHoldTime()) {
          
          return false;
        }
        if (!getTankItem().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getOtherTanksCount(); i++) {
          if (!getOtherTanks(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getMines().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_TEACH_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string mapId = 1;
      private java.lang.Object mapId_ = "";
      /**
       * <code>required string mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public boolean hasMapId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public java.lang.String getMapId() {
        java.lang.Object ref = mapId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mapId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMapIdBytes() {
        java.lang.Object ref = mapId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder setMapId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mapId_ = value;
        
        return this;
      }
      /**
       * <code>required string mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder clearMapId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mapId_ = getDefaultInstance().getMapId();
        
        return this;
      }
      /**
       * <code>required string mapId = 1;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder setMapIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mapId_ = value;
        
        return this;
      }

      // required .PROTO_MATCH.TankItem tankItem = 2;
      private com.ourpalm.tank.message.MATCH_MSG.TankItem tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public boolean hasTankItem() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem() {
        return tankItem_;
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder setTankItem(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        tankItem_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder setTankItem(
          com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        tankItem_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder mergeTankItem(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            tankItem_ != com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance()) {
          tankItem_ =
            com.ourpalm.tank.message.MATCH_MSG.TankItem.newBuilder(tankItem_).mergeFrom(value).buildPartial();
        } else {
          tankItem_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 2;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder clearTankItem() {
        tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // repeated .PROTO_MATCH.TankItem otherTanks = 3;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> otherTanks_ =
        java.util.Collections.emptyList();
      private void ensureOtherTanksIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          otherTanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankItem>(otherTanks_);
          bitField0_ |= 0x00000004;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> getOtherTanksList() {
        return java.util.Collections.unmodifiableList(otherTanks_);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public int getOtherTanksCount() {
        return otherTanks_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index) {
        return otherTanks_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder setOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder setOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addAllOtherTanks(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.TankItem> values) {
        ensureOtherTanksIsMutable();
        super.addAll(values, otherTanks_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder clearOtherTanks() {
        otherTanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 3;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder removeOtherTanks(int index) {
        ensureOtherTanksIsMutable();
        otherTanks_.remove(index);

        return this;
      }

      // required .PROTO_MATCH.Location mines = 4;
      private com.ourpalm.tank.message.MATCH_MSG.Location mines_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
      /**
       * <code>required .PROTO_MATCH.Location mines = 4;</code>
       *
       * <pre>
       *地雷位置
       * </pre>
       */
      public boolean hasMines() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .PROTO_MATCH.Location mines = 4;</code>
       *
       * <pre>
       *地雷位置
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.Location getMines() {
        return mines_;
      }
      /**
       * <code>required .PROTO_MATCH.Location mines = 4;</code>
       *
       * <pre>
       *地雷位置
       * </pre>
       */
      public Builder setMines(com.ourpalm.tank.message.MATCH_MSG.Location value) {
        if (value == null) {
          throw new NullPointerException();
        }
        mines_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location mines = 4;</code>
       *
       * <pre>
       *地雷位置
       * </pre>
       */
      public Builder setMines(
          com.ourpalm.tank.message.MATCH_MSG.Location.Builder builderForValue) {
        mines_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location mines = 4;</code>
       *
       * <pre>
       *地雷位置
       * </pre>
       */
      public Builder mergeMines(com.ourpalm.tank.message.MATCH_MSG.Location value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            mines_ != com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance()) {
          mines_ =
            com.ourpalm.tank.message.MATCH_MSG.Location.newBuilder(mines_).mergeFrom(value).buildPartial();
        } else {
          mines_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location mines = 4;</code>
       *
       * <pre>
       *地雷位置
       * </pre>
       */
      public Builder clearMines() {
        mines_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // required uint32 time = 5;
      private int time_ ;
      /**
       * <code>required uint32 time = 5;</code>
       *
       * <pre>
       *比赛时长(单位：秒)
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 time = 5;</code>
       *
       * <pre>
       *比赛时长(单位：秒)
       * </pre>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>required uint32 time = 5;</code>
       *
       * <pre>
       *比赛时长(单位：秒)
       * </pre>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000010;
        time_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 time = 5;</code>
       *
       * <pre>
       *比赛时长(单位：秒)
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        time_ = 0;
        
        return this;
      }

      // required uint32 holdTime = 7;
      private int holdTime_ ;
      /**
       * <code>required uint32 holdTime = 7;</code>
       *
       * <pre>
       *战旗时长(单位：秒)
       * </pre>
       */
      public boolean hasHoldTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 holdTime = 7;</code>
       *
       * <pre>
       *战旗时长(单位：秒)
       * </pre>
       */
      public int getHoldTime() {
        return holdTime_;
      }
      /**
       * <code>required uint32 holdTime = 7;</code>
       *
       * <pre>
       *战旗时长(单位：秒)
       * </pre>
       */
      public Builder setHoldTime(int value) {
        bitField0_ |= 0x00000020;
        holdTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 holdTime = 7;</code>
       *
       * <pre>
       *战旗时长(单位：秒)
       * </pre>
       */
      public Builder clearHoldTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        holdTime_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_ENTER_TEACH_MSG)
    }

    static {
      defaultInstance = new STC_ENTER_TEACH_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_ENTER_TEACH_MSG)
  }

  public interface CTS_MATCH_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *出战坦克模版id
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *出战坦克模版id
     * </pre>
     */
    int getTankId();

    // required .PROTO_MATCH.WAR_TYPE warType = 2;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_MATCH_MSG}
   *
   * <pre>
   *请求匹配
   * </pre>
   */
  public static final class CTS_MATCH_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_MATCH_MSGOrBuilder {
    // Use CTS_MATCH_MSG.newBuilder() to construct.
    private CTS_MATCH_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_MATCH_MSG(boolean noInit) {}

    private static final CTS_MATCH_MSG defaultInstance;
    public static CTS_MATCH_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_MATCH_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_MATCH_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                warType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_MATCH_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_MATCH_MSG>() {
      public CTS_MATCH_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_MATCH_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_MATCH_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *出战坦克模版id
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *出战坦克模版id
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required .PROTO_MATCH.WAR_TYPE warType = 2;
    public static final int WARTYPE_FIELD_NUMBER = 2;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    private void initFields() {
      tankId_ = 0;
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, warType_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, warType_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_MATCH_MSG}
     *
     * <pre>
     *请求匹配
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.warType_ = warType_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasWarType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *出战坦克模版id
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *出战坦克模版id
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *出战坦克模版id
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *出战坦克模版id
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required .PROTO_MATCH.WAR_TYPE warType = 2;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_MATCH_MSG)
    }

    static {
      defaultInstance = new CTS_MATCH_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_MATCH_MSG)
  }

  public interface STC_MATCH_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool result = 1;
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     *匹配结果
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     *匹配结果
     * </pre>
     */
    boolean getResult();

    // required string info = 2;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_MATCH_MSG}
   *
   * <pre>
   * 服务器返回匹配结果
   * </pre>
   */
  public static final class STC_MATCH_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_MATCH_MSGOrBuilder {
    // Use STC_MATCH_MSG.newBuilder() to construct.
    private STC_MATCH_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_MATCH_MSG(boolean noInit) {}

    private static final STC_MATCH_MSG defaultInstance;
    public static STC_MATCH_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_MATCH_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_MATCH_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_MATCH_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_MATCH_MSG>() {
      public STC_MATCH_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_MATCH_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_MATCH_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     *匹配结果
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     *匹配结果
     * </pre>
     */
    public boolean getResult() {
      return result_;
    }

    // required string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      result_ = false;
      info_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_MATCH_MSG}
     *
     * <pre>
     * 服务器返回匹配结果
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool result = 1;
      private boolean result_ ;
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       *匹配结果
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       *匹配结果
       * </pre>
       */
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       *匹配结果
       * </pre>
       */
      public Builder setResult(boolean value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       *匹配结果
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = false;
        
        return this;
      }

      // required string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_MATCH_MSG)
    }

    static {
      defaultInstance = new STC_MATCH_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_MATCH_MSG)
  }

  public interface STC_NOTIFY_ENTER_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string roomId = 1;
    /**
     * <code>required string roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>required string roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    java.lang.String getRoomId();
    /**
     * <code>required string roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();

    // required string mapId = 2;
    /**
     * <code>required string mapId = 2;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    boolean hasMapId();
    /**
     * <code>required string mapId = 2;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    java.lang.String getMapId();
    /**
     * <code>required string mapId = 2;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getMapIdBytes();

    // required .PROTO_MATCH.TEAM self = 3;
    /**
     * <code>required .PROTO_MATCH.TEAM self = 3;</code>
     *
     * <pre>
     *自己所属队伍
     * </pre>
     */
    boolean hasSelf();
    /**
     * <code>required .PROTO_MATCH.TEAM self = 3;</code>
     *
     * <pre>
     *自己所属队伍
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM getSelf();

    // repeated .PROTO_MATCH.MatchItem matchList = 4;
    /**
     * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
     *
     * <pre>
     *匹配列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.MatchItem> 
        getMatchListList();
    /**
     * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
     *
     * <pre>
     *匹配列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.MatchItem getMatchList(int index);
    /**
     * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
     *
     * <pre>
     *匹配列表
     * </pre>
     */
    int getMatchListCount();

    // required string mapName = 5;
    /**
     * <code>required string mapName = 5;</code>
     *
     * <pre>
     *地图中文名字
     * </pre>
     */
    boolean hasMapName();
    /**
     * <code>required string mapName = 5;</code>
     *
     * <pre>
     *地图中文名字
     * </pre>
     */
    java.lang.String getMapName();
    /**
     * <code>required string mapName = 5;</code>
     *
     * <pre>
     *地图中文名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getMapNameBytes();

    // required float smallMapOffX = 6;
    /**
     * <code>required float smallMapOffX = 6;</code>
     *
     * <pre>
     *小地图偏移量X
     * </pre>
     */
    boolean hasSmallMapOffX();
    /**
     * <code>required float smallMapOffX = 6;</code>
     *
     * <pre>
     *小地图偏移量X
     * </pre>
     */
    float getSmallMapOffX();

    // required float smallMapOffY = 7;
    /**
     * <code>required float smallMapOffY = 7;</code>
     *
     * <pre>
     *小地图偏移量Y
     * </pre>
     */
    boolean hasSmallMapOffY();
    /**
     * <code>required float smallMapOffY = 7;</code>
     *
     * <pre>
     *小地图偏移量Y
     * </pre>
     */
    float getSmallMapOffY();

    // required float smallMapWidth = 8;
    /**
     * <code>required float smallMapWidth = 8;</code>
     *
     * <pre>
     *小地图偏移量宽
     * </pre>
     */
    boolean hasSmallMapWidth();
    /**
     * <code>required float smallMapWidth = 8;</code>
     *
     * <pre>
     *小地图偏移量宽
     * </pre>
     */
    float getSmallMapWidth();

    // required float smallMapHeigh = 9;
    /**
     * <code>required float smallMapHeigh = 9;</code>
     *
     * <pre>
     *小地图偏移量高
     * </pre>
     */
    boolean hasSmallMapHeigh();
    /**
     * <code>required float smallMapHeigh = 9;</code>
     *
     * <pre>
     *小地图偏移量高
     * </pre>
     */
    float getSmallMapHeigh();

    // required .PROTO_MATCH.WAR_TYPE warType = 10;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 10;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 10;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();

    // required uint32 weather = 11;
    /**
     * <code>required uint32 weather = 11;</code>
     *
     * <pre>
     *天气 1:晴天 2:沙尘暴 3:雷阵雨 4:雪
     * </pre>
     */
    boolean hasWeather();
    /**
     * <code>required uint32 weather = 11;</code>
     *
     * <pre>
     *天气 1:晴天 2:沙尘暴 3:雷阵雨 4:雪
     * </pre>
     */
    int getWeather();

    // optional bool weakTeam = 12;
    /**
     * <code>optional bool weakTeam = 12;</code>
     *
     * <pre>
     *是否遭遇强敌
     * </pre>
     */
    boolean hasWeakTeam();
    /**
     * <code>optional bool weakTeam = 12;</code>
     *
     * <pre>
     *是否遭遇强敌
     * </pre>
     */
    boolean getWeakTeam();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_NOTIFY_ENTER_MSG}
   *
   * <pre>
   * 服务器通知客户端进入战场
   * </pre>
   */
  public static final class STC_NOTIFY_ENTER_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_NOTIFY_ENTER_MSGOrBuilder {
    // Use STC_NOTIFY_ENTER_MSG.newBuilder() to construct.
    private STC_NOTIFY_ENTER_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_NOTIFY_ENTER_MSG(boolean noInit) {}

    private static final STC_NOTIFY_ENTER_MSG defaultInstance;
    public static STC_NOTIFY_ENTER_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_NOTIFY_ENTER_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_NOTIFY_ENTER_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mapId_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM value = com.ourpalm.tank.message.MATCH_MSG.TEAM.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                self_ = value;
              }
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                matchList_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.MatchItem>();
                mutable_bitField0_ |= 0x00000008;
              }
              matchList_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.MatchItem.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              mapName_ = input.readBytes();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000010;
              smallMapOffX_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000020;
              smallMapOffY_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000040;
              smallMapWidth_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000080;
              smallMapHeigh_ = input.readFloat();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000100;
                warType_ = value;
              }
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              weather_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              weakTeam_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          matchList_ = java.util.Collections.unmodifiableList(matchList_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_NOTIFY_ENTER_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_NOTIFY_ENTER_MSG>() {
      public STC_NOTIFY_ENTER_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_NOTIFY_ENTER_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_NOTIFY_ENTER_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private java.lang.Object roomId_;
    /**
     * <code>required string roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roomId = 1;</code>
     *
     * <pre>
     *房间ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string mapId = 2;
    public static final int MAPID_FIELD_NUMBER = 2;
    private java.lang.Object mapId_;
    /**
     * <code>required string mapId = 2;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public boolean hasMapId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string mapId = 2;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public java.lang.String getMapId() {
      java.lang.Object ref = mapId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mapId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mapId = 2;</code>
     *
     * <pre>
     *地图ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMapIdBytes() {
      java.lang.Object ref = mapId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PROTO_MATCH.TEAM self = 3;
    public static final int SELF_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM self_;
    /**
     * <code>required .PROTO_MATCH.TEAM self = 3;</code>
     *
     * <pre>
     *自己所属队伍
     * </pre>
     */
    public boolean hasSelf() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .PROTO_MATCH.TEAM self = 3;</code>
     *
     * <pre>
     *自己所属队伍
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM getSelf() {
      return self_;
    }

    // repeated .PROTO_MATCH.MatchItem matchList = 4;
    public static final int MATCHLIST_FIELD_NUMBER = 4;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.MatchItem> matchList_;
    /**
     * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
     *
     * <pre>
     *匹配列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.MatchItem> getMatchListList() {
      return matchList_;
    }
    /**
     * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
     *
     * <pre>
     *匹配列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.MatchItemOrBuilder> 
        getMatchListOrBuilderList() {
      return matchList_;
    }
    /**
     * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
     *
     * <pre>
     *匹配列表
     * </pre>
     */
    public int getMatchListCount() {
      return matchList_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
     *
     * <pre>
     *匹配列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.MatchItem getMatchList(int index) {
      return matchList_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
     *
     * <pre>
     *匹配列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.MatchItemOrBuilder getMatchListOrBuilder(
        int index) {
      return matchList_.get(index);
    }

    // required string mapName = 5;
    public static final int MAPNAME_FIELD_NUMBER = 5;
    private java.lang.Object mapName_;
    /**
     * <code>required string mapName = 5;</code>
     *
     * <pre>
     *地图中文名字
     * </pre>
     */
    public boolean hasMapName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string mapName = 5;</code>
     *
     * <pre>
     *地图中文名字
     * </pre>
     */
    public java.lang.String getMapName() {
      java.lang.Object ref = mapName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mapName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mapName = 5;</code>
     *
     * <pre>
     *地图中文名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMapNameBytes() {
      java.lang.Object ref = mapName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required float smallMapOffX = 6;
    public static final int SMALLMAPOFFX_FIELD_NUMBER = 6;
    private float smallMapOffX_;
    /**
     * <code>required float smallMapOffX = 6;</code>
     *
     * <pre>
     *小地图偏移量X
     * </pre>
     */
    public boolean hasSmallMapOffX() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required float smallMapOffX = 6;</code>
     *
     * <pre>
     *小地图偏移量X
     * </pre>
     */
    public float getSmallMapOffX() {
      return smallMapOffX_;
    }

    // required float smallMapOffY = 7;
    public static final int SMALLMAPOFFY_FIELD_NUMBER = 7;
    private float smallMapOffY_;
    /**
     * <code>required float smallMapOffY = 7;</code>
     *
     * <pre>
     *小地图偏移量Y
     * </pre>
     */
    public boolean hasSmallMapOffY() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float smallMapOffY = 7;</code>
     *
     * <pre>
     *小地图偏移量Y
     * </pre>
     */
    public float getSmallMapOffY() {
      return smallMapOffY_;
    }

    // required float smallMapWidth = 8;
    public static final int SMALLMAPWIDTH_FIELD_NUMBER = 8;
    private float smallMapWidth_;
    /**
     * <code>required float smallMapWidth = 8;</code>
     *
     * <pre>
     *小地图偏移量宽
     * </pre>
     */
    public boolean hasSmallMapWidth() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float smallMapWidth = 8;</code>
     *
     * <pre>
     *小地图偏移量宽
     * </pre>
     */
    public float getSmallMapWidth() {
      return smallMapWidth_;
    }

    // required float smallMapHeigh = 9;
    public static final int SMALLMAPHEIGH_FIELD_NUMBER = 9;
    private float smallMapHeigh_;
    /**
     * <code>required float smallMapHeigh = 9;</code>
     *
     * <pre>
     *小地图偏移量高
     * </pre>
     */
    public boolean hasSmallMapHeigh() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required float smallMapHeigh = 9;</code>
     *
     * <pre>
     *小地图偏移量高
     * </pre>
     */
    public float getSmallMapHeigh() {
      return smallMapHeigh_;
    }

    // required .PROTO_MATCH.WAR_TYPE warType = 10;
    public static final int WARTYPE_FIELD_NUMBER = 10;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 10;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 10;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    // required uint32 weather = 11;
    public static final int WEATHER_FIELD_NUMBER = 11;
    private int weather_;
    /**
     * <code>required uint32 weather = 11;</code>
     *
     * <pre>
     *天气 1:晴天 2:沙尘暴 3:雷阵雨 4:雪
     * </pre>
     */
    public boolean hasWeather() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required uint32 weather = 11;</code>
     *
     * <pre>
     *天气 1:晴天 2:沙尘暴 3:雷阵雨 4:雪
     * </pre>
     */
    public int getWeather() {
      return weather_;
    }

    // optional bool weakTeam = 12;
    public static final int WEAKTEAM_FIELD_NUMBER = 12;
    private boolean weakTeam_;
    /**
     * <code>optional bool weakTeam = 12;</code>
     *
     * <pre>
     *是否遭遇强敌
     * </pre>
     */
    public boolean hasWeakTeam() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool weakTeam = 12;</code>
     *
     * <pre>
     *是否遭遇强敌
     * </pre>
     */
    public boolean getWeakTeam() {
      return weakTeam_;
    }

    private void initFields() {
      roomId_ = "";
      mapId_ = "";
      self_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
      matchList_ = java.util.Collections.emptyList();
      mapName_ = "";
      smallMapOffX_ = 0F;
      smallMapOffY_ = 0F;
      smallMapWidth_ = 0F;
      smallMapHeigh_ = 0F;
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      weather_ = 0;
      weakTeam_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSelf()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMapName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallMapOffX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallMapOffY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallMapWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallMapHeigh()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWeather()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMatchListCount(); i++) {
        if (!getMatchList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoomIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMapIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, self_.getNumber());
      }
      for (int i = 0; i < matchList_.size(); i++) {
        output.writeMessage(4, matchList_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getMapNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(6, smallMapOffX_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(7, smallMapOffY_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(8, smallMapWidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(9, smallMapHeigh_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(10, warType_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(11, weather_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(12, weakTeam_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoomIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMapIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, self_.getNumber());
      }
      for (int i = 0; i < matchList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, matchList_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getMapNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, smallMapOffX_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, smallMapOffY_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, smallMapWidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, smallMapHeigh_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, warType_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, weather_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, weakTeam_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_NOTIFY_ENTER_MSG}
     *
     * <pre>
     * 服务器通知客户端进入战场
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mapId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        self_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
        bitField0_ = (bitField0_ & ~0x00000004);
        matchList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        mapName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        smallMapOffX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        smallMapOffY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        smallMapWidth_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        smallMapHeigh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000200);
        weather_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        weakTeam_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mapId_ = mapId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.self_ = self_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          matchList_ = java.util.Collections.unmodifiableList(matchList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.matchList_ = matchList_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mapName_ = mapName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.smallMapOffX_ = smallMapOffX_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.smallMapOffY_ = smallMapOffY_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.smallMapWidth_ = smallMapWidth_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.smallMapHeigh_ = smallMapHeigh_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.warType_ = warType_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.weather_ = weather_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.weakTeam_ = weakTeam_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          bitField0_ |= 0x00000001;
          roomId_ = other.roomId_;
          
        }
        if (other.hasMapId()) {
          bitField0_ |= 0x00000002;
          mapId_ = other.mapId_;
          
        }
        if (other.hasSelf()) {
          setSelf(other.getSelf());
        }
        if (!other.matchList_.isEmpty()) {
          if (matchList_.isEmpty()) {
            matchList_ = other.matchList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureMatchListIsMutable();
            matchList_.addAll(other.matchList_);
          }
          
        }
        if (other.hasMapName()) {
          bitField0_ |= 0x00000010;
          mapName_ = other.mapName_;
          
        }
        if (other.hasSmallMapOffX()) {
          setSmallMapOffX(other.getSmallMapOffX());
        }
        if (other.hasSmallMapOffY()) {
          setSmallMapOffY(other.getSmallMapOffY());
        }
        if (other.hasSmallMapWidth()) {
          setSmallMapWidth(other.getSmallMapWidth());
        }
        if (other.hasSmallMapHeigh()) {
          setSmallMapHeigh(other.getSmallMapHeigh());
        }
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        if (other.hasWeather()) {
          setWeather(other.getWeather());
        }
        if (other.hasWeakTeam()) {
          setWeakTeam(other.getWeakTeam());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        if (!hasMapId()) {
          
          return false;
        }
        if (!hasSelf()) {
          
          return false;
        }
        if (!hasMapName()) {
          
          return false;
        }
        if (!hasSmallMapOffX()) {
          
          return false;
        }
        if (!hasSmallMapOffY()) {
          
          return false;
        }
        if (!hasSmallMapWidth()) {
          
          return false;
        }
        if (!hasSmallMapHeigh()) {
          
          return false;
        }
        if (!hasWarType()) {
          
          return false;
        }
        if (!hasWeather()) {
          
          return false;
        }
        for (int i = 0; i < getMatchListCount(); i++) {
          if (!getMatchList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_NOTIFY_ENTER_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string roomId = 1;
      private java.lang.Object roomId_ = "";
      /**
       * <code>required string roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = getDefaultInstance().getRoomId();
        
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       *
       * <pre>
       *房间ID
       * </pre>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        
        return this;
      }

      // required string mapId = 2;
      private java.lang.Object mapId_ = "";
      /**
       * <code>required string mapId = 2;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public boolean hasMapId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string mapId = 2;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public java.lang.String getMapId() {
        java.lang.Object ref = mapId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mapId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mapId = 2;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMapIdBytes() {
        java.lang.Object ref = mapId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mapId = 2;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder setMapId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mapId_ = value;
        
        return this;
      }
      /**
       * <code>required string mapId = 2;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder clearMapId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mapId_ = getDefaultInstance().getMapId();
        
        return this;
      }
      /**
       * <code>required string mapId = 2;</code>
       *
       * <pre>
       *地图ID
       * </pre>
       */
      public Builder setMapIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mapId_ = value;
        
        return this;
      }

      // required .PROTO_MATCH.TEAM self = 3;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM self_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
      /**
       * <code>required .PROTO_MATCH.TEAM self = 3;</code>
       *
       * <pre>
       *自己所属队伍
       * </pre>
       */
      public boolean hasSelf() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .PROTO_MATCH.TEAM self = 3;</code>
       *
       * <pre>
       *自己所属队伍
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM getSelf() {
        return self_;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM self = 3;</code>
       *
       * <pre>
       *自己所属队伍
       * </pre>
       */
      public Builder setSelf(com.ourpalm.tank.message.MATCH_MSG.TEAM value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        self_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM self = 3;</code>
       *
       * <pre>
       *自己所属队伍
       * </pre>
       */
      public Builder clearSelf() {
        bitField0_ = (bitField0_ & ~0x00000004);
        self_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
        
        return this;
      }

      // repeated .PROTO_MATCH.MatchItem matchList = 4;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.MatchItem> matchList_ =
        java.util.Collections.emptyList();
      private void ensureMatchListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          matchList_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.MatchItem>(matchList_);
          bitField0_ |= 0x00000008;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.MatchItem> getMatchListList() {
        return java.util.Collections.unmodifiableList(matchList_);
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public int getMatchListCount() {
        return matchList_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.MatchItem getMatchList(int index) {
        return matchList_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder setMatchList(
          int index, com.ourpalm.tank.message.MATCH_MSG.MatchItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMatchListIsMutable();
        matchList_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder setMatchList(
          int index, com.ourpalm.tank.message.MATCH_MSG.MatchItem.Builder builderForValue) {
        ensureMatchListIsMutable();
        matchList_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder addMatchList(com.ourpalm.tank.message.MATCH_MSG.MatchItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMatchListIsMutable();
        matchList_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder addMatchList(
          int index, com.ourpalm.tank.message.MATCH_MSG.MatchItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMatchListIsMutable();
        matchList_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder addMatchList(
          com.ourpalm.tank.message.MATCH_MSG.MatchItem.Builder builderForValue) {
        ensureMatchListIsMutable();
        matchList_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder addMatchList(
          int index, com.ourpalm.tank.message.MATCH_MSG.MatchItem.Builder builderForValue) {
        ensureMatchListIsMutable();
        matchList_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder addAllMatchList(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.MatchItem> values) {
        ensureMatchListIsMutable();
        super.addAll(values, matchList_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder clearMatchList() {
        matchList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MatchItem matchList = 4;</code>
       *
       * <pre>
       *匹配列表
       * </pre>
       */
      public Builder removeMatchList(int index) {
        ensureMatchListIsMutable();
        matchList_.remove(index);

        return this;
      }

      // required string mapName = 5;
      private java.lang.Object mapName_ = "";
      /**
       * <code>required string mapName = 5;</code>
       *
       * <pre>
       *地图中文名字
       * </pre>
       */
      public boolean hasMapName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string mapName = 5;</code>
       *
       * <pre>
       *地图中文名字
       * </pre>
       */
      public java.lang.String getMapName() {
        java.lang.Object ref = mapName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mapName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mapName = 5;</code>
       *
       * <pre>
       *地图中文名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMapNameBytes() {
        java.lang.Object ref = mapName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mapName = 5;</code>
       *
       * <pre>
       *地图中文名字
       * </pre>
       */
      public Builder setMapName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        mapName_ = value;
        
        return this;
      }
      /**
       * <code>required string mapName = 5;</code>
       *
       * <pre>
       *地图中文名字
       * </pre>
       */
      public Builder clearMapName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mapName_ = getDefaultInstance().getMapName();
        
        return this;
      }
      /**
       * <code>required string mapName = 5;</code>
       *
       * <pre>
       *地图中文名字
       * </pre>
       */
      public Builder setMapNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        mapName_ = value;
        
        return this;
      }

      // required float smallMapOffX = 6;
      private float smallMapOffX_ ;
      /**
       * <code>required float smallMapOffX = 6;</code>
       *
       * <pre>
       *小地图偏移量X
       * </pre>
       */
      public boolean hasSmallMapOffX() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float smallMapOffX = 6;</code>
       *
       * <pre>
       *小地图偏移量X
       * </pre>
       */
      public float getSmallMapOffX() {
        return smallMapOffX_;
      }
      /**
       * <code>required float smallMapOffX = 6;</code>
       *
       * <pre>
       *小地图偏移量X
       * </pre>
       */
      public Builder setSmallMapOffX(float value) {
        bitField0_ |= 0x00000020;
        smallMapOffX_ = value;
        
        return this;
      }
      /**
       * <code>required float smallMapOffX = 6;</code>
       *
       * <pre>
       *小地图偏移量X
       * </pre>
       */
      public Builder clearSmallMapOffX() {
        bitField0_ = (bitField0_ & ~0x00000020);
        smallMapOffX_ = 0F;
        
        return this;
      }

      // required float smallMapOffY = 7;
      private float smallMapOffY_ ;
      /**
       * <code>required float smallMapOffY = 7;</code>
       *
       * <pre>
       *小地图偏移量Y
       * </pre>
       */
      public boolean hasSmallMapOffY() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float smallMapOffY = 7;</code>
       *
       * <pre>
       *小地图偏移量Y
       * </pre>
       */
      public float getSmallMapOffY() {
        return smallMapOffY_;
      }
      /**
       * <code>required float smallMapOffY = 7;</code>
       *
       * <pre>
       *小地图偏移量Y
       * </pre>
       */
      public Builder setSmallMapOffY(float value) {
        bitField0_ |= 0x00000040;
        smallMapOffY_ = value;
        
        return this;
      }
      /**
       * <code>required float smallMapOffY = 7;</code>
       *
       * <pre>
       *小地图偏移量Y
       * </pre>
       */
      public Builder clearSmallMapOffY() {
        bitField0_ = (bitField0_ & ~0x00000040);
        smallMapOffY_ = 0F;
        
        return this;
      }

      // required float smallMapWidth = 8;
      private float smallMapWidth_ ;
      /**
       * <code>required float smallMapWidth = 8;</code>
       *
       * <pre>
       *小地图偏移量宽
       * </pre>
       */
      public boolean hasSmallMapWidth() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required float smallMapWidth = 8;</code>
       *
       * <pre>
       *小地图偏移量宽
       * </pre>
       */
      public float getSmallMapWidth() {
        return smallMapWidth_;
      }
      /**
       * <code>required float smallMapWidth = 8;</code>
       *
       * <pre>
       *小地图偏移量宽
       * </pre>
       */
      public Builder setSmallMapWidth(float value) {
        bitField0_ |= 0x00000080;
        smallMapWidth_ = value;
        
        return this;
      }
      /**
       * <code>required float smallMapWidth = 8;</code>
       *
       * <pre>
       *小地图偏移量宽
       * </pre>
       */
      public Builder clearSmallMapWidth() {
        bitField0_ = (bitField0_ & ~0x00000080);
        smallMapWidth_ = 0F;
        
        return this;
      }

      // required float smallMapHeigh = 9;
      private float smallMapHeigh_ ;
      /**
       * <code>required float smallMapHeigh = 9;</code>
       *
       * <pre>
       *小地图偏移量高
       * </pre>
       */
      public boolean hasSmallMapHeigh() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required float smallMapHeigh = 9;</code>
       *
       * <pre>
       *小地图偏移量高
       * </pre>
       */
      public float getSmallMapHeigh() {
        return smallMapHeigh_;
      }
      /**
       * <code>required float smallMapHeigh = 9;</code>
       *
       * <pre>
       *小地图偏移量高
       * </pre>
       */
      public Builder setSmallMapHeigh(float value) {
        bitField0_ |= 0x00000100;
        smallMapHeigh_ = value;
        
        return this;
      }
      /**
       * <code>required float smallMapHeigh = 9;</code>
       *
       * <pre>
       *小地图偏移量高
       * </pre>
       */
      public Builder clearSmallMapHeigh() {
        bitField0_ = (bitField0_ & ~0x00000100);
        smallMapHeigh_ = 0F;
        
        return this;
      }

      // required .PROTO_MATCH.WAR_TYPE warType = 10;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 10;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 10;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 10;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 10;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // required uint32 weather = 11;
      private int weather_ ;
      /**
       * <code>required uint32 weather = 11;</code>
       *
       * <pre>
       *天气 1:晴天 2:沙尘暴 3:雷阵雨 4:雪
       * </pre>
       */
      public boolean hasWeather() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required uint32 weather = 11;</code>
       *
       * <pre>
       *天气 1:晴天 2:沙尘暴 3:雷阵雨 4:雪
       * </pre>
       */
      public int getWeather() {
        return weather_;
      }
      /**
       * <code>required uint32 weather = 11;</code>
       *
       * <pre>
       *天气 1:晴天 2:沙尘暴 3:雷阵雨 4:雪
       * </pre>
       */
      public Builder setWeather(int value) {
        bitField0_ |= 0x00000400;
        weather_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 weather = 11;</code>
       *
       * <pre>
       *天气 1:晴天 2:沙尘暴 3:雷阵雨 4:雪
       * </pre>
       */
      public Builder clearWeather() {
        bitField0_ = (bitField0_ & ~0x00000400);
        weather_ = 0;
        
        return this;
      }

      // optional bool weakTeam = 12;
      private boolean weakTeam_ ;
      /**
       * <code>optional bool weakTeam = 12;</code>
       *
       * <pre>
       *是否遭遇强敌
       * </pre>
       */
      public boolean hasWeakTeam() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool weakTeam = 12;</code>
       *
       * <pre>
       *是否遭遇强敌
       * </pre>
       */
      public boolean getWeakTeam() {
        return weakTeam_;
      }
      /**
       * <code>optional bool weakTeam = 12;</code>
       *
       * <pre>
       *是否遭遇强敌
       * </pre>
       */
      public Builder setWeakTeam(boolean value) {
        bitField0_ |= 0x00000800;
        weakTeam_ = value;
        
        return this;
      }
      /**
       * <code>optional bool weakTeam = 12;</code>
       *
       * <pre>
       *是否遭遇强敌
       * </pre>
       */
      public Builder clearWeakTeam() {
        bitField0_ = (bitField0_ & ~0x00000800);
        weakTeam_ = false;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_NOTIFY_ENTER_MSG)
    }

    static {
      defaultInstance = new STC_NOTIFY_ENTER_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_NOTIFY_ENTER_MSG)
  }

  public interface MatchItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string roleName = 1;
    /**
     * <code>required string roleName = 1;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    boolean hasRoleName();
    /**
     * <code>required string roleName = 1;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    java.lang.String getRoleName();
    /**
     * <code>required string roleName = 1;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoleNameBytes();

    // required uint32 tankId = 2;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    int getTankId();

    // required .PROTO_MATCH.TEAM teamType = 3;
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 3;</code>
     *
     * <pre>
     *团队阵营
     * </pre>
     */
    boolean hasTeamType();
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 3;</code>
     *
     * <pre>
     *团队阵营
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType();

    // required uint32 roleId = 4;
    /**
     * <code>required uint32 roleId = 4;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasRoleId();
    /**
     * <code>required uint32 roleId = 4;</code>
     *
     * <pre>
     * </pre>
     */
    int getRoleId();

    // required uint32 attack = 5;
    /**
     * <code>required uint32 attack = 5;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    boolean hasAttack();
    /**
     * <code>required uint32 attack = 5;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    int getAttack();

    // required uint32 titleId = 6;
    /**
     * <code>required uint32 titleId = 6;</code>
     *
     * <pre>
     *军衔
     * </pre>
     */
    boolean hasTitleId();
    /**
     * <code>required uint32 titleId = 6;</code>
     *
     * <pre>
     *军衔
     * </pre>
     */
    int getTitleId();

    // required bool hadElite = 7;
    /**
     * <code>required bool hadElite = 7;</code>
     *
     * <pre>
     *是否是精英
     * </pre>
     */
    boolean hasHadElite();
    /**
     * <code>required bool hadElite = 7;</code>
     *
     * <pre>
     *是否是精英
     * </pre>
     */
    boolean getHadElite();

    // optional string pfUserInfo = 8;
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息
     * </pre>
     */
    boolean hasPfUserInfo();
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息
     * </pre>
     */
    java.lang.String getPfUserInfo();
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getPfUserInfoBytes();

    // optional string pfYellowUserInfo = 9;
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    boolean hasPfYellowUserInfo();
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    java.lang.String getPfYellowUserInfo();
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getPfYellowUserInfoBytes();

    // optional int32 tankInstanceId = 10;
    /**
     * <code>optional int32 tankInstanceId = 10;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    boolean hasTankInstanceId();
    /**
     * <code>optional int32 tankInstanceId = 10;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    int getTankInstanceId();

    // repeated string goodBad = 11;
    /**
     * <code>repeated string goodBad = 11;</code>
     *
     * <pre>
     *敌坦特点
     * </pre>
     */
    java.util.List<java.lang.String>
    getGoodBadList();
    /**
     * <code>repeated string goodBad = 11;</code>
     *
     * <pre>
     *敌坦特点
     * </pre>
     */
    int getGoodBadCount();
    /**
     * <code>repeated string goodBad = 11;</code>
     *
     * <pre>
     *敌坦特点
     * </pre>
     */
    java.lang.String getGoodBad(int index);
    /**
     * <code>repeated string goodBad = 11;</code>
     *
     * <pre>
     *敌坦特点
     * </pre>
     */
    com.google.protobuf.ByteString
        getGoodBadBytes(int index);
  }
  /**
   * Protobuf type {@code PROTO_MATCH.MatchItem}
   */
  public static final class MatchItem extends
      com.google.protobuf.GeneratedMessageLite
      implements MatchItemOrBuilder {
    // Use MatchItem.newBuilder() to construct.
    private MatchItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MatchItem(boolean noInit) {}

    private static final MatchItem defaultInstance;
    public static MatchItem getDefaultInstance() {
      return defaultInstance;
    }

    public MatchItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MatchItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roleName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankId_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM value = com.ourpalm.tank.message.MATCH_MSG.TEAM.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                teamType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              roleId_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              attack_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              titleId_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              hadElite_ = input.readBool();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              pfUserInfo_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              pfYellowUserInfo_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              tankInstanceId_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                goodBad_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000400;
              }
              goodBad_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          goodBad_ = new com.google.protobuf.UnmodifiableLazyStringList(goodBad_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MatchItem> PARSER =
        new com.google.protobuf.AbstractParser<MatchItem>() {
      public MatchItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatchItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MatchItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string roleName = 1;
    public static final int ROLENAME_FIELD_NUMBER = 1;
    private java.lang.Object roleName_;
    /**
     * <code>required string roleName = 1;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    public boolean hasRoleName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string roleName = 1;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    public java.lang.String getRoleName() {
      java.lang.Object ref = roleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roleName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roleName = 1;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoleNameBytes() {
      java.lang.Object ref = roleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 tankId = 2;
    public static final int TANKID_FIELD_NUMBER = 2;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模板ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required .PROTO_MATCH.TEAM teamType = 3;
    public static final int TEAMTYPE_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM teamType_;
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 3;</code>
     *
     * <pre>
     *团队阵营
     * </pre>
     */
    public boolean hasTeamType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 3;</code>
     *
     * <pre>
     *团队阵营
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType() {
      return teamType_;
    }

    // required uint32 roleId = 4;
    public static final int ROLEID_FIELD_NUMBER = 4;
    private int roleId_;
    /**
     * <code>required uint32 roleId = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 roleId = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public int getRoleId() {
      return roleId_;
    }

    // required uint32 attack = 5;
    public static final int ATTACK_FIELD_NUMBER = 5;
    private int attack_;
    /**
     * <code>required uint32 attack = 5;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public boolean hasAttack() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 attack = 5;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public int getAttack() {
      return attack_;
    }

    // required uint32 titleId = 6;
    public static final int TITLEID_FIELD_NUMBER = 6;
    private int titleId_;
    /**
     * <code>required uint32 titleId = 6;</code>
     *
     * <pre>
     *军衔
     * </pre>
     */
    public boolean hasTitleId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 titleId = 6;</code>
     *
     * <pre>
     *军衔
     * </pre>
     */
    public int getTitleId() {
      return titleId_;
    }

    // required bool hadElite = 7;
    public static final int HADELITE_FIELD_NUMBER = 7;
    private boolean hadElite_;
    /**
     * <code>required bool hadElite = 7;</code>
     *
     * <pre>
     *是否是精英
     * </pre>
     */
    public boolean hasHadElite() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool hadElite = 7;</code>
     *
     * <pre>
     *是否是精英
     * </pre>
     */
    public boolean getHadElite() {
      return hadElite_;
    }

    // optional string pfUserInfo = 8;
    public static final int PFUSERINFO_FIELD_NUMBER = 8;
    private java.lang.Object pfUserInfo_;
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息
     * </pre>
     */
    public boolean hasPfUserInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息
     * </pre>
     */
    public java.lang.String getPfUserInfo() {
      java.lang.Object ref = pfUserInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pfUserInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPfUserInfoBytes() {
      java.lang.Object ref = pfUserInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pfUserInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string pfYellowUserInfo = 9;
    public static final int PFYELLOWUSERINFO_FIELD_NUMBER = 9;
    private java.lang.Object pfYellowUserInfo_;
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public boolean hasPfYellowUserInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public java.lang.String getPfYellowUserInfo() {
      java.lang.Object ref = pfYellowUserInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pfYellowUserInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPfYellowUserInfoBytes() {
      java.lang.Object ref = pfYellowUserInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pfYellowUserInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 tankInstanceId = 10;
    public static final int TANKINSTANCEID_FIELD_NUMBER = 10;
    private int tankInstanceId_;
    /**
     * <code>optional int32 tankInstanceId = 10;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    public boolean hasTankInstanceId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 tankInstanceId = 10;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    public int getTankInstanceId() {
      return tankInstanceId_;
    }

    // repeated string goodBad = 11;
    public static final int GOODBAD_FIELD_NUMBER = 11;
    private com.google.protobuf.LazyStringList goodBad_;
    /**
     * <code>repeated string goodBad = 11;</code>
     *
     * <pre>
     *敌坦特点
     * </pre>
     */
    public java.util.List<java.lang.String>
        getGoodBadList() {
      return goodBad_;
    }
    /**
     * <code>repeated string goodBad = 11;</code>
     *
     * <pre>
     *敌坦特点
     * </pre>
     */
    public int getGoodBadCount() {
      return goodBad_.size();
    }
    /**
     * <code>repeated string goodBad = 11;</code>
     *
     * <pre>
     *敌坦特点
     * </pre>
     */
    public java.lang.String getGoodBad(int index) {
      return goodBad_.get(index);
    }
    /**
     * <code>repeated string goodBad = 11;</code>
     *
     * <pre>
     *敌坦特点
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGoodBadBytes(int index) {
      return goodBad_.getByteString(index);
    }

    private void initFields() {
      roleName_ = "";
      tankId_ = 0;
      teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
      roleId_ = 0;
      attack_ = 0;
      titleId_ = 0;
      hadElite_ = false;
      pfUserInfo_ = "";
      pfYellowUserInfo_ = "";
      tankInstanceId_ = 0;
      goodBad_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoleName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeamType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTitleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHadElite()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoleNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, teamType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, roleId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, attack_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, titleId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, hadElite_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getPfUserInfoBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getPfYellowUserInfoBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, tankInstanceId_);
      }
      for (int i = 0; i < goodBad_.size(); i++) {
        output.writeBytes(11, goodBad_.getByteString(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoleNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, teamType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, roleId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, attack_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, titleId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, hadElite_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getPfUserInfoBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getPfYellowUserInfoBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, tankInstanceId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < goodBad_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(goodBad_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getGoodBadList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MatchItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.MatchItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.MatchItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.MatchItem, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.MatchItemOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.MatchItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roleName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
        bitField0_ = (bitField0_ & ~0x00000004);
        roleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        attack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        titleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        hadElite_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        pfUserInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        pfYellowUserInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        tankInstanceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        goodBad_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.MatchItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.MatchItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.MatchItem build() {
        com.ourpalm.tank.message.MATCH_MSG.MatchItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.MatchItem buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.MatchItem result = new com.ourpalm.tank.message.MATCH_MSG.MatchItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleName_ = roleName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamType_ = teamType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.roleId_ = roleId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.attack_ = attack_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.titleId_ = titleId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.hadElite_ = hadElite_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pfUserInfo_ = pfUserInfo_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pfYellowUserInfo_ = pfYellowUserInfo_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tankInstanceId_ = tankInstanceId_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          goodBad_ = new com.google.protobuf.UnmodifiableLazyStringList(
              goodBad_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.goodBad_ = goodBad_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.MatchItem other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.MatchItem.getDefaultInstance()) return this;
        if (other.hasRoleName()) {
          bitField0_ |= 0x00000001;
          roleName_ = other.roleName_;
          
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasTeamType()) {
          setTeamType(other.getTeamType());
        }
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasAttack()) {
          setAttack(other.getAttack());
        }
        if (other.hasTitleId()) {
          setTitleId(other.getTitleId());
        }
        if (other.hasHadElite()) {
          setHadElite(other.getHadElite());
        }
        if (other.hasPfUserInfo()) {
          bitField0_ |= 0x00000080;
          pfUserInfo_ = other.pfUserInfo_;
          
        }
        if (other.hasPfYellowUserInfo()) {
          bitField0_ |= 0x00000100;
          pfYellowUserInfo_ = other.pfYellowUserInfo_;
          
        }
        if (other.hasTankInstanceId()) {
          setTankInstanceId(other.getTankInstanceId());
        }
        if (!other.goodBad_.isEmpty()) {
          if (goodBad_.isEmpty()) {
            goodBad_ = other.goodBad_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureGoodBadIsMutable();
            goodBad_.addAll(other.goodBad_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoleName()) {
          
          return false;
        }
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasTeamType()) {
          
          return false;
        }
        if (!hasRoleId()) {
          
          return false;
        }
        if (!hasAttack()) {
          
          return false;
        }
        if (!hasTitleId()) {
          
          return false;
        }
        if (!hasHadElite()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.MatchItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.MatchItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string roleName = 1;
      private java.lang.Object roleName_ = "";
      /**
       * <code>required string roleName = 1;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public boolean hasRoleName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string roleName = 1;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public java.lang.String getRoleName() {
        java.lang.Object ref = roleName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roleName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roleName = 1;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoleNameBytes() {
        java.lang.Object ref = roleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roleName = 1;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public Builder setRoleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roleName_ = value;
        
        return this;
      }
      /**
       * <code>required string roleName = 1;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public Builder clearRoleName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleName_ = getDefaultInstance().getRoleName();
        
        return this;
      }
      /**
       * <code>required string roleName = 1;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public Builder setRoleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roleName_ = value;
        
        return this;
      }

      // required uint32 tankId = 2;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000002;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模板ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        
        return this;
      }

      // required .PROTO_MATCH.TEAM teamType = 3;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 3;</code>
       *
       * <pre>
       *团队阵营
       * </pre>
       */
      public boolean hasTeamType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 3;</code>
       *
       * <pre>
       *团队阵营
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType() {
        return teamType_;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 3;</code>
       *
       * <pre>
       *团队阵营
       * </pre>
       */
      public Builder setTeamType(com.ourpalm.tank.message.MATCH_MSG.TEAM value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        teamType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 3;</code>
       *
       * <pre>
       *团队阵营
       * </pre>
       */
      public Builder clearTeamType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
        
        return this;
      }

      // required uint32 roleId = 4;
      private int roleId_ ;
      /**
       * <code>required uint32 roleId = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 roleId = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public int getRoleId() {
        return roleId_;
      }
      /**
       * <code>required uint32 roleId = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setRoleId(int value) {
        bitField0_ |= 0x00000008;
        roleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 roleId = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        roleId_ = 0;
        
        return this;
      }

      // required uint32 attack = 5;
      private int attack_ ;
      /**
       * <code>required uint32 attack = 5;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public boolean hasAttack() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 attack = 5;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public int getAttack() {
        return attack_;
      }
      /**
       * <code>required uint32 attack = 5;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder setAttack(int value) {
        bitField0_ |= 0x00000010;
        attack_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 attack = 5;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder clearAttack() {
        bitField0_ = (bitField0_ & ~0x00000010);
        attack_ = 0;
        
        return this;
      }

      // required uint32 titleId = 6;
      private int titleId_ ;
      /**
       * <code>required uint32 titleId = 6;</code>
       *
       * <pre>
       *军衔
       * </pre>
       */
      public boolean hasTitleId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 titleId = 6;</code>
       *
       * <pre>
       *军衔
       * </pre>
       */
      public int getTitleId() {
        return titleId_;
      }
      /**
       * <code>required uint32 titleId = 6;</code>
       *
       * <pre>
       *军衔
       * </pre>
       */
      public Builder setTitleId(int value) {
        bitField0_ |= 0x00000020;
        titleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 titleId = 6;</code>
       *
       * <pre>
       *军衔
       * </pre>
       */
      public Builder clearTitleId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        titleId_ = 0;
        
        return this;
      }

      // required bool hadElite = 7;
      private boolean hadElite_ ;
      /**
       * <code>required bool hadElite = 7;</code>
       *
       * <pre>
       *是否是精英
       * </pre>
       */
      public boolean hasHadElite() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bool hadElite = 7;</code>
       *
       * <pre>
       *是否是精英
       * </pre>
       */
      public boolean getHadElite() {
        return hadElite_;
      }
      /**
       * <code>required bool hadElite = 7;</code>
       *
       * <pre>
       *是否是精英
       * </pre>
       */
      public Builder setHadElite(boolean value) {
        bitField0_ |= 0x00000040;
        hadElite_ = value;
        
        return this;
      }
      /**
       * <code>required bool hadElite = 7;</code>
       *
       * <pre>
       *是否是精英
       * </pre>
       */
      public Builder clearHadElite() {
        bitField0_ = (bitField0_ & ~0x00000040);
        hadElite_ = false;
        
        return this;
      }

      // optional string pfUserInfo = 8;
      private java.lang.Object pfUserInfo_ = "";
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息
       * </pre>
       */
      public boolean hasPfUserInfo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息
       * </pre>
       */
      public java.lang.String getPfUserInfo() {
        java.lang.Object ref = pfUserInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pfUserInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPfUserInfoBytes() {
        java.lang.Object ref = pfUserInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pfUserInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息
       * </pre>
       */
      public Builder setPfUserInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        pfUserInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息
       * </pre>
       */
      public Builder clearPfUserInfo() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pfUserInfo_ = getDefaultInstance().getPfUserInfo();
        
        return this;
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息
       * </pre>
       */
      public Builder setPfUserInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        pfUserInfo_ = value;
        
        return this;
      }

      // optional string pfYellowUserInfo = 9;
      private java.lang.Object pfYellowUserInfo_ = "";
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public boolean hasPfYellowUserInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public java.lang.String getPfYellowUserInfo() {
        java.lang.Object ref = pfYellowUserInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pfYellowUserInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPfYellowUserInfoBytes() {
        java.lang.Object ref = pfYellowUserInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pfYellowUserInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder setPfYellowUserInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        pfYellowUserInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder clearPfYellowUserInfo() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pfYellowUserInfo_ = getDefaultInstance().getPfYellowUserInfo();
        
        return this;
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder setPfYellowUserInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        pfYellowUserInfo_ = value;
        
        return this;
      }

      // optional int32 tankInstanceId = 10;
      private int tankInstanceId_ ;
      /**
       * <code>optional int32 tankInstanceId = 10;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public boolean hasTankInstanceId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 tankInstanceId = 10;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public int getTankInstanceId() {
        return tankInstanceId_;
      }
      /**
       * <code>optional int32 tankInstanceId = 10;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public Builder setTankInstanceId(int value) {
        bitField0_ |= 0x00000200;
        tankInstanceId_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 tankInstanceId = 10;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public Builder clearTankInstanceId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tankInstanceId_ = 0;
        
        return this;
      }

      // repeated string goodBad = 11;
      private com.google.protobuf.LazyStringList goodBad_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGoodBadIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          goodBad_ = new com.google.protobuf.LazyStringArrayList(goodBad_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public java.util.List<java.lang.String>
          getGoodBadList() {
        return java.util.Collections.unmodifiableList(goodBad_);
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public int getGoodBadCount() {
        return goodBad_.size();
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public java.lang.String getGoodBad(int index) {
        return goodBad_.get(index);
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGoodBadBytes(int index) {
        return goodBad_.getByteString(index);
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public Builder setGoodBad(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGoodBadIsMutable();
        goodBad_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public Builder addGoodBad(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGoodBadIsMutable();
        goodBad_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public Builder addAllGoodBad(
          java.lang.Iterable<java.lang.String> values) {
        ensureGoodBadIsMutable();
        super.addAll(values, goodBad_);
        
        return this;
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public Builder clearGoodBad() {
        goodBad_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        
        return this;
      }
      /**
       * <code>repeated string goodBad = 11;</code>
       *
       * <pre>
       *敌坦特点
       * </pre>
       */
      public Builder addGoodBadBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGoodBadIsMutable();
        goodBad_.add(value);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.MatchItem)
    }

    static {
      defaultInstance = new MatchItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.MatchItem)
  }

  public interface STC_ENTER_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 result = 1;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：进入成功，0：进入失败提示
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：进入成功，0：进入失败提示
     * </pre>
     */
    int getResult();

    // optional string info = 2;
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // optional .PROTO_MATCH.TankItem tankItem = 3;
    /**
     * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    boolean hasTankItem();
    /**
     * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem();

    // repeated .PROTO_MATCH.TankItem otherTanks = 4;
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> 
        getOtherTanksList();
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index);
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    int getOtherTanksCount();

    // repeated .PROTO_MATCH.GoodsItem goodsItem = 5;
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> 
        getGoodsItemList();
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.GoodsItem getGoodsItem(int index);
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    int getGoodsItemCount();

    // repeated uint32 skillIds = 6;
    /**
     * <code>repeated uint32 skillIds = 6;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getSkillIdsList();
    /**
     * <code>repeated uint32 skillIds = 6;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    int getSkillIdsCount();
    /**
     * <code>repeated uint32 skillIds = 6;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    int getSkillIds(int index);

    // required uint32 loopTime = 7;
    /**
     * <code>required uint32 loopTime = 7;</code>
     *
     * <pre>
     *AI位置同步间隔时间(单位：毫秒)
     * </pre>
     */
    boolean hasLoopTime();
    /**
     * <code>required uint32 loopTime = 7;</code>
     *
     * <pre>
     *AI位置同步间隔时间(单位：毫秒)
     * </pre>
     */
    int getLoopTime();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_ENTER_MSG}
   *
   * <pre>
   * 服务器进入战场返回
   * </pre>
   */
  public static final class STC_ENTER_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_ENTER_MSGOrBuilder {
    // Use STC_ENTER_MSG.newBuilder() to construct.
    private STC_ENTER_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_ENTER_MSG(boolean noInit) {}

    private static final STC_ENTER_MSG defaultInstance;
    public static STC_ENTER_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_ENTER_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_ENTER_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 26: {
              com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tankItem_.toBuilder();
              }
              tankItem_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tankItem_);
                tankItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                otherTanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankItem>();
                mutable_bitField0_ |= 0x00000008;
              }
              otherTanks_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankItem.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                goodsItem_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.GoodsItem>();
                mutable_bitField0_ |= 0x00000010;
              }
              goodsItem_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.GoodsItem.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                skillIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              skillIds_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                skillIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                skillIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              loopTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          otherTanks_ = java.util.Collections.unmodifiableList(otherTanks_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          goodsItem_ = java.util.Collections.unmodifiableList(goodsItem_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          skillIds_ = java.util.Collections.unmodifiableList(skillIds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_ENTER_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_ENTER_MSG>() {
      public STC_ENTER_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_ENTER_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_ENTER_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：进入成功，0：进入失败提示
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：进入成功，0：进入失败提示
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // optional string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .PROTO_MATCH.TankItem tankItem = 3;
    public static final int TANKITEM_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.MATCH_MSG.TankItem tankItem_;
    /**
     * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    public boolean hasTankItem() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem() {
      return tankItem_;
    }

    // repeated .PROTO_MATCH.TankItem otherTanks = 4;
    public static final int OTHERTANKS_FIELD_NUMBER = 4;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> otherTanks_;
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> getOtherTanksList() {
      return otherTanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.TankItemOrBuilder> 
        getOtherTanksOrBuilderList() {
      return otherTanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public int getOtherTanksCount() {
      return otherTanks_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index) {
      return otherTanks_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItemOrBuilder getOtherTanksOrBuilder(
        int index) {
      return otherTanks_.get(index);
    }

    // repeated .PROTO_MATCH.GoodsItem goodsItem = 5;
    public static final int GOODSITEM_FIELD_NUMBER = 5;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> goodsItem_;
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> getGoodsItemList() {
      return goodsItem_;
    }
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.GoodsItemOrBuilder> 
        getGoodsItemOrBuilderList() {
      return goodsItem_;
    }
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public int getGoodsItemCount() {
      return goodsItem_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.GoodsItem getGoodsItem(int index) {
      return goodsItem_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.GoodsItemOrBuilder getGoodsItemOrBuilder(
        int index) {
      return goodsItem_.get(index);
    }

    // repeated uint32 skillIds = 6;
    public static final int SKILLIDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> skillIds_;
    /**
     * <code>repeated uint32 skillIds = 6;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSkillIdsList() {
      return skillIds_;
    }
    /**
     * <code>repeated uint32 skillIds = 6;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    public int getSkillIdsCount() {
      return skillIds_.size();
    }
    /**
     * <code>repeated uint32 skillIds = 6;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    public int getSkillIds(int index) {
      return skillIds_.get(index);
    }

    // required uint32 loopTime = 7;
    public static final int LOOPTIME_FIELD_NUMBER = 7;
    private int loopTime_;
    /**
     * <code>required uint32 loopTime = 7;</code>
     *
     * <pre>
     *AI位置同步间隔时间(单位：毫秒)
     * </pre>
     */
    public boolean hasLoopTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 loopTime = 7;</code>
     *
     * <pre>
     *AI位置同步间隔时间(单位：毫秒)
     * </pre>
     */
    public int getLoopTime() {
      return loopTime_;
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
      tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
      otherTanks_ = java.util.Collections.emptyList();
      goodsItem_ = java.util.Collections.emptyList();
      skillIds_ = java.util.Collections.emptyList();
      loopTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLoopTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTankItem()) {
        if (!getTankItem().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOtherTanksCount(); i++) {
        if (!getOtherTanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGoodsItemCount(); i++) {
        if (!getGoodsItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, tankItem_);
      }
      for (int i = 0; i < otherTanks_.size(); i++) {
        output.writeMessage(4, otherTanks_.get(i));
      }
      for (int i = 0; i < goodsItem_.size(); i++) {
        output.writeMessage(5, goodsItem_.get(i));
      }
      for (int i = 0; i < skillIds_.size(); i++) {
        output.writeUInt32(6, skillIds_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(7, loopTime_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tankItem_);
      }
      for (int i = 0; i < otherTanks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, otherTanks_.get(i));
      }
      for (int i = 0; i < goodsItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, goodsItem_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < skillIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(skillIds_.get(i));
        }
        size += dataSize;
        size += 1 * getSkillIdsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, loopTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_ENTER_MSG}
     *
     * <pre>
     * 服务器进入战场返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        otherTanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        goodsItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        skillIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        loopTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tankItem_ = tankItem_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          otherTanks_ = java.util.Collections.unmodifiableList(otherTanks_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.otherTanks_ = otherTanks_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          goodsItem_ = java.util.Collections.unmodifiableList(goodsItem_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.goodsItem_ = goodsItem_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          skillIds_ = java.util.Collections.unmodifiableList(skillIds_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.skillIds_ = skillIds_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.loopTime_ = loopTime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (other.hasTankItem()) {
          mergeTankItem(other.getTankItem());
        }
        if (!other.otherTanks_.isEmpty()) {
          if (otherTanks_.isEmpty()) {
            otherTanks_ = other.otherTanks_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureOtherTanksIsMutable();
            otherTanks_.addAll(other.otherTanks_);
          }
          
        }
        if (!other.goodsItem_.isEmpty()) {
          if (goodsItem_.isEmpty()) {
            goodsItem_ = other.goodsItem_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureGoodsItemIsMutable();
            goodsItem_.addAll(other.goodsItem_);
          }
          
        }
        if (!other.skillIds_.isEmpty()) {
          if (skillIds_.isEmpty()) {
            skillIds_ = other.skillIds_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSkillIdsIsMutable();
            skillIds_.addAll(other.skillIds_);
          }
          
        }
        if (other.hasLoopTime()) {
          setLoopTime(other.getLoopTime());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasLoopTime()) {
          
          return false;
        }
        if (hasTankItem()) {
          if (!getTankItem().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOtherTanksCount(); i++) {
          if (!getOtherTanks(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGoodsItemCount(); i++) {
          if (!getGoodsItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 result = 1;
      private int result_ ;
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：进入成功，0：进入失败提示
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：进入成功，0：进入失败提示
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：进入成功，0：进入失败提示
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：进入成功，0：进入失败提示
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // optional string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // optional .PROTO_MATCH.TankItem tankItem = 3;
      private com.ourpalm.tank.message.MATCH_MSG.TankItem tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public boolean hasTankItem() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem() {
        return tankItem_;
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder setTankItem(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        tankItem_ = value;

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder setTankItem(
          com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        tankItem_ = builderForValue.build();

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder mergeTankItem(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            tankItem_ != com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance()) {
          tankItem_ =
            com.ourpalm.tank.message.MATCH_MSG.TankItem.newBuilder(tankItem_).mergeFrom(value).buildPartial();
        } else {
          tankItem_ = value;
        }

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 3;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder clearTankItem() {
        tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // repeated .PROTO_MATCH.TankItem otherTanks = 4;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> otherTanks_ =
        java.util.Collections.emptyList();
      private void ensureOtherTanksIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          otherTanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankItem>(otherTanks_);
          bitField0_ |= 0x00000008;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> getOtherTanksList() {
        return java.util.Collections.unmodifiableList(otherTanks_);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public int getOtherTanksCount() {
        return otherTanks_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index) {
        return otherTanks_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder setOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder setOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addAllOtherTanks(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.TankItem> values) {
        ensureOtherTanksIsMutable();
        super.addAll(values, otherTanks_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder clearOtherTanks() {
        otherTanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 4;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder removeOtherTanks(int index) {
        ensureOtherTanksIsMutable();
        otherTanks_.remove(index);

        return this;
      }

      // repeated .PROTO_MATCH.GoodsItem goodsItem = 5;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> goodsItem_ =
        java.util.Collections.emptyList();
      private void ensureGoodsItemIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          goodsItem_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.GoodsItem>(goodsItem_);
          bitField0_ |= 0x00000010;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> getGoodsItemList() {
        return java.util.Collections.unmodifiableList(goodsItem_);
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public int getGoodsItemCount() {
        return goodsItem_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.GoodsItem getGoodsItem(int index) {
        return goodsItem_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder setGoodsItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.GoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder setGoodsItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.GoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addGoodsItem(com.ourpalm.tank.message.MATCH_MSG.GoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addGoodsItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.GoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addGoodsItem(
          com.ourpalm.tank.message.MATCH_MSG.GoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addGoodsItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.GoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addAllGoodsItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.GoodsItem> values) {
        ensureGoodsItemIsMutable();
        super.addAll(values, goodsItem_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder clearGoodsItem() {
        goodsItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 5;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder removeGoodsItem(int index) {
        ensureGoodsItemIsMutable();
        goodsItem_.remove(index);

        return this;
      }

      // repeated uint32 skillIds = 6;
      private java.util.List<java.lang.Integer> skillIds_ = java.util.Collections.emptyList();
      private void ensureSkillIdsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          skillIds_ = new java.util.ArrayList<java.lang.Integer>(skillIds_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 skillIds = 6;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSkillIdsList() {
        return java.util.Collections.unmodifiableList(skillIds_);
      }
      /**
       * <code>repeated uint32 skillIds = 6;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public int getSkillIdsCount() {
        return skillIds_.size();
      }
      /**
       * <code>repeated uint32 skillIds = 6;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public int getSkillIds(int index) {
        return skillIds_.get(index);
      }
      /**
       * <code>repeated uint32 skillIds = 6;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public Builder setSkillIds(
          int index, int value) {
        ensureSkillIdsIsMutable();
        skillIds_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated uint32 skillIds = 6;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public Builder addSkillIds(int value) {
        ensureSkillIdsIsMutable();
        skillIds_.add(value);
        
        return this;
      }
      /**
       * <code>repeated uint32 skillIds = 6;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public Builder addAllSkillIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSkillIdsIsMutable();
        super.addAll(values, skillIds_);
        
        return this;
      }
      /**
       * <code>repeated uint32 skillIds = 6;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public Builder clearSkillIds() {
        skillIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        
        return this;
      }

      // required uint32 loopTime = 7;
      private int loopTime_ ;
      /**
       * <code>required uint32 loopTime = 7;</code>
       *
       * <pre>
       *AI位置同步间隔时间(单位：毫秒)
       * </pre>
       */
      public boolean hasLoopTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 loopTime = 7;</code>
       *
       * <pre>
       *AI位置同步间隔时间(单位：毫秒)
       * </pre>
       */
      public int getLoopTime() {
        return loopTime_;
      }
      /**
       * <code>required uint32 loopTime = 7;</code>
       *
       * <pre>
       *AI位置同步间隔时间(单位：毫秒)
       * </pre>
       */
      public Builder setLoopTime(int value) {
        bitField0_ |= 0x00000040;
        loopTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 loopTime = 7;</code>
       *
       * <pre>
       *AI位置同步间隔时间(单位：毫秒)
       * </pre>
       */
      public Builder clearLoopTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        loopTime_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_ENTER_MSG)
    }

    static {
      defaultInstance = new STC_ENTER_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_ENTER_MSG)
  }

  public interface GoodsItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    int getId();

    // required uint32 count = 2;
    /**
     * <code>required uint32 count = 2;</code>
     *
     * <pre>
     *物品数目
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>required uint32 count = 2;</code>
     *
     * <pre>
     *物品数目
     * </pre>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.GoodsItem}
   */
  public static final class GoodsItem extends
      com.google.protobuf.GeneratedMessageLite
      implements GoodsItemOrBuilder {
    // Use GoodsItem.newBuilder() to construct.
    private GoodsItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private GoodsItem(boolean noInit) {}

    private static final GoodsItem defaultInstance;
    public static GoodsItem getDefaultInstance() {
      return defaultInstance;
    }

    public GoodsItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private GoodsItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<GoodsItem> PARSER =
        new com.google.protobuf.AbstractParser<GoodsItem>() {
      public GoodsItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GoodsItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GoodsItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 count = 2;
    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>required uint32 count = 2;</code>
     *
     * <pre>
     *物品数目
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 count = 2;</code>
     *
     * <pre>
     *物品数目
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    private void initFields() {
      id_ = 0;
      count_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, count_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.GoodsItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.GoodsItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.GoodsItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.GoodsItem, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.GoodsItemOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.GoodsItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.GoodsItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.GoodsItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.GoodsItem build() {
        com.ourpalm.tank.message.MATCH_MSG.GoodsItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.GoodsItem buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.GoodsItem result = new com.ourpalm.tank.message.MATCH_MSG.GoodsItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.GoodsItem other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.GoodsItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.GoodsItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.GoodsItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 count = 2;
      private int count_ ;
      /**
       * <code>required uint32 count = 2;</code>
       *
       * <pre>
       *物品数目
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 count = 2;</code>
       *
       * <pre>
       *物品数目
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required uint32 count = 2;</code>
       *
       * <pre>
       *物品数目
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 count = 2;</code>
       *
       * <pre>
       *物品数目
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.GoodsItem)
    }

    static {
      defaultInstance = new GoodsItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.GoodsItem)
  }

  public interface PropItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *属性ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *属性ID
     * </pre>
     */
    int getId();

    // required float value = 2;
    /**
     * <code>required float value = 2;</code>
     *
     * <pre>
     *属性值
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>required float value = 2;</code>
     *
     * <pre>
     *属性值
     * </pre>
     */
    float getValue();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.PropItem}
   *
   * <pre>
   *属性
   * </pre>
   */
  public static final class PropItem extends
      com.google.protobuf.GeneratedMessageLite
      implements PropItemOrBuilder {
    // Use PropItem.newBuilder() to construct.
    private PropItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private PropItem(boolean noInit) {}

    private static final PropItem defaultInstance;
    public static PropItem getDefaultInstance() {
      return defaultInstance;
    }

    public PropItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private PropItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              value_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<PropItem> PARSER =
        new com.google.protobuf.AbstractParser<PropItem>() {
      public PropItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PropItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PropItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *属性ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *属性ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required float value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private float value_;
    /**
     * <code>required float value = 2;</code>
     *
     * <pre>
     *属性值
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float value = 2;</code>
     *
     * <pre>
     *属性值
     * </pre>
     */
    public float getValue() {
      return value_;
    }

    private void initFields() {
      id_ = 0;
      value_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, value_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, value_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.PropItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.PropItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.PropItem}
     *
     * <pre>
     *属性
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.PropItem, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.PropItemOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.PropItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.PropItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.PropItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.PropItem build() {
        com.ourpalm.tank.message.MATCH_MSG.PropItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.PropItem buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.PropItem result = new com.ourpalm.tank.message.MATCH_MSG.PropItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.PropItem other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.PropItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.PropItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.PropItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *属性ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *属性ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *属性ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *属性ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required float value = 2;
      private float value_ ;
      /**
       * <code>required float value = 2;</code>
       *
       * <pre>
       *属性值
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float value = 2;</code>
       *
       * <pre>
       *属性值
       * </pre>
       */
      public float getValue() {
        return value_;
      }
      /**
       * <code>required float value = 2;</code>
       *
       * <pre>
       *属性值
       * </pre>
       */
      public Builder setValue(float value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        
        return this;
      }
      /**
       * <code>required float value = 2;</code>
       *
       * <pre>
       *属性值
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0F;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.PropItem)
    }

    static {
      defaultInstance = new PropItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.PropItem)
  }

  public interface AiItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .PROTO_MATCH.AiType aiType = 1;
    /**
     * <code>required .PROTO_MATCH.AiType aiType = 1;</code>
     *
     * <pre>
     *AI类型
     * </pre>
     */
    boolean hasAiType();
    /**
     * <code>required .PROTO_MATCH.AiType aiType = 1;</code>
     *
     * <pre>
     *AI类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.AiType getAiType();

    // required string aiStr = 2;
    /**
     * <code>required string aiStr = 2;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    boolean hasAiStr();
    /**
     * <code>required string aiStr = 2;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    java.lang.String getAiStr();
    /**
     * <code>required string aiStr = 2;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    com.google.protobuf.ByteString
        getAiStrBytes();

    // required uint32 aiInt = 3;
    /**
     * <code>required uint32 aiInt = 3;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    boolean hasAiInt();
    /**
     * <code>required uint32 aiInt = 3;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    int getAiInt();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.AiItem}
   */
  public static final class AiItem extends
      com.google.protobuf.GeneratedMessageLite
      implements AiItemOrBuilder {
    // Use AiItem.newBuilder() to construct.
    private AiItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AiItem(boolean noInit) {}

    private static final AiItem defaultInstance;
    public static AiItem getDefaultInstance() {
      return defaultInstance;
    }

    public AiItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AiItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.AiType value = com.ourpalm.tank.message.MATCH_MSG.AiType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                aiType_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              aiStr_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              aiInt_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AiItem> PARSER =
        new com.google.protobuf.AbstractParser<AiItem>() {
      public AiItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AiItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AiItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .PROTO_MATCH.AiType aiType = 1;
    public static final int AITYPE_FIELD_NUMBER = 1;
    private com.ourpalm.tank.message.MATCH_MSG.AiType aiType_;
    /**
     * <code>required .PROTO_MATCH.AiType aiType = 1;</code>
     *
     * <pre>
     *AI类型
     * </pre>
     */
    public boolean hasAiType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PROTO_MATCH.AiType aiType = 1;</code>
     *
     * <pre>
     *AI类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.AiType getAiType() {
      return aiType_;
    }

    // required string aiStr = 2;
    public static final int AISTR_FIELD_NUMBER = 2;
    private java.lang.Object aiStr_;
    /**
     * <code>required string aiStr = 2;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    public boolean hasAiStr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string aiStr = 2;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    public java.lang.String getAiStr() {
      java.lang.Object ref = aiStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          aiStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string aiStr = 2;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAiStrBytes() {
      java.lang.Object ref = aiStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        aiStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 aiInt = 3;
    public static final int AIINT_FIELD_NUMBER = 3;
    private int aiInt_;
    /**
     * <code>required uint32 aiInt = 3;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    public boolean hasAiInt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 aiInt = 3;</code>
     *
     * <pre>
     *AI参数
     * </pre>
     */
    public int getAiInt() {
      return aiInt_;
    }

    private void initFields() {
      aiType_ = com.ourpalm.tank.message.MATCH_MSG.AiType.free;
      aiStr_ = "";
      aiInt_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAiType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAiStr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAiInt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, aiType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAiStrBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, aiInt_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, aiType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAiStrBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, aiInt_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.AiItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.AiItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.AiItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.AiItem, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.AiItemOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.AiItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        aiType_ = com.ourpalm.tank.message.MATCH_MSG.AiType.free;
        bitField0_ = (bitField0_ & ~0x00000001);
        aiStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        aiInt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.AiItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.AiItem build() {
        com.ourpalm.tank.message.MATCH_MSG.AiItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.AiItem buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.AiItem result = new com.ourpalm.tank.message.MATCH_MSG.AiItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.aiType_ = aiType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.aiStr_ = aiStr_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.aiInt_ = aiInt_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.AiItem other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance()) return this;
        if (other.hasAiType()) {
          setAiType(other.getAiType());
        }
        if (other.hasAiStr()) {
          bitField0_ |= 0x00000002;
          aiStr_ = other.aiStr_;
          
        }
        if (other.hasAiInt()) {
          setAiInt(other.getAiInt());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAiType()) {
          
          return false;
        }
        if (!hasAiStr()) {
          
          return false;
        }
        if (!hasAiInt()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.AiItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.AiItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .PROTO_MATCH.AiType aiType = 1;
      private com.ourpalm.tank.message.MATCH_MSG.AiType aiType_ = com.ourpalm.tank.message.MATCH_MSG.AiType.free;
      /**
       * <code>required .PROTO_MATCH.AiType aiType = 1;</code>
       *
       * <pre>
       *AI类型
       * </pre>
       */
      public boolean hasAiType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PROTO_MATCH.AiType aiType = 1;</code>
       *
       * <pre>
       *AI类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.AiType getAiType() {
        return aiType_;
      }
      /**
       * <code>required .PROTO_MATCH.AiType aiType = 1;</code>
       *
       * <pre>
       *AI类型
       * </pre>
       */
      public Builder setAiType(com.ourpalm.tank.message.MATCH_MSG.AiType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        aiType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.AiType aiType = 1;</code>
       *
       * <pre>
       *AI类型
       * </pre>
       */
      public Builder clearAiType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        aiType_ = com.ourpalm.tank.message.MATCH_MSG.AiType.free;
        
        return this;
      }

      // required string aiStr = 2;
      private java.lang.Object aiStr_ = "";
      /**
       * <code>required string aiStr = 2;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public boolean hasAiStr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string aiStr = 2;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public java.lang.String getAiStr() {
        java.lang.Object ref = aiStr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          aiStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string aiStr = 2;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAiStrBytes() {
        java.lang.Object ref = aiStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          aiStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string aiStr = 2;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public Builder setAiStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        aiStr_ = value;
        
        return this;
      }
      /**
       * <code>required string aiStr = 2;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public Builder clearAiStr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        aiStr_ = getDefaultInstance().getAiStr();
        
        return this;
      }
      /**
       * <code>required string aiStr = 2;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public Builder setAiStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        aiStr_ = value;
        
        return this;
      }

      // required uint32 aiInt = 3;
      private int aiInt_ ;
      /**
       * <code>required uint32 aiInt = 3;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public boolean hasAiInt() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 aiInt = 3;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public int getAiInt() {
        return aiInt_;
      }
      /**
       * <code>required uint32 aiInt = 3;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public Builder setAiInt(int value) {
        bitField0_ |= 0x00000004;
        aiInt_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 aiInt = 3;</code>
       *
       * <pre>
       *AI参数
       * </pre>
       */
      public Builder clearAiInt() {
        bitField0_ = (bitField0_ & ~0x00000004);
        aiInt_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.AiItem)
    }

    static {
      defaultInstance = new AiItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.AiItem)
  }

  public interface TankItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    int getId();

    // required uint32 tankId = 2;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模块ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模块ID
     * </pre>
     */
    int getTankId();

    // optional uint32 main = 3;
    /**
     * <code>optional uint32 main = 3;</code>
     *
     * <pre>
     *是否为AI主机(0:不是 1:是) 2015-11-26
     * </pre>
     */
    boolean hasMain();
    /**
     * <code>optional uint32 main = 3;</code>
     *
     * <pre>
     *是否为AI主机(0:不是 1:是) 2015-11-26
     * </pre>
     */
    int getMain();

    // required uint32 robot = 4;
    /**
     * <code>required uint32 robot = 4;</code>
     *
     * <pre>
     *是否为机器人(0:不是 1:是) 2015-11-26
     * </pre>
     */
    boolean hasRobot();
    /**
     * <code>required uint32 robot = 4;</code>
     *
     * <pre>
     *是否为机器人(0:不是 1:是) 2015-11-26
     * </pre>
     */
    int getRobot();

    // required bool elite = 5;
    /**
     * <code>required bool elite = 5;</code>
     *
     * <pre>
     *是否为精英坦克
     * </pre>
     */
    boolean hasElite();
    /**
     * <code>required bool elite = 5;</code>
     *
     * <pre>
     *是否为精英坦克
     * </pre>
     */
    boolean getElite();

    // required string roleName = 6;
    /**
     * <code>required string roleName = 6;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    boolean hasRoleName();
    /**
     * <code>required string roleName = 6;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    java.lang.String getRoleName();
    /**
     * <code>required string roleName = 6;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoleNameBytes();

    // required .PROTO_MATCH.Location birthLocation = 7;
    /**
     * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
     *
     * <pre>
     *出生位置
     * </pre>
     */
    boolean hasBirthLocation();
    /**
     * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
     *
     * <pre>
     *出生位置
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.Location getBirthLocation();

    // required .PROTO_MATCH.TEAM teamType = 8;
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 8;</code>
     *
     * <pre>
     *团队类型
     * </pre>
     */
    boolean hasTeamType();
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 8;</code>
     *
     * <pre>
     *团队类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType();

    // repeated .PROTO_MATCH.PropItem propes = 9;
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> 
        getPropesList();
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.PropItem getPropes(int index);
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    int getPropesCount();

    // required .PROTO_MATCH.AiItem aiItem = 10;
    /**
     * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
     *
     * <pre>
     *AI
     * </pre>
     */
    boolean hasAiItem();
    /**
     * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
     *
     * <pre>
     *AI
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.AiItem getAiItem();

    // required uint32 atk = 11;
    /**
     * <code>required uint32 atk = 11;</code>
     *
     * <pre>
     *坦克攻击力
     * </pre>
     */
    boolean hasAtk();
    /**
     * <code>required uint32 atk = 11;</code>
     *
     * <pre>
     *坦克攻击力
     * </pre>
     */
    int getAtk();

    // optional string pfUserInfo = 12;
    /**
     * <code>optional string pfUserInfo = 12;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    boolean hasPfUserInfo();
    /**
     * <code>optional string pfUserInfo = 12;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    java.lang.String getPfUserInfo();
    /**
     * <code>optional string pfUserInfo = 12;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    com.google.protobuf.ByteString
        getPfUserInfoBytes();

    // optional string pfYellowUserInfo = 13;
    /**
     * <code>optional string pfYellowUserInfo = 13;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    boolean hasPfYellowUserInfo();
    /**
     * <code>optional string pfYellowUserInfo = 13;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    java.lang.String getPfYellowUserInfo();
    /**
     * <code>optional string pfYellowUserInfo = 13;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getPfYellowUserInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.TankItem}
   */
  public static final class TankItem extends
      com.google.protobuf.GeneratedMessageLite
      implements TankItemOrBuilder {
    // Use TankItem.newBuilder() to construct.
    private TankItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TankItem(boolean noInit) {}

    private static final TankItem defaultInstance;
    public static TankItem getDefaultInstance() {
      return defaultInstance;
    }

    public TankItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TankItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              main_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              robot_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              elite_ = input.readBool();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              roleName_ = input.readBytes();
              break;
            }
            case 58: {
              com.ourpalm.tank.message.MATCH_MSG.Location.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = birthLocation_.toBuilder();
              }
              birthLocation_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.Location.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(birthLocation_);
                birthLocation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM value = com.ourpalm.tank.message.MATCH_MSG.TEAM.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000080;
                teamType_ = value;
              }
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                propes_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.PropItem>();
                mutable_bitField0_ |= 0x00000100;
              }
              propes_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.PropItem.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              com.ourpalm.tank.message.MATCH_MSG.AiItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = aiItem_.toBuilder();
              }
              aiItem_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.AiItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(aiItem_);
                aiItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              atk_ = input.readUInt32();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000400;
              pfUserInfo_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000800;
              pfYellowUserInfo_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          propes_ = java.util.Collections.unmodifiableList(propes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TankItem> PARSER =
        new com.google.protobuf.AbstractParser<TankItem>() {
      public TankItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TankItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TankItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 tankId = 2;
    public static final int TANKID_FIELD_NUMBER = 2;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模块ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克模块ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // optional uint32 main = 3;
    public static final int MAIN_FIELD_NUMBER = 3;
    private int main_;
    /**
     * <code>optional uint32 main = 3;</code>
     *
     * <pre>
     *是否为AI主机(0:不是 1:是) 2015-11-26
     * </pre>
     */
    public boolean hasMain() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 main = 3;</code>
     *
     * <pre>
     *是否为AI主机(0:不是 1:是) 2015-11-26
     * </pre>
     */
    public int getMain() {
      return main_;
    }

    // required uint32 robot = 4;
    public static final int ROBOT_FIELD_NUMBER = 4;
    private int robot_;
    /**
     * <code>required uint32 robot = 4;</code>
     *
     * <pre>
     *是否为机器人(0:不是 1:是) 2015-11-26
     * </pre>
     */
    public boolean hasRobot() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 robot = 4;</code>
     *
     * <pre>
     *是否为机器人(0:不是 1:是) 2015-11-26
     * </pre>
     */
    public int getRobot() {
      return robot_;
    }

    // required bool elite = 5;
    public static final int ELITE_FIELD_NUMBER = 5;
    private boolean elite_;
    /**
     * <code>required bool elite = 5;</code>
     *
     * <pre>
     *是否为精英坦克
     * </pre>
     */
    public boolean hasElite() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool elite = 5;</code>
     *
     * <pre>
     *是否为精英坦克
     * </pre>
     */
    public boolean getElite() {
      return elite_;
    }

    // required string roleName = 6;
    public static final int ROLENAME_FIELD_NUMBER = 6;
    private java.lang.Object roleName_;
    /**
     * <code>required string roleName = 6;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    public boolean hasRoleName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string roleName = 6;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    public java.lang.String getRoleName() {
      java.lang.Object ref = roleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roleName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roleName = 6;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoleNameBytes() {
      java.lang.Object ref = roleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PROTO_MATCH.Location birthLocation = 7;
    public static final int BIRTHLOCATION_FIELD_NUMBER = 7;
    private com.ourpalm.tank.message.MATCH_MSG.Location birthLocation_;
    /**
     * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
     *
     * <pre>
     *出生位置
     * </pre>
     */
    public boolean hasBirthLocation() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
     *
     * <pre>
     *出生位置
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.Location getBirthLocation() {
      return birthLocation_;
    }

    // required .PROTO_MATCH.TEAM teamType = 8;
    public static final int TEAMTYPE_FIELD_NUMBER = 8;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM teamType_;
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 8;</code>
     *
     * <pre>
     *团队类型
     * </pre>
     */
    public boolean hasTeamType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 8;</code>
     *
     * <pre>
     *团队类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType() {
      return teamType_;
    }

    // repeated .PROTO_MATCH.PropItem propes = 9;
    public static final int PROPES_FIELD_NUMBER = 9;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> propes_;
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> getPropesList() {
      return propes_;
    }
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.PropItemOrBuilder> 
        getPropesOrBuilderList() {
      return propes_;
    }
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public int getPropesCount() {
      return propes_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.PropItem getPropes(int index) {
      return propes_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.PropItemOrBuilder getPropesOrBuilder(
        int index) {
      return propes_.get(index);
    }

    // required .PROTO_MATCH.AiItem aiItem = 10;
    public static final int AIITEM_FIELD_NUMBER = 10;
    private com.ourpalm.tank.message.MATCH_MSG.AiItem aiItem_;
    /**
     * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
     *
     * <pre>
     *AI
     * </pre>
     */
    public boolean hasAiItem() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
     *
     * <pre>
     *AI
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.AiItem getAiItem() {
      return aiItem_;
    }

    // required uint32 atk = 11;
    public static final int ATK_FIELD_NUMBER = 11;
    private int atk_;
    /**
     * <code>required uint32 atk = 11;</code>
     *
     * <pre>
     *坦克攻击力
     * </pre>
     */
    public boolean hasAtk() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required uint32 atk = 11;</code>
     *
     * <pre>
     *坦克攻击力
     * </pre>
     */
    public int getAtk() {
      return atk_;
    }

    // optional string pfUserInfo = 12;
    public static final int PFUSERINFO_FIELD_NUMBER = 12;
    private java.lang.Object pfUserInfo_;
    /**
     * <code>optional string pfUserInfo = 12;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public boolean hasPfUserInfo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string pfUserInfo = 12;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public java.lang.String getPfUserInfo() {
      java.lang.Object ref = pfUserInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pfUserInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pfUserInfo = 12;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPfUserInfoBytes() {
      java.lang.Object ref = pfUserInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pfUserInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string pfYellowUserInfo = 13;
    public static final int PFYELLOWUSERINFO_FIELD_NUMBER = 13;
    private java.lang.Object pfYellowUserInfo_;
    /**
     * <code>optional string pfYellowUserInfo = 13;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public boolean hasPfYellowUserInfo() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string pfYellowUserInfo = 13;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public java.lang.String getPfYellowUserInfo() {
      java.lang.Object ref = pfYellowUserInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pfYellowUserInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pfYellowUserInfo = 13;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPfYellowUserInfoBytes() {
      java.lang.Object ref = pfYellowUserInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pfYellowUserInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = 0;
      tankId_ = 0;
      main_ = 0;
      robot_ = 0;
      elite_ = false;
      roleName_ = "";
      birthLocation_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
      teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
      propes_ = java.util.Collections.emptyList();
      aiItem_ = com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();
      atk_ = 0;
      pfUserInfo_ = "";
      pfYellowUserInfo_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRobot()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasElite()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBirthLocation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeamType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAiItem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAtk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBirthLocation().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPropesCount(); i++) {
        if (!getPropes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getAiItem().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, main_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, robot_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, elite_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getRoleNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, birthLocation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, teamType_.getNumber());
      }
      for (int i = 0; i < propes_.size(); i++) {
        output.writeMessage(9, propes_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10, aiItem_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(11, atk_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getPfUserInfoBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(13, getPfYellowUserInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, main_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, robot_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, elite_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getRoleNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, birthLocation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, teamType_.getNumber());
      }
      for (int i = 0; i < propes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, propes_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, aiItem_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, atk_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getPfUserInfoBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getPfYellowUserInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.TankItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.TankItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.TankItem, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.TankItemOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.TankItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        main_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        robot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        elite_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        roleName_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        birthLocation_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000040);
        teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
        bitField0_ = (bitField0_ & ~0x00000080);
        propes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        aiItem_ = com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000200);
        atk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        pfUserInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        pfYellowUserInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.TankItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.TankItem build() {
        com.ourpalm.tank.message.MATCH_MSG.TankItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.TankItem buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.TankItem result = new com.ourpalm.tank.message.MATCH_MSG.TankItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.main_ = main_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.robot_ = robot_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.elite_ = elite_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.roleName_ = roleName_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.birthLocation_ = birthLocation_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.teamType_ = teamType_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          propes_ = java.util.Collections.unmodifiableList(propes_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.propes_ = propes_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.aiItem_ = aiItem_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.atk_ = atk_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pfUserInfo_ = pfUserInfo_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.pfYellowUserInfo_ = pfYellowUserInfo_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.TankItem other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasMain()) {
          setMain(other.getMain());
        }
        if (other.hasRobot()) {
          setRobot(other.getRobot());
        }
        if (other.hasElite()) {
          setElite(other.getElite());
        }
        if (other.hasRoleName()) {
          bitField0_ |= 0x00000020;
          roleName_ = other.roleName_;
          
        }
        if (other.hasBirthLocation()) {
          mergeBirthLocation(other.getBirthLocation());
        }
        if (other.hasTeamType()) {
          setTeamType(other.getTeamType());
        }
        if (!other.propes_.isEmpty()) {
          if (propes_.isEmpty()) {
            propes_ = other.propes_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensurePropesIsMutable();
            propes_.addAll(other.propes_);
          }
          
        }
        if (other.hasAiItem()) {
          mergeAiItem(other.getAiItem());
        }
        if (other.hasAtk()) {
          setAtk(other.getAtk());
        }
        if (other.hasPfUserInfo()) {
          bitField0_ |= 0x00000800;
          pfUserInfo_ = other.pfUserInfo_;
          
        }
        if (other.hasPfYellowUserInfo()) {
          bitField0_ |= 0x00001000;
          pfYellowUserInfo_ = other.pfYellowUserInfo_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasRobot()) {
          
          return false;
        }
        if (!hasElite()) {
          
          return false;
        }
        if (!hasRoleName()) {
          
          return false;
        }
        if (!hasBirthLocation()) {
          
          return false;
        }
        if (!hasTeamType()) {
          
          return false;
        }
        if (!hasAiItem()) {
          
          return false;
        }
        if (!hasAtk()) {
          
          return false;
        }
        if (!getBirthLocation().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getPropesCount(); i++) {
          if (!getPropes(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getAiItem().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.TankItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.TankItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 tankId = 2;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模块ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模块ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模块ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000002;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克模块ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        
        return this;
      }

      // optional uint32 main = 3;
      private int main_ ;
      /**
       * <code>optional uint32 main = 3;</code>
       *
       * <pre>
       *是否为AI主机(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public boolean hasMain() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 main = 3;</code>
       *
       * <pre>
       *是否为AI主机(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public int getMain() {
        return main_;
      }
      /**
       * <code>optional uint32 main = 3;</code>
       *
       * <pre>
       *是否为AI主机(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public Builder setMain(int value) {
        bitField0_ |= 0x00000004;
        main_ = value;
        
        return this;
      }
      /**
       * <code>optional uint32 main = 3;</code>
       *
       * <pre>
       *是否为AI主机(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public Builder clearMain() {
        bitField0_ = (bitField0_ & ~0x00000004);
        main_ = 0;
        
        return this;
      }

      // required uint32 robot = 4;
      private int robot_ ;
      /**
       * <code>required uint32 robot = 4;</code>
       *
       * <pre>
       *是否为机器人(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public boolean hasRobot() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 robot = 4;</code>
       *
       * <pre>
       *是否为机器人(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public int getRobot() {
        return robot_;
      }
      /**
       * <code>required uint32 robot = 4;</code>
       *
       * <pre>
       *是否为机器人(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public Builder setRobot(int value) {
        bitField0_ |= 0x00000008;
        robot_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 robot = 4;</code>
       *
       * <pre>
       *是否为机器人(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public Builder clearRobot() {
        bitField0_ = (bitField0_ & ~0x00000008);
        robot_ = 0;
        
        return this;
      }

      // required bool elite = 5;
      private boolean elite_ ;
      /**
       * <code>required bool elite = 5;</code>
       *
       * <pre>
       *是否为精英坦克
       * </pre>
       */
      public boolean hasElite() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool elite = 5;</code>
       *
       * <pre>
       *是否为精英坦克
       * </pre>
       */
      public boolean getElite() {
        return elite_;
      }
      /**
       * <code>required bool elite = 5;</code>
       *
       * <pre>
       *是否为精英坦克
       * </pre>
       */
      public Builder setElite(boolean value) {
        bitField0_ |= 0x00000010;
        elite_ = value;
        
        return this;
      }
      /**
       * <code>required bool elite = 5;</code>
       *
       * <pre>
       *是否为精英坦克
       * </pre>
       */
      public Builder clearElite() {
        bitField0_ = (bitField0_ & ~0x00000010);
        elite_ = false;
        
        return this;
      }

      // required string roleName = 6;
      private java.lang.Object roleName_ = "";
      /**
       * <code>required string roleName = 6;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public boolean hasRoleName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string roleName = 6;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public java.lang.String getRoleName() {
        java.lang.Object ref = roleName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roleName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roleName = 6;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoleNameBytes() {
        java.lang.Object ref = roleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roleName = 6;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public Builder setRoleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        roleName_ = value;
        
        return this;
      }
      /**
       * <code>required string roleName = 6;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public Builder clearRoleName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        roleName_ = getDefaultInstance().getRoleName();
        
        return this;
      }
      /**
       * <code>required string roleName = 6;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public Builder setRoleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        roleName_ = value;
        
        return this;
      }

      // required .PROTO_MATCH.Location birthLocation = 7;
      private com.ourpalm.tank.message.MATCH_MSG.Location birthLocation_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public boolean hasBirthLocation() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.Location getBirthLocation() {
        return birthLocation_;
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public Builder setBirthLocation(com.ourpalm.tank.message.MATCH_MSG.Location value) {
        if (value == null) {
          throw new NullPointerException();
        }
        birthLocation_ = value;

        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public Builder setBirthLocation(
          com.ourpalm.tank.message.MATCH_MSG.Location.Builder builderForValue) {
        birthLocation_ = builderForValue.build();

        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public Builder mergeBirthLocation(com.ourpalm.tank.message.MATCH_MSG.Location value) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            birthLocation_ != com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance()) {
          birthLocation_ =
            com.ourpalm.tank.message.MATCH_MSG.Location.newBuilder(birthLocation_).mergeFrom(value).buildPartial();
        } else {
          birthLocation_ = value;
        }

        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 7;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public Builder clearBirthLocation() {
        birthLocation_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      // required .PROTO_MATCH.TEAM teamType = 8;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 8;</code>
       *
       * <pre>
       *团队类型
       * </pre>
       */
      public boolean hasTeamType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 8;</code>
       *
       * <pre>
       *团队类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType() {
        return teamType_;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 8;</code>
       *
       * <pre>
       *团队类型
       * </pre>
       */
      public Builder setTeamType(com.ourpalm.tank.message.MATCH_MSG.TEAM value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        teamType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 8;</code>
       *
       * <pre>
       *团队类型
       * </pre>
       */
      public Builder clearTeamType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
        
        return this;
      }

      // repeated .PROTO_MATCH.PropItem propes = 9;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> propes_ =
        java.util.Collections.emptyList();
      private void ensurePropesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          propes_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.PropItem>(propes_);
          bitField0_ |= 0x00000100;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> getPropesList() {
        return java.util.Collections.unmodifiableList(propes_);
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public int getPropesCount() {
        return propes_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.PropItem getPropes(int index) {
        return propes_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder setPropes(
          int index, com.ourpalm.tank.message.MATCH_MSG.PropItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropesIsMutable();
        propes_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder setPropes(
          int index, com.ourpalm.tank.message.MATCH_MSG.PropItem.Builder builderForValue) {
        ensurePropesIsMutable();
        propes_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addPropes(com.ourpalm.tank.message.MATCH_MSG.PropItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropesIsMutable();
        propes_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addPropes(
          int index, com.ourpalm.tank.message.MATCH_MSG.PropItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropesIsMutable();
        propes_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addPropes(
          com.ourpalm.tank.message.MATCH_MSG.PropItem.Builder builderForValue) {
        ensurePropesIsMutable();
        propes_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addPropes(
          int index, com.ourpalm.tank.message.MATCH_MSG.PropItem.Builder builderForValue) {
        ensurePropesIsMutable();
        propes_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addAllPropes(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.PropItem> values) {
        ensurePropesIsMutable();
        super.addAll(values, propes_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder clearPropes() {
        propes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 9;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder removePropes(int index) {
        ensurePropesIsMutable();
        propes_.remove(index);

        return this;
      }

      // required .PROTO_MATCH.AiItem aiItem = 10;
      private com.ourpalm.tank.message.MATCH_MSG.AiItem aiItem_ = com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public boolean hasAiItem() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.AiItem getAiItem() {
        return aiItem_;
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public Builder setAiItem(com.ourpalm.tank.message.MATCH_MSG.AiItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        aiItem_ = value;

        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public Builder setAiItem(
          com.ourpalm.tank.message.MATCH_MSG.AiItem.Builder builderForValue) {
        aiItem_ = builderForValue.build();

        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public Builder mergeAiItem(com.ourpalm.tank.message.MATCH_MSG.AiItem value) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            aiItem_ != com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance()) {
          aiItem_ =
            com.ourpalm.tank.message.MATCH_MSG.AiItem.newBuilder(aiItem_).mergeFrom(value).buildPartial();
        } else {
          aiItem_ = value;
        }

        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 10;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public Builder clearAiItem() {
        aiItem_ = com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      // required uint32 atk = 11;
      private int atk_ ;
      /**
       * <code>required uint32 atk = 11;</code>
       *
       * <pre>
       *坦克攻击力
       * </pre>
       */
      public boolean hasAtk() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required uint32 atk = 11;</code>
       *
       * <pre>
       *坦克攻击力
       * </pre>
       */
      public int getAtk() {
        return atk_;
      }
      /**
       * <code>required uint32 atk = 11;</code>
       *
       * <pre>
       *坦克攻击力
       * </pre>
       */
      public Builder setAtk(int value) {
        bitField0_ |= 0x00000400;
        atk_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 atk = 11;</code>
       *
       * <pre>
       *坦克攻击力
       * </pre>
       */
      public Builder clearAtk() {
        bitField0_ = (bitField0_ & ~0x00000400);
        atk_ = 0;
        
        return this;
      }

      // optional string pfUserInfo = 12;
      private java.lang.Object pfUserInfo_ = "";
      /**
       * <code>optional string pfUserInfo = 12;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public boolean hasPfUserInfo() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string pfUserInfo = 12;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public java.lang.String getPfUserInfo() {
        java.lang.Object ref = pfUserInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pfUserInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pfUserInfo = 12;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPfUserInfoBytes() {
        java.lang.Object ref = pfUserInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pfUserInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pfUserInfo = 12;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder setPfUserInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        pfUserInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string pfUserInfo = 12;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder clearPfUserInfo() {
        bitField0_ = (bitField0_ & ~0x00000800);
        pfUserInfo_ = getDefaultInstance().getPfUserInfo();
        
        return this;
      }
      /**
       * <code>optional string pfUserInfo = 12;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder setPfUserInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        pfUserInfo_ = value;
        
        return this;
      }

      // optional string pfYellowUserInfo = 13;
      private java.lang.Object pfYellowUserInfo_ = "";
      /**
       * <code>optional string pfYellowUserInfo = 13;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public boolean hasPfYellowUserInfo() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string pfYellowUserInfo = 13;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public java.lang.String getPfYellowUserInfo() {
        java.lang.Object ref = pfYellowUserInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pfYellowUserInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pfYellowUserInfo = 13;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPfYellowUserInfoBytes() {
        java.lang.Object ref = pfYellowUserInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pfYellowUserInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pfYellowUserInfo = 13;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder setPfYellowUserInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        pfYellowUserInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string pfYellowUserInfo = 13;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder clearPfYellowUserInfo() {
        bitField0_ = (bitField0_ & ~0x00001000);
        pfYellowUserInfo_ = getDefaultInstance().getPfYellowUserInfo();
        
        return this;
      }
      /**
       * <code>optional string pfYellowUserInfo = 13;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder setPfYellowUserInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        pfYellowUserInfo_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.TankItem)
    }

    static {
      defaultInstance = new TankItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.TankItem)
  }

  public interface LocationOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required float dir = 1;
    /**
     * <code>required float dir = 1;</code>
     *
     * <pre>
     *出生角度
     * </pre>
     */
    boolean hasDir();
    /**
     * <code>required float dir = 1;</code>
     *
     * <pre>
     *出生角度
     * </pre>
     */
    float getDir();

    // required float x = 2;
    /**
     * <code>required float x = 2;</code>
     */
    boolean hasX();
    /**
     * <code>required float x = 2;</code>
     */
    float getX();

    // required float y = 3;
    /**
     * <code>required float y = 3;</code>
     */
    boolean hasY();
    /**
     * <code>required float y = 3;</code>
     */
    float getY();

    // required float z = 4;
    /**
     * <code>required float z = 4;</code>
     */
    boolean hasZ();
    /**
     * <code>required float z = 4;</code>
     */
    float getZ();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.Location}
   *
   * <pre>
   *位置
   * </pre>
   */
  public static final class Location extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationOrBuilder {
    // Use Location.newBuilder() to construct.
    private Location(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Location(boolean noInit) {}

    private static final Location defaultInstance;
    public static Location getDefaultInstance() {
      return defaultInstance;
    }

    public Location getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Location(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              dir_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              x_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              y_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              z_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Location> PARSER =
        new com.google.protobuf.AbstractParser<Location>() {
      public Location parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Location(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Location> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required float dir = 1;
    public static final int DIR_FIELD_NUMBER = 1;
    private float dir_;
    /**
     * <code>required float dir = 1;</code>
     *
     * <pre>
     *出生角度
     * </pre>
     */
    public boolean hasDir() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float dir = 1;</code>
     *
     * <pre>
     *出生角度
     * </pre>
     */
    public float getDir() {
      return dir_;
    }

    // required float x = 2;
    public static final int X_FIELD_NUMBER = 2;
    private float x_;
    /**
     * <code>required float x = 2;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float x = 2;</code>
     */
    public float getX() {
      return x_;
    }

    // required float y = 3;
    public static final int Y_FIELD_NUMBER = 3;
    private float y_;
    /**
     * <code>required float y = 3;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float y = 3;</code>
     */
    public float getY() {
      return y_;
    }

    // required float z = 4;
    public static final int Z_FIELD_NUMBER = 4;
    private float z_;
    /**
     * <code>required float z = 4;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float z = 4;</code>
     */
    public float getZ() {
      return z_;
    }

    private void initFields() {
      dir_ = 0F;
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDir()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, dir_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, y_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, z_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, dir_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, y_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, z_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.Location parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.Location parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.Location prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.Location}
     *
     * <pre>
     *位置
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.Location, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.LocationOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.Location.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dir_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.Location getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.Location build() {
        com.ourpalm.tank.message.MATCH_MSG.Location result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.Location buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.Location result = new com.ourpalm.tank.message.MATCH_MSG.Location(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dir_ = dir_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.z_ = z_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.Location other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance()) return this;
        if (other.hasDir()) {
          setDir(other.getDir());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDir()) {
          
          return false;
        }
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasZ()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.Location parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.Location) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required float dir = 1;
      private float dir_ ;
      /**
       * <code>required float dir = 1;</code>
       *
       * <pre>
       *出生角度
       * </pre>
       */
      public boolean hasDir() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float dir = 1;</code>
       *
       * <pre>
       *出生角度
       * </pre>
       */
      public float getDir() {
        return dir_;
      }
      /**
       * <code>required float dir = 1;</code>
       *
       * <pre>
       *出生角度
       * </pre>
       */
      public Builder setDir(float value) {
        bitField0_ |= 0x00000001;
        dir_ = value;
        
        return this;
      }
      /**
       * <code>required float dir = 1;</code>
       *
       * <pre>
       *出生角度
       * </pre>
       */
      public Builder clearDir() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dir_ = 0F;
        
        return this;
      }

      // required float x = 2;
      private float x_ ;
      /**
       * <code>required float x = 2;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float x = 2;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>required float x = 2;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000002;
        x_ = value;
        
        return this;
      }
      /**
       * <code>required float x = 2;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0F;
        
        return this;
      }

      // required float y = 3;
      private float y_ ;
      /**
       * <code>required float y = 3;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float y = 3;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>required float y = 3;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000004;
        y_ = value;
        
        return this;
      }
      /**
       * <code>required float y = 3;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0F;
        
        return this;
      }

      // required float z = 4;
      private float z_ ;
      /**
       * <code>required float z = 4;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float z = 4;</code>
       */
      public float getZ() {
        return z_;
      }
      /**
       * <code>required float z = 4;</code>
       */
      public Builder setZ(float value) {
        bitField0_ |= 0x00000008;
        z_ = value;
        
        return this;
      }
      /**
       * <code>required float z = 4;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000008);
        z_ = 0F;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.Location)
    }

    static {
      defaultInstance = new Location(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.Location)
  }

  public interface STC_BEGIN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 readyTime = 1;
    /**
     * <code>required uint32 readyTime = 1;</code>
     *
     * <pre>
     *准备倒计时(单位:秒)
     * </pre>
     */
    boolean hasReadyTime();
    /**
     * <code>required uint32 readyTime = 1;</code>
     *
     * <pre>
     *准备倒计时(单位:秒)
     * </pre>
     */
    int getReadyTime();

    // required uint32 overTime = 2;
    /**
     * <code>required uint32 overTime = 2;</code>
     *
     * <pre>
     *比赛时长(单位:秒)
     * </pre>
     */
    boolean hasOverTime();
    /**
     * <code>required uint32 overTime = 2;</code>
     *
     * <pre>
     *比赛时长(单位:秒)
     * </pre>
     */
    int getOverTime();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_BEGIN_MSG}
   *
   * <pre>
   *比赛开始
   * </pre>
   */
  public static final class STC_BEGIN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_BEGIN_MSGOrBuilder {
    // Use STC_BEGIN_MSG.newBuilder() to construct.
    private STC_BEGIN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_BEGIN_MSG(boolean noInit) {}

    private static final STC_BEGIN_MSG defaultInstance;
    public static STC_BEGIN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_BEGIN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_BEGIN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              readyTime_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              overTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_BEGIN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_BEGIN_MSG>() {
      public STC_BEGIN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_BEGIN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_BEGIN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 readyTime = 1;
    public static final int READYTIME_FIELD_NUMBER = 1;
    private int readyTime_;
    /**
     * <code>required uint32 readyTime = 1;</code>
     *
     * <pre>
     *准备倒计时(单位:秒)
     * </pre>
     */
    public boolean hasReadyTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 readyTime = 1;</code>
     *
     * <pre>
     *准备倒计时(单位:秒)
     * </pre>
     */
    public int getReadyTime() {
      return readyTime_;
    }

    // required uint32 overTime = 2;
    public static final int OVERTIME_FIELD_NUMBER = 2;
    private int overTime_;
    /**
     * <code>required uint32 overTime = 2;</code>
     *
     * <pre>
     *比赛时长(单位:秒)
     * </pre>
     */
    public boolean hasOverTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 overTime = 2;</code>
     *
     * <pre>
     *比赛时长(单位:秒)
     * </pre>
     */
    public int getOverTime() {
      return overTime_;
    }

    private void initFields() {
      readyTime_ = 0;
      overTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasReadyTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOverTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, readyTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, overTime_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, readyTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, overTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_BEGIN_MSG}
     *
     * <pre>
     *比赛开始
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        readyTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        overTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.readyTime_ = readyTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.overTime_ = overTime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG.getDefaultInstance()) return this;
        if (other.hasReadyTime()) {
          setReadyTime(other.getReadyTime());
        }
        if (other.hasOverTime()) {
          setOverTime(other.getOverTime());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReadyTime()) {
          
          return false;
        }
        if (!hasOverTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_BEGIN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 readyTime = 1;
      private int readyTime_ ;
      /**
       * <code>required uint32 readyTime = 1;</code>
       *
       * <pre>
       *准备倒计时(单位:秒)
       * </pre>
       */
      public boolean hasReadyTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 readyTime = 1;</code>
       *
       * <pre>
       *准备倒计时(单位:秒)
       * </pre>
       */
      public int getReadyTime() {
        return readyTime_;
      }
      /**
       * <code>required uint32 readyTime = 1;</code>
       *
       * <pre>
       *准备倒计时(单位:秒)
       * </pre>
       */
      public Builder setReadyTime(int value) {
        bitField0_ |= 0x00000001;
        readyTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 readyTime = 1;</code>
       *
       * <pre>
       *准备倒计时(单位:秒)
       * </pre>
       */
      public Builder clearReadyTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        readyTime_ = 0;
        
        return this;
      }

      // required uint32 overTime = 2;
      private int overTime_ ;
      /**
       * <code>required uint32 overTime = 2;</code>
       *
       * <pre>
       *比赛时长(单位:秒)
       * </pre>
       */
      public boolean hasOverTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 overTime = 2;</code>
       *
       * <pre>
       *比赛时长(单位:秒)
       * </pre>
       */
      public int getOverTime() {
        return overTime_;
      }
      /**
       * <code>required uint32 overTime = 2;</code>
       *
       * <pre>
       *比赛时长(单位:秒)
       * </pre>
       */
      public Builder setOverTime(int value) {
        bitField0_ |= 0x00000002;
        overTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 overTime = 2;</code>
       *
       * <pre>
       *比赛时长(单位:秒)
       * </pre>
       */
      public Builder clearOverTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        overTime_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_BEGIN_MSG)
    }

    static {
      defaultInstance = new STC_BEGIN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_BEGIN_MSG)
  }

  public interface CTS_ENTER_CAMPAIGN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役id
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_ENTER_CAMPAIGN_MSG}
   *
   * <pre>
   *请求进入战役
   * </pre>
   */
  public static final class CTS_ENTER_CAMPAIGN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_ENTER_CAMPAIGN_MSGOrBuilder {
    // Use CTS_ENTER_CAMPAIGN_MSG.newBuilder() to construct.
    private CTS_ENTER_CAMPAIGN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_ENTER_CAMPAIGN_MSG(boolean noInit) {}

    private static final CTS_ENTER_CAMPAIGN_MSG defaultInstance;
    public static CTS_ENTER_CAMPAIGN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_ENTER_CAMPAIGN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_ENTER_CAMPAIGN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_ENTER_CAMPAIGN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_ENTER_CAMPAIGN_MSG>() {
      public CTS_ENTER_CAMPAIGN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_ENTER_CAMPAIGN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_ENTER_CAMPAIGN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *战役id
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_ENTER_CAMPAIGN_MSG}
     *
     * <pre>
     *请求进入战役
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_ENTER_CAMPAIGN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役id
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役id
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *战役id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_ENTER_CAMPAIGN_MSG)
    }

    static {
      defaultInstance = new CTS_ENTER_CAMPAIGN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_ENTER_CAMPAIGN_MSG)
  }

  public interface STC_ENTER_CAMPAIGN_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 result = 1;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：进入成功，0：进入失败提示
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：进入成功，0：进入失败提示
     * </pre>
     */
    int getResult();

    // optional string info = 2;
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    // optional string mapId = 3;
    /**
     * <code>optional string mapId = 3;</code>
     *
     * <pre>
     *地图id
     * </pre>
     */
    boolean hasMapId();
    /**
     * <code>optional string mapId = 3;</code>
     *
     * <pre>
     *地图id
     * </pre>
     */
    java.lang.String getMapId();
    /**
     * <code>optional string mapId = 3;</code>
     *
     * <pre>
     *地图id
     * </pre>
     */
    com.google.protobuf.ByteString
        getMapIdBytes();

    // optional .PROTO_MATCH.TankItem tankItem = 4;
    /**
     * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    boolean hasTankItem();
    /**
     * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem();

    // repeated .PROTO_MATCH.TankItem otherTanks = 5;
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> 
        getOtherTanksList();
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index);
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    int getOtherTanksCount();

    // repeated .PROTO_MATCH.BuildItem buildItem = 6;
    /**
     * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
     *
     * <pre>
     *建筑列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.BuildItem> 
        getBuildItemList();
    /**
     * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
     *
     * <pre>
     *建筑列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.BuildItem getBuildItem(int index);
    /**
     * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
     *
     * <pre>
     *建筑列表
     * </pre>
     */
    int getBuildItemCount();

    // repeated .PROTO_MATCH.GoodsItem goodsItem = 7;
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> 
        getGoodsItemList();
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.GoodsItem getGoodsItem(int index);
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    int getGoodsItemCount();

    // repeated uint32 skillIds = 8;
    /**
     * <code>repeated uint32 skillIds = 8;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getSkillIdsList();
    /**
     * <code>repeated uint32 skillIds = 8;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    int getSkillIdsCount();
    /**
     * <code>repeated uint32 skillIds = 8;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    int getSkillIds(int index);
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_ENTER_CAMPAIGN_MSG}
   *
   * <pre>
   *进入战役返回
   * </pre>
   */
  public static final class STC_ENTER_CAMPAIGN_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_ENTER_CAMPAIGN_MSGOrBuilder {
    // Use STC_ENTER_CAMPAIGN_MSG.newBuilder() to construct.
    private STC_ENTER_CAMPAIGN_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_ENTER_CAMPAIGN_MSG(boolean noInit) {}

    private static final STC_ENTER_CAMPAIGN_MSG defaultInstance;
    public static STC_ENTER_CAMPAIGN_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_ENTER_CAMPAIGN_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_ENTER_CAMPAIGN_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              mapId_ = input.readBytes();
              break;
            }
            case 34: {
              com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tankItem_.toBuilder();
              }
              tankItem_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tankItem_);
                tankItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                otherTanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankItem>();
                mutable_bitField0_ |= 0x00000010;
              }
              otherTanks_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankItem.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                buildItem_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.BuildItem>();
                mutable_bitField0_ |= 0x00000020;
              }
              buildItem_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.BuildItem.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                goodsItem_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.GoodsItem>();
                mutable_bitField0_ |= 0x00000040;
              }
              goodsItem_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.GoodsItem.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                skillIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              skillIds_.add(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                skillIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                skillIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          otherTanks_ = java.util.Collections.unmodifiableList(otherTanks_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          buildItem_ = java.util.Collections.unmodifiableList(buildItem_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          goodsItem_ = java.util.Collections.unmodifiableList(goodsItem_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          skillIds_ = java.util.Collections.unmodifiableList(skillIds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_ENTER_CAMPAIGN_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_ENTER_CAMPAIGN_MSG>() {
      public STC_ENTER_CAMPAIGN_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_ENTER_CAMPAIGN_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_ENTER_CAMPAIGN_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：进入成功，0：进入失败提示
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 result = 1;</code>
     *
     * <pre>
     * 1：进入成功，0：进入失败提示
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // optional string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string info = 2;</code>
     *
     * <pre>
     *错误提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string mapId = 3;
    public static final int MAPID_FIELD_NUMBER = 3;
    private java.lang.Object mapId_;
    /**
     * <code>optional string mapId = 3;</code>
     *
     * <pre>
     *地图id
     * </pre>
     */
    public boolean hasMapId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string mapId = 3;</code>
     *
     * <pre>
     *地图id
     * </pre>
     */
    public java.lang.String getMapId() {
      java.lang.Object ref = mapId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mapId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mapId = 3;</code>
     *
     * <pre>
     *地图id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMapIdBytes() {
      java.lang.Object ref = mapId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .PROTO_MATCH.TankItem tankItem = 4;
    public static final int TANKITEM_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.MATCH_MSG.TankItem tankItem_;
    /**
     * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    public boolean hasTankItem() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem() {
      return tankItem_;
    }

    // repeated .PROTO_MATCH.TankItem otherTanks = 5;
    public static final int OTHERTANKS_FIELD_NUMBER = 5;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> otherTanks_;
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> getOtherTanksList() {
      return otherTanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.TankItemOrBuilder> 
        getOtherTanksOrBuilderList() {
      return otherTanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public int getOtherTanksCount() {
      return otherTanks_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index) {
      return otherTanks_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
     *
     * <pre>
     *其他坦克 
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItemOrBuilder getOtherTanksOrBuilder(
        int index) {
      return otherTanks_.get(index);
    }

    // repeated .PROTO_MATCH.BuildItem buildItem = 6;
    public static final int BUILDITEM_FIELD_NUMBER = 6;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.BuildItem> buildItem_;
    /**
     * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
     *
     * <pre>
     *建筑列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.BuildItem> getBuildItemList() {
      return buildItem_;
    }
    /**
     * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
     *
     * <pre>
     *建筑列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.BuildItemOrBuilder> 
        getBuildItemOrBuilderList() {
      return buildItem_;
    }
    /**
     * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
     *
     * <pre>
     *建筑列表
     * </pre>
     */
    public int getBuildItemCount() {
      return buildItem_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
     *
     * <pre>
     *建筑列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.BuildItem getBuildItem(int index) {
      return buildItem_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
     *
     * <pre>
     *建筑列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.BuildItemOrBuilder getBuildItemOrBuilder(
        int index) {
      return buildItem_.get(index);
    }

    // repeated .PROTO_MATCH.GoodsItem goodsItem = 7;
    public static final int GOODSITEM_FIELD_NUMBER = 7;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> goodsItem_;
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> getGoodsItemList() {
      return goodsItem_;
    }
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.GoodsItemOrBuilder> 
        getGoodsItemOrBuilderList() {
      return goodsItem_;
    }
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public int getGoodsItemCount() {
      return goodsItem_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.GoodsItem getGoodsItem(int index) {
      return goodsItem_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
     *
     * <pre>
     *道具列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.GoodsItemOrBuilder getGoodsItemOrBuilder(
        int index) {
      return goodsItem_.get(index);
    }

    // repeated uint32 skillIds = 8;
    public static final int SKILLIDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> skillIds_;
    /**
     * <code>repeated uint32 skillIds = 8;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSkillIdsList() {
      return skillIds_;
    }
    /**
     * <code>repeated uint32 skillIds = 8;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    public int getSkillIdsCount() {
      return skillIds_.size();
    }
    /**
     * <code>repeated uint32 skillIds = 8;</code>
     *
     * <pre>
     *技能id列表
     * </pre>
     */
    public int getSkillIds(int index) {
      return skillIds_.get(index);
    }

    private void initFields() {
      result_ = 0;
      info_ = "";
      mapId_ = "";
      tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
      otherTanks_ = java.util.Collections.emptyList();
      buildItem_ = java.util.Collections.emptyList();
      goodsItem_ = java.util.Collections.emptyList();
      skillIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTankItem()) {
        if (!getTankItem().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOtherTanksCount(); i++) {
        if (!getOtherTanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBuildItemCount(); i++) {
        if (!getBuildItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGoodsItemCount(); i++) {
        if (!getGoodsItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMapIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, tankItem_);
      }
      for (int i = 0; i < otherTanks_.size(); i++) {
        output.writeMessage(5, otherTanks_.get(i));
      }
      for (int i = 0; i < buildItem_.size(); i++) {
        output.writeMessage(6, buildItem_.get(i));
      }
      for (int i = 0; i < goodsItem_.size(); i++) {
        output.writeMessage(7, goodsItem_.get(i));
      }
      for (int i = 0; i < skillIds_.size(); i++) {
        output.writeUInt32(8, skillIds_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMapIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, tankItem_);
      }
      for (int i = 0; i < otherTanks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, otherTanks_.get(i));
      }
      for (int i = 0; i < buildItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, buildItem_.get(i));
      }
      for (int i = 0; i < goodsItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, goodsItem_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < skillIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(skillIds_.get(i));
        }
        size += dataSize;
        size += 1 * getSkillIdsList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_ENTER_CAMPAIGN_MSG}
     *
     * <pre>
     *进入战役返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        mapId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        otherTanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        buildItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        goodsItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        skillIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mapId_ = mapId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tankItem_ = tankItem_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          otherTanks_ = java.util.Collections.unmodifiableList(otherTanks_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.otherTanks_ = otherTanks_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          buildItem_ = java.util.Collections.unmodifiableList(buildItem_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.buildItem_ = buildItem_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          goodsItem_ = java.util.Collections.unmodifiableList(goodsItem_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.goodsItem_ = goodsItem_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          skillIds_ = java.util.Collections.unmodifiableList(skillIds_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.skillIds_ = skillIds_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        if (other.hasMapId()) {
          bitField0_ |= 0x00000004;
          mapId_ = other.mapId_;
          
        }
        if (other.hasTankItem()) {
          mergeTankItem(other.getTankItem());
        }
        if (!other.otherTanks_.isEmpty()) {
          if (otherTanks_.isEmpty()) {
            otherTanks_ = other.otherTanks_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureOtherTanksIsMutable();
            otherTanks_.addAll(other.otherTanks_);
          }
          
        }
        if (!other.buildItem_.isEmpty()) {
          if (buildItem_.isEmpty()) {
            buildItem_ = other.buildItem_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBuildItemIsMutable();
            buildItem_.addAll(other.buildItem_);
          }
          
        }
        if (!other.goodsItem_.isEmpty()) {
          if (goodsItem_.isEmpty()) {
            goodsItem_ = other.goodsItem_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureGoodsItemIsMutable();
            goodsItem_.addAll(other.goodsItem_);
          }
          
        }
        if (!other.skillIds_.isEmpty()) {
          if (skillIds_.isEmpty()) {
            skillIds_ = other.skillIds_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSkillIdsIsMutable();
            skillIds_.addAll(other.skillIds_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (hasTankItem()) {
          if (!getTankItem().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOtherTanksCount(); i++) {
          if (!getOtherTanks(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBuildItemCount(); i++) {
          if (!getBuildItem(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGoodsItemCount(); i++) {
          if (!getGoodsItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_ENTER_CAMPAIGN_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 result = 1;
      private int result_ ;
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：进入成功，0：进入失败提示
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：进入成功，0：进入失败提示
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：进入成功，0：进入失败提示
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 result = 1;</code>
       *
       * <pre>
       * 1：进入成功，0：进入失败提示
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        
        return this;
      }

      // optional string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>optional string info = 2;</code>
       *
       * <pre>
       *错误提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // optional string mapId = 3;
      private java.lang.Object mapId_ = "";
      /**
       * <code>optional string mapId = 3;</code>
       *
       * <pre>
       *地图id
       * </pre>
       */
      public boolean hasMapId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string mapId = 3;</code>
       *
       * <pre>
       *地图id
       * </pre>
       */
      public java.lang.String getMapId() {
        java.lang.Object ref = mapId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mapId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mapId = 3;</code>
       *
       * <pre>
       *地图id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMapIdBytes() {
        java.lang.Object ref = mapId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mapId = 3;</code>
       *
       * <pre>
       *地图id
       * </pre>
       */
      public Builder setMapId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mapId_ = value;
        
        return this;
      }
      /**
       * <code>optional string mapId = 3;</code>
       *
       * <pre>
       *地图id
       * </pre>
       */
      public Builder clearMapId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mapId_ = getDefaultInstance().getMapId();
        
        return this;
      }
      /**
       * <code>optional string mapId = 3;</code>
       *
       * <pre>
       *地图id
       * </pre>
       */
      public Builder setMapIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mapId_ = value;
        
        return this;
      }

      // optional .PROTO_MATCH.TankItem tankItem = 4;
      private com.ourpalm.tank.message.MATCH_MSG.TankItem tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public boolean hasTankItem() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem() {
        return tankItem_;
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder setTankItem(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        tankItem_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder setTankItem(
          com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        tankItem_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder mergeTankItem(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            tankItem_ != com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance()) {
          tankItem_ =
            com.ourpalm.tank.message.MATCH_MSG.TankItem.newBuilder(tankItem_).mergeFrom(value).buildPartial();
        } else {
          tankItem_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TankItem tankItem = 4;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder clearTankItem() {
        tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // repeated .PROTO_MATCH.TankItem otherTanks = 5;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> otherTanks_ =
        java.util.Collections.emptyList();
      private void ensureOtherTanksIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          otherTanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankItem>(otherTanks_);
          bitField0_ |= 0x00000010;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankItem> getOtherTanksList() {
        return java.util.Collections.unmodifiableList(otherTanks_);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public int getOtherTanksCount() {
        return otherTanks_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankItem getOtherTanks(int index) {
        return otherTanks_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder setOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder setOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherTanksIsMutable();
        otherTanks_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addOtherTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        ensureOtherTanksIsMutable();
        otherTanks_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder addAllOtherTanks(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.TankItem> values) {
        ensureOtherTanksIsMutable();
        super.addAll(values, otherTanks_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder clearOtherTanks() {
        otherTanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankItem otherTanks = 5;</code>
       *
       * <pre>
       *其他坦克 
       * </pre>
       */
      public Builder removeOtherTanks(int index) {
        ensureOtherTanksIsMutable();
        otherTanks_.remove(index);

        return this;
      }

      // repeated .PROTO_MATCH.BuildItem buildItem = 6;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.BuildItem> buildItem_ =
        java.util.Collections.emptyList();
      private void ensureBuildItemIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          buildItem_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.BuildItem>(buildItem_);
          bitField0_ |= 0x00000020;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.BuildItem> getBuildItemList() {
        return java.util.Collections.unmodifiableList(buildItem_);
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public int getBuildItemCount() {
        return buildItem_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.BuildItem getBuildItem(int index) {
        return buildItem_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder setBuildItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.BuildItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuildItemIsMutable();
        buildItem_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder setBuildItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.BuildItem.Builder builderForValue) {
        ensureBuildItemIsMutable();
        buildItem_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder addBuildItem(com.ourpalm.tank.message.MATCH_MSG.BuildItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuildItemIsMutable();
        buildItem_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder addBuildItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.BuildItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuildItemIsMutable();
        buildItem_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder addBuildItem(
          com.ourpalm.tank.message.MATCH_MSG.BuildItem.Builder builderForValue) {
        ensureBuildItemIsMutable();
        buildItem_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder addBuildItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.BuildItem.Builder builderForValue) {
        ensureBuildItemIsMutable();
        buildItem_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder addAllBuildItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.BuildItem> values) {
        ensureBuildItemIsMutable();
        super.addAll(values, buildItem_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder clearBuildItem() {
        buildItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.BuildItem buildItem = 6;</code>
       *
       * <pre>
       *建筑列表
       * </pre>
       */
      public Builder removeBuildItem(int index) {
        ensureBuildItemIsMutable();
        buildItem_.remove(index);

        return this;
      }

      // repeated .PROTO_MATCH.GoodsItem goodsItem = 7;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> goodsItem_ =
        java.util.Collections.emptyList();
      private void ensureGoodsItemIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          goodsItem_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.GoodsItem>(goodsItem_);
          bitField0_ |= 0x00000040;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.GoodsItem> getGoodsItemList() {
        return java.util.Collections.unmodifiableList(goodsItem_);
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public int getGoodsItemCount() {
        return goodsItem_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.GoodsItem getGoodsItem(int index) {
        return goodsItem_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder setGoodsItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.GoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder setGoodsItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.GoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addGoodsItem(com.ourpalm.tank.message.MATCH_MSG.GoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addGoodsItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.GoodsItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGoodsItemIsMutable();
        goodsItem_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addGoodsItem(
          com.ourpalm.tank.message.MATCH_MSG.GoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addGoodsItem(
          int index, com.ourpalm.tank.message.MATCH_MSG.GoodsItem.Builder builderForValue) {
        ensureGoodsItemIsMutable();
        goodsItem_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder addAllGoodsItem(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.GoodsItem> values) {
        ensureGoodsItemIsMutable();
        super.addAll(values, goodsItem_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder clearGoodsItem() {
        goodsItem_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.GoodsItem goodsItem = 7;</code>
       *
       * <pre>
       *道具列表
       * </pre>
       */
      public Builder removeGoodsItem(int index) {
        ensureGoodsItemIsMutable();
        goodsItem_.remove(index);

        return this;
      }

      // repeated uint32 skillIds = 8;
      private java.util.List<java.lang.Integer> skillIds_ = java.util.Collections.emptyList();
      private void ensureSkillIdsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          skillIds_ = new java.util.ArrayList<java.lang.Integer>(skillIds_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated uint32 skillIds = 8;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSkillIdsList() {
        return java.util.Collections.unmodifiableList(skillIds_);
      }
      /**
       * <code>repeated uint32 skillIds = 8;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public int getSkillIdsCount() {
        return skillIds_.size();
      }
      /**
       * <code>repeated uint32 skillIds = 8;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public int getSkillIds(int index) {
        return skillIds_.get(index);
      }
      /**
       * <code>repeated uint32 skillIds = 8;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public Builder setSkillIds(
          int index, int value) {
        ensureSkillIdsIsMutable();
        skillIds_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated uint32 skillIds = 8;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public Builder addSkillIds(int value) {
        ensureSkillIdsIsMutable();
        skillIds_.add(value);
        
        return this;
      }
      /**
       * <code>repeated uint32 skillIds = 8;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public Builder addAllSkillIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSkillIdsIsMutable();
        super.addAll(values, skillIds_);
        
        return this;
      }
      /**
       * <code>repeated uint32 skillIds = 8;</code>
       *
       * <pre>
       *技能id列表
       * </pre>
       */
      public Builder clearSkillIds() {
        skillIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_ENTER_CAMPAIGN_MSG)
    }

    static {
      defaultInstance = new STC_ENTER_CAMPAIGN_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_ENTER_CAMPAIGN_MSG)
  }

  public interface BuildItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *建筑实例ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *建筑实例ID
     * </pre>
     */
    int getId();

    // required uint32 buildId = 2;
    /**
     * <code>required uint32 buildId = 2;</code>
     *
     * <pre>
     *建筑模块ID
     * </pre>
     */
    boolean hasBuildId();
    /**
     * <code>required uint32 buildId = 2;</code>
     *
     * <pre>
     *建筑模块ID
     * </pre>
     */
    int getBuildId();

    // required uint32 robot = 3;
    /**
     * <code>required uint32 robot = 3;</code>
     *
     * <pre>
     *是否为机器人(0:不是 1:是) 2015-11-26
     * </pre>
     */
    boolean hasRobot();
    /**
     * <code>required uint32 robot = 3;</code>
     *
     * <pre>
     *是否为机器人(0:不是 1:是) 2015-11-26
     * </pre>
     */
    int getRobot();

    // required string name = 4;
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required .PROTO_MATCH.Location birthLocation = 5;
    /**
     * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
     *
     * <pre>
     *出生位置
     * </pre>
     */
    boolean hasBirthLocation();
    /**
     * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
     *
     * <pre>
     *出生位置
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.Location getBirthLocation();

    // required .PROTO_MATCH.TEAM teamType = 6;
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 6;</code>
     *
     * <pre>
     *团队类型
     * </pre>
     */
    boolean hasTeamType();
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 6;</code>
     *
     * <pre>
     *团队类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType();

    // repeated .PROTO_MATCH.PropItem propes = 7;
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> 
        getPropesList();
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.PropItem getPropes(int index);
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    int getPropesCount();

    // required .PROTO_MATCH.AiItem aiItem = 8;
    /**
     * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
     *
     * <pre>
     *AI
     * </pre>
     */
    boolean hasAiItem();
    /**
     * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
     *
     * <pre>
     *AI
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.AiItem getAiItem();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.BuildItem}
   *
   * <pre>
   *建筑
   * </pre>
   */
  public static final class BuildItem extends
      com.google.protobuf.GeneratedMessageLite
      implements BuildItemOrBuilder {
    // Use BuildItem.newBuilder() to construct.
    private BuildItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private BuildItem(boolean noInit) {}

    private static final BuildItem defaultInstance;
    public static BuildItem getDefaultInstance() {
      return defaultInstance;
    }

    public BuildItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private BuildItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              buildId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              robot_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              name_ = input.readBytes();
              break;
            }
            case 42: {
              com.ourpalm.tank.message.MATCH_MSG.Location.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = birthLocation_.toBuilder();
              }
              birthLocation_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.Location.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(birthLocation_);
                birthLocation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM value = com.ourpalm.tank.message.MATCH_MSG.TEAM.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000020;
                teamType_ = value;
              }
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                propes_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.PropItem>();
                mutable_bitField0_ |= 0x00000040;
              }
              propes_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.PropItem.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              com.ourpalm.tank.message.MATCH_MSG.AiItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = aiItem_.toBuilder();
              }
              aiItem_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.AiItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(aiItem_);
                aiItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          propes_ = java.util.Collections.unmodifiableList(propes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<BuildItem> PARSER =
        new com.google.protobuf.AbstractParser<BuildItem>() {
      public BuildItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuildItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BuildItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *建筑实例ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *建筑实例ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required uint32 buildId = 2;
    public static final int BUILDID_FIELD_NUMBER = 2;
    private int buildId_;
    /**
     * <code>required uint32 buildId = 2;</code>
     *
     * <pre>
     *建筑模块ID
     * </pre>
     */
    public boolean hasBuildId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 buildId = 2;</code>
     *
     * <pre>
     *建筑模块ID
     * </pre>
     */
    public int getBuildId() {
      return buildId_;
    }

    // required uint32 robot = 3;
    public static final int ROBOT_FIELD_NUMBER = 3;
    private int robot_;
    /**
     * <code>required uint32 robot = 3;</code>
     *
     * <pre>
     *是否为机器人(0:不是 1:是) 2015-11-26
     * </pre>
     */
    public boolean hasRobot() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 robot = 3;</code>
     *
     * <pre>
     *是否为机器人(0:不是 1:是) 2015-11-26
     * </pre>
     */
    public int getRobot() {
      return robot_;
    }

    // required string name = 4;
    public static final int NAME_FIELD_NUMBER = 4;
    private java.lang.Object name_;
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 4;</code>
     *
     * <pre>
     *角色名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PROTO_MATCH.Location birthLocation = 5;
    public static final int BIRTHLOCATION_FIELD_NUMBER = 5;
    private com.ourpalm.tank.message.MATCH_MSG.Location birthLocation_;
    /**
     * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
     *
     * <pre>
     *出生位置
     * </pre>
     */
    public boolean hasBirthLocation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
     *
     * <pre>
     *出生位置
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.Location getBirthLocation() {
      return birthLocation_;
    }

    // required .PROTO_MATCH.TEAM teamType = 6;
    public static final int TEAMTYPE_FIELD_NUMBER = 6;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM teamType_;
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 6;</code>
     *
     * <pre>
     *团队类型
     * </pre>
     */
    public boolean hasTeamType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .PROTO_MATCH.TEAM teamType = 6;</code>
     *
     * <pre>
     *团队类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType() {
      return teamType_;
    }

    // repeated .PROTO_MATCH.PropItem propes = 7;
    public static final int PROPES_FIELD_NUMBER = 7;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> propes_;
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> getPropesList() {
      return propes_;
    }
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.PropItemOrBuilder> 
        getPropesOrBuilderList() {
      return propes_;
    }
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public int getPropesCount() {
      return propes_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.PropItem getPropes(int index) {
      return propes_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
     *
     * <pre>
     *坦克属性
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.PropItemOrBuilder getPropesOrBuilder(
        int index) {
      return propes_.get(index);
    }

    // required .PROTO_MATCH.AiItem aiItem = 8;
    public static final int AIITEM_FIELD_NUMBER = 8;
    private com.ourpalm.tank.message.MATCH_MSG.AiItem aiItem_;
    /**
     * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
     *
     * <pre>
     *AI
     * </pre>
     */
    public boolean hasAiItem() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
     *
     * <pre>
     *AI
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.AiItem getAiItem() {
      return aiItem_;
    }

    private void initFields() {
      id_ = 0;
      buildId_ = 0;
      robot_ = 0;
      name_ = "";
      birthLocation_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
      teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
      propes_ = java.util.Collections.emptyList();
      aiItem_ = com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBuildId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRobot()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBirthLocation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeamType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAiItem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBirthLocation().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPropesCount(); i++) {
        if (!getPropes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getAiItem().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, buildId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, robot_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, birthLocation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, teamType_.getNumber());
      }
      for (int i = 0; i < propes_.size(); i++) {
        output.writeMessage(7, propes_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, aiItem_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, buildId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, robot_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, birthLocation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, teamType_.getNumber());
      }
      for (int i = 0; i < propes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, propes_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, aiItem_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.BuildItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.BuildItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.BuildItem}
     *
     * <pre>
     *建筑
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.BuildItem, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.BuildItemOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.BuildItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        buildId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        robot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        birthLocation_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
        bitField0_ = (bitField0_ & ~0x00000020);
        propes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        aiItem_ = com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.BuildItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.BuildItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.BuildItem build() {
        com.ourpalm.tank.message.MATCH_MSG.BuildItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.BuildItem buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.BuildItem result = new com.ourpalm.tank.message.MATCH_MSG.BuildItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.buildId_ = buildId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.robot_ = robot_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.birthLocation_ = birthLocation_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.teamType_ = teamType_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          propes_ = java.util.Collections.unmodifiableList(propes_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.propes_ = propes_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.aiItem_ = aiItem_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.BuildItem other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.BuildItem.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasBuildId()) {
          setBuildId(other.getBuildId());
        }
        if (other.hasRobot()) {
          setRobot(other.getRobot());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          
        }
        if (other.hasBirthLocation()) {
          mergeBirthLocation(other.getBirthLocation());
        }
        if (other.hasTeamType()) {
          setTeamType(other.getTeamType());
        }
        if (!other.propes_.isEmpty()) {
          if (propes_.isEmpty()) {
            propes_ = other.propes_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePropesIsMutable();
            propes_.addAll(other.propes_);
          }
          
        }
        if (other.hasAiItem()) {
          mergeAiItem(other.getAiItem());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasBuildId()) {
          
          return false;
        }
        if (!hasRobot()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasBirthLocation()) {
          
          return false;
        }
        if (!hasTeamType()) {
          
          return false;
        }
        if (!hasAiItem()) {
          
          return false;
        }
        if (!getBirthLocation().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getPropesCount(); i++) {
          if (!getPropes(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getAiItem().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.BuildItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.BuildItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *建筑实例ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *建筑实例ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *建筑实例ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *建筑实例ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required uint32 buildId = 2;
      private int buildId_ ;
      /**
       * <code>required uint32 buildId = 2;</code>
       *
       * <pre>
       *建筑模块ID
       * </pre>
       */
      public boolean hasBuildId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 buildId = 2;</code>
       *
       * <pre>
       *建筑模块ID
       * </pre>
       */
      public int getBuildId() {
        return buildId_;
      }
      /**
       * <code>required uint32 buildId = 2;</code>
       *
       * <pre>
       *建筑模块ID
       * </pre>
       */
      public Builder setBuildId(int value) {
        bitField0_ |= 0x00000002;
        buildId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 buildId = 2;</code>
       *
       * <pre>
       *建筑模块ID
       * </pre>
       */
      public Builder clearBuildId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        buildId_ = 0;
        
        return this;
      }

      // required uint32 robot = 3;
      private int robot_ ;
      /**
       * <code>required uint32 robot = 3;</code>
       *
       * <pre>
       *是否为机器人(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public boolean hasRobot() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 robot = 3;</code>
       *
       * <pre>
       *是否为机器人(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public int getRobot() {
        return robot_;
      }
      /**
       * <code>required uint32 robot = 3;</code>
       *
       * <pre>
       *是否为机器人(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public Builder setRobot(int value) {
        bitField0_ |= 0x00000004;
        robot_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 robot = 3;</code>
       *
       * <pre>
       *是否为机器人(0:不是 1:是) 2015-11-26
       * </pre>
       */
      public Builder clearRobot() {
        bitField0_ = (bitField0_ & ~0x00000004);
        robot_ = 0;
        
        return this;
      }

      // required string name = 4;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        
        return this;
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       *角色名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        
        return this;
      }

      // required .PROTO_MATCH.Location birthLocation = 5;
      private com.ourpalm.tank.message.MATCH_MSG.Location birthLocation_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public boolean hasBirthLocation() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.Location getBirthLocation() {
        return birthLocation_;
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public Builder setBirthLocation(com.ourpalm.tank.message.MATCH_MSG.Location value) {
        if (value == null) {
          throw new NullPointerException();
        }
        birthLocation_ = value;

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public Builder setBirthLocation(
          com.ourpalm.tank.message.MATCH_MSG.Location.Builder builderForValue) {
        birthLocation_ = builderForValue.build();

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public Builder mergeBirthLocation(com.ourpalm.tank.message.MATCH_MSG.Location value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            birthLocation_ != com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance()) {
          birthLocation_ =
            com.ourpalm.tank.message.MATCH_MSG.Location.newBuilder(birthLocation_).mergeFrom(value).buildPartial();
        } else {
          birthLocation_ = value;
        }

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.Location birthLocation = 5;</code>
       *
       * <pre>
       *出生位置
       * </pre>
       */
      public Builder clearBirthLocation() {
        birthLocation_ = com.ourpalm.tank.message.MATCH_MSG.Location.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      // required .PROTO_MATCH.TEAM teamType = 6;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 6;</code>
       *
       * <pre>
       *团队类型
       * </pre>
       */
      public boolean hasTeamType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 6;</code>
       *
       * <pre>
       *团队类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM getTeamType() {
        return teamType_;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 6;</code>
       *
       * <pre>
       *团队类型
       * </pre>
       */
      public Builder setTeamType(com.ourpalm.tank.message.MATCH_MSG.TEAM value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        teamType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM teamType = 6;</code>
       *
       * <pre>
       *团队类型
       * </pre>
       */
      public Builder clearTeamType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        teamType_ = com.ourpalm.tank.message.MATCH_MSG.TEAM.RED;
        
        return this;
      }

      // repeated .PROTO_MATCH.PropItem propes = 7;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> propes_ =
        java.util.Collections.emptyList();
      private void ensurePropesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          propes_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.PropItem>(propes_);
          bitField0_ |= 0x00000040;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.PropItem> getPropesList() {
        return java.util.Collections.unmodifiableList(propes_);
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public int getPropesCount() {
        return propes_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.PropItem getPropes(int index) {
        return propes_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder setPropes(
          int index, com.ourpalm.tank.message.MATCH_MSG.PropItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropesIsMutable();
        propes_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder setPropes(
          int index, com.ourpalm.tank.message.MATCH_MSG.PropItem.Builder builderForValue) {
        ensurePropesIsMutable();
        propes_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addPropes(com.ourpalm.tank.message.MATCH_MSG.PropItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropesIsMutable();
        propes_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addPropes(
          int index, com.ourpalm.tank.message.MATCH_MSG.PropItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropesIsMutable();
        propes_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addPropes(
          com.ourpalm.tank.message.MATCH_MSG.PropItem.Builder builderForValue) {
        ensurePropesIsMutable();
        propes_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addPropes(
          int index, com.ourpalm.tank.message.MATCH_MSG.PropItem.Builder builderForValue) {
        ensurePropesIsMutable();
        propes_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder addAllPropes(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.PropItem> values) {
        ensurePropesIsMutable();
        super.addAll(values, propes_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder clearPropes() {
        propes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.PropItem propes = 7;</code>
       *
       * <pre>
       *坦克属性
       * </pre>
       */
      public Builder removePropes(int index) {
        ensurePropesIsMutable();
        propes_.remove(index);

        return this;
      }

      // required .PROTO_MATCH.AiItem aiItem = 8;
      private com.ourpalm.tank.message.MATCH_MSG.AiItem aiItem_ = com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public boolean hasAiItem() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.AiItem getAiItem() {
        return aiItem_;
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public Builder setAiItem(com.ourpalm.tank.message.MATCH_MSG.AiItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        aiItem_ = value;

        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public Builder setAiItem(
          com.ourpalm.tank.message.MATCH_MSG.AiItem.Builder builderForValue) {
        aiItem_ = builderForValue.build();

        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public Builder mergeAiItem(com.ourpalm.tank.message.MATCH_MSG.AiItem value) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            aiItem_ != com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance()) {
          aiItem_ =
            com.ourpalm.tank.message.MATCH_MSG.AiItem.newBuilder(aiItem_).mergeFrom(value).buildPartial();
        } else {
          aiItem_ = value;
        }

        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.AiItem aiItem = 8;</code>
       *
       * <pre>
       *AI
       * </pre>
       */
      public Builder clearAiItem() {
        aiItem_ = com.ourpalm.tank.message.MATCH_MSG.AiItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.BuildItem)
    }

    static {
      defaultInstance = new BuildItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.BuildItem)
  }

  public interface STC_TANK_BIRTH_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .PROTO_MATCH.TankItem tankItem = 1;
    /**
     * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    boolean hasTankItem();
    /**
     * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_TANK_BIRTH_MSG}
   *
   * <pre>
   *坦克出生协议
   * </pre>
   */
  public static final class STC_TANK_BIRTH_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TANK_BIRTH_MSGOrBuilder {
    // Use STC_TANK_BIRTH_MSG.newBuilder() to construct.
    private STC_TANK_BIRTH_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TANK_BIRTH_MSG(boolean noInit) {}

    private static final STC_TANK_BIRTH_MSG defaultInstance;
    public static STC_TANK_BIRTH_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TANK_BIRTH_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TANK_BIRTH_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = tankItem_.toBuilder();
              }
              tankItem_ = input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankItem.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tankItem_);
                tankItem_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TANK_BIRTH_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TANK_BIRTH_MSG>() {
      public STC_TANK_BIRTH_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TANK_BIRTH_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TANK_BIRTH_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .PROTO_MATCH.TankItem tankItem = 1;
    public static final int TANKITEM_FIELD_NUMBER = 1;
    private com.ourpalm.tank.message.MATCH_MSG.TankItem tankItem_;
    /**
     * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    public boolean hasTankItem() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
     *
     * <pre>
     *坦克实例
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem() {
      return tankItem_;
    }

    private void initFields() {
      tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankItem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTankItem().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, tankItem_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tankItem_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_TANK_BIRTH_MSG}
     *
     * <pre>
     *坦克出生协议
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankItem_ = tankItem_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG.getDefaultInstance()) return this;
        if (other.hasTankItem()) {
          mergeTankItem(other.getTankItem());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankItem()) {
          
          return false;
        }
        if (!getTankItem().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_TANK_BIRTH_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .PROTO_MATCH.TankItem tankItem = 1;
      private com.ourpalm.tank.message.MATCH_MSG.TankItem tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public boolean hasTankItem() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankItem getTankItem() {
        return tankItem_;
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder setTankItem(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        tankItem_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder setTankItem(
          com.ourpalm.tank.message.MATCH_MSG.TankItem.Builder builderForValue) {
        tankItem_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder mergeTankItem(com.ourpalm.tank.message.MATCH_MSG.TankItem value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            tankItem_ != com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance()) {
          tankItem_ =
            com.ourpalm.tank.message.MATCH_MSG.TankItem.newBuilder(tankItem_).mergeFrom(value).buildPartial();
        } else {
          tankItem_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TankItem tankItem = 1;</code>
       *
       * <pre>
       *坦克实例
       * </pre>
       */
      public Builder clearTankItem() {
        tankItem_ = com.ourpalm.tank.message.MATCH_MSG.TankItem.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_TANK_BIRTH_MSG)
    }

    static {
      defaultInstance = new STC_TANK_BIRTH_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_TANK_BIRTH_MSG)
  }

  public interface STC_PLAYER_READY_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 id = 1;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_PLAYER_READY_MSG}
   *
   * <pre>
   *主推已做好准备的玩家
   * </pre>
   */
  public static final class STC_PLAYER_READY_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_PLAYER_READY_MSGOrBuilder {
    // Use STC_PLAYER_READY_MSG.newBuilder() to construct.
    private STC_PLAYER_READY_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_PLAYER_READY_MSG(boolean noInit) {}

    private static final STC_PLAYER_READY_MSG defaultInstance;
    public static STC_PLAYER_READY_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_PLAYER_READY_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_PLAYER_READY_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_PLAYER_READY_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_PLAYER_READY_MSG>() {
      public STC_PLAYER_READY_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_PLAYER_READY_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_PLAYER_READY_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     *
     * <pre>
     *坦克实例ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_PLAYER_READY_MSG}
     *
     * <pre>
     *主推已做好准备的玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_PLAYER_READY_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 id = 1;
      private int id_ ;
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       *
       * <pre>
       *坦克实例ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_PLAYER_READY_MSG)
    }

    static {
      defaultInstance = new STC_PLAYER_READY_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_PLAYER_READY_MSG)
  }

  public interface CTS_TEAM_CREATE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .PROTO_MATCH.WAR_TYPE warType = 1;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_CREATE_MSG}
   *
   * <pre>
   *创建新的队伍
   * </pre>
   */
  public static final class CTS_TEAM_CREATE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_CREATE_MSGOrBuilder {
    // Use CTS_TEAM_CREATE_MSG.newBuilder() to construct.
    private CTS_TEAM_CREATE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_CREATE_MSG(boolean noInit) {}

    private static final CTS_TEAM_CREATE_MSG defaultInstance;
    public static CTS_TEAM_CREATE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_CREATE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_CREATE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                warType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_CREATE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_CREATE_MSG>() {
      public CTS_TEAM_CREATE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_CREATE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_CREATE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .PROTO_MATCH.WAR_TYPE warType = 1;
    public static final int WARTYPE_FIELD_NUMBER = 1;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    private void initFields() {
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, warType_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, warType_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_CREATE_MSG}
     *
     * <pre>
     *创建新的队伍
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.warType_ = warType_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG.getDefaultInstance()) return this;
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWarType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CREATE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .PROTO_MATCH.WAR_TYPE warType = 1;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_CREATE_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_CREATE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_CREATE_MSG)
  }

  public interface STC_TEAM_INFO_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();

    // required .PROTO_MATCH.WAR_TYPE warType = 2;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();

    // repeated .PROTO_MATCH.FriendItem friends = 3;
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> 
        getFriendsList();
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.FriendItem getFriends(int index);
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    int getFriendsCount();

    // repeated .PROTO_MATCH.FriendItem corpsRoles = 4;
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> 
        getCorpsRolesList();
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.FriendItem getCorpsRoles(int index);
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    int getCorpsRolesCount();

    // repeated .PROTO_MATCH.TankTeamItem tanks = 5;
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> 
        getTanksList();
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankTeamItem getTanks(int index);
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    int getTanksCount();

    // required uint32 limitMin = 6;
    /**
     * <code>required uint32 limitMin = 6;</code>
     *
     * <pre>
     *限制最小军衔id
     * </pre>
     */
    boolean hasLimitMin();
    /**
     * <code>required uint32 limitMin = 6;</code>
     *
     * <pre>
     *限制最小军衔id
     * </pre>
     */
    int getLimitMin();

    // required uint32 limitMax = 7;
    /**
     * <code>required uint32 limitMax = 7;</code>
     *
     * <pre>
     *限制最高军衔id
     * </pre>
     */
    boolean hasLimitMax();
    /**
     * <code>required uint32 limitMax = 7;</code>
     *
     * <pre>
     *限制最高军衔id
     * </pre>
     */
    int getLimitMax();

    // required string limitDesc = 8;
    /**
     * <code>required string limitDesc = 8;</code>
     *
     * <pre>
     *限制说明
     * </pre>
     */
    boolean hasLimitDesc();
    /**
     * <code>required string limitDesc = 8;</code>
     *
     * <pre>
     *限制说明
     * </pre>
     */
    java.lang.String getLimitDesc();
    /**
     * <code>required string limitDesc = 8;</code>
     *
     * <pre>
     *限制说明
     * </pre>
     */
    com.google.protobuf.ByteString
        getLimitDescBytes();

    // required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;
    /**
     * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;</code>
     *
     * <pre>
     *推送的类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;</code>
     *
     * <pre>
     *推送的类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE getType();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_TEAM_INFO_MSG}
   *
   * <pre>
   *组队队伍信息
   * </pre>
   */
  public static final class STC_TEAM_INFO_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TEAM_INFO_MSGOrBuilder {
    // Use STC_TEAM_INFO_MSG.newBuilder() to construct.
    private STC_TEAM_INFO_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TEAM_INFO_MSG(boolean noInit) {}

    private static final STC_TEAM_INFO_MSG defaultInstance;
    public static STC_TEAM_INFO_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TEAM_INFO_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TEAM_INFO_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                warType_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                friends_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.FriendItem>();
                mutable_bitField0_ |= 0x00000004;
              }
              friends_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.FriendItem.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                corpsRoles_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.FriendItem>();
                mutable_bitField0_ |= 0x00000008;
              }
              corpsRoles_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.FriendItem.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem>();
                mutable_bitField0_ |= 0x00000010;
              }
              tanks_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              limitMin_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              limitMax_ = input.readUInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000010;
              limitDesc_ = input.readBytes();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE value = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000020;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          friends_ = java.util.Collections.unmodifiableList(friends_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          corpsRoles_ = java.util.Collections.unmodifiableList(corpsRoles_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TEAM_INFO_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TEAM_INFO_MSG>() {
      public STC_TEAM_INFO_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TEAM_INFO_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TEAM_INFO_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PROTO_MATCH.WAR_TYPE warType = 2;
    public static final int WARTYPE_FIELD_NUMBER = 2;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    // repeated .PROTO_MATCH.FriendItem friends = 3;
    public static final int FRIENDS_FIELD_NUMBER = 3;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> friends_;
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> getFriendsList() {
      return friends_;
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder> 
        getFriendsOrBuilderList() {
      return friends_;
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public int getFriendsCount() {
      return friends_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.FriendItem getFriends(int index) {
      return friends_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder getFriendsOrBuilder(
        int index) {
      return friends_.get(index);
    }

    // repeated .PROTO_MATCH.FriendItem corpsRoles = 4;
    public static final int CORPSROLES_FIELD_NUMBER = 4;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> corpsRoles_;
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> getCorpsRolesList() {
      return corpsRoles_;
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder> 
        getCorpsRolesOrBuilderList() {
      return corpsRoles_;
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public int getCorpsRolesCount() {
      return corpsRoles_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.FriendItem getCorpsRoles(int index) {
      return corpsRoles_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder getCorpsRolesOrBuilder(
        int index) {
      return corpsRoles_.get(index);
    }

    // repeated .PROTO_MATCH.TankTeamItem tanks = 5;
    public static final int TANKS_FIELD_NUMBER = 5;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> tanks_;
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> getTanksList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.TankTeamItemOrBuilder> 
        getTanksOrBuilderList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public int getTanksCount() {
      return tanks_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankTeamItem getTanks(int index) {
      return tanks_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankTeamItemOrBuilder getTanksOrBuilder(
        int index) {
      return tanks_.get(index);
    }

    // required uint32 limitMin = 6;
    public static final int LIMITMIN_FIELD_NUMBER = 6;
    private int limitMin_;
    /**
     * <code>required uint32 limitMin = 6;</code>
     *
     * <pre>
     *限制最小军衔id
     * </pre>
     */
    public boolean hasLimitMin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 limitMin = 6;</code>
     *
     * <pre>
     *限制最小军衔id
     * </pre>
     */
    public int getLimitMin() {
      return limitMin_;
    }

    // required uint32 limitMax = 7;
    public static final int LIMITMAX_FIELD_NUMBER = 7;
    private int limitMax_;
    /**
     * <code>required uint32 limitMax = 7;</code>
     *
     * <pre>
     *限制最高军衔id
     * </pre>
     */
    public boolean hasLimitMax() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 limitMax = 7;</code>
     *
     * <pre>
     *限制最高军衔id
     * </pre>
     */
    public int getLimitMax() {
      return limitMax_;
    }

    // required string limitDesc = 8;
    public static final int LIMITDESC_FIELD_NUMBER = 8;
    private java.lang.Object limitDesc_;
    /**
     * <code>required string limitDesc = 8;</code>
     *
     * <pre>
     *限制说明
     * </pre>
     */
    public boolean hasLimitDesc() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string limitDesc = 8;</code>
     *
     * <pre>
     *限制说明
     * </pre>
     */
    public java.lang.String getLimitDesc() {
      java.lang.Object ref = limitDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          limitDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string limitDesc = 8;</code>
     *
     * <pre>
     *限制说明
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLimitDescBytes() {
      java.lang.Object ref = limitDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        limitDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;
    public static final int TYPE_FIELD_NUMBER = 9;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE type_;
    /**
     * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;</code>
     *
     * <pre>
     *推送的类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;</code>
     *
     * <pre>
     *推送的类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE getType() {
      return type_;
    }

    private void initFields() {
      teamId_ = "";
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      friends_ = java.util.Collections.emptyList();
      corpsRoles_ = java.util.Collections.emptyList();
      tanks_ = java.util.Collections.emptyList();
      limitMin_ = 0;
      limitMax_ = 0;
      limitDesc_ = "";
      type_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.TEAM_AGREE_TYPE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLimitMin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLimitMax()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLimitDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFriendsCount(); i++) {
        if (!getFriends(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCorpsRolesCount(); i++) {
        if (!getCorpsRoles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTanksCount(); i++) {
        if (!getTanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, warType_.getNumber());
      }
      for (int i = 0; i < friends_.size(); i++) {
        output.writeMessage(3, friends_.get(i));
      }
      for (int i = 0; i < corpsRoles_.size(); i++) {
        output.writeMessage(4, corpsRoles_.get(i));
      }
      for (int i = 0; i < tanks_.size(); i++) {
        output.writeMessage(5, tanks_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(6, limitMin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(7, limitMax_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(8, getLimitDescBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(9, type_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, warType_.getNumber());
      }
      for (int i = 0; i < friends_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, friends_.get(i));
      }
      for (int i = 0; i < corpsRoles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, corpsRoles_.get(i));
      }
      for (int i = 0; i < tanks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tanks_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, limitMin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, limitMax_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getLimitDescBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, type_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_TEAM_INFO_MSG}
     *
     * <pre>
     *组队队伍信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000002);
        friends_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        corpsRoles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        limitMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        limitMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        limitDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        type_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.TEAM_AGREE_TYPE;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.warType_ = warType_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          friends_ = java.util.Collections.unmodifiableList(friends_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.friends_ = friends_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          corpsRoles_ = java.util.Collections.unmodifiableList(corpsRoles_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.corpsRoles_ = corpsRoles_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.tanks_ = tanks_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.limitMin_ = limitMin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.limitMax_ = limitMax_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.limitDesc_ = limitDesc_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        if (!other.friends_.isEmpty()) {
          if (friends_.isEmpty()) {
            friends_ = other.friends_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFriendsIsMutable();
            friends_.addAll(other.friends_);
          }
          
        }
        if (!other.corpsRoles_.isEmpty()) {
          if (corpsRoles_.isEmpty()) {
            corpsRoles_ = other.corpsRoles_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCorpsRolesIsMutable();
            corpsRoles_.addAll(other.corpsRoles_);
          }
          
        }
        if (!other.tanks_.isEmpty()) {
          if (tanks_.isEmpty()) {
            tanks_ = other.tanks_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureTanksIsMutable();
            tanks_.addAll(other.tanks_);
          }
          
        }
        if (other.hasLimitMin()) {
          setLimitMin(other.getLimitMin());
        }
        if (other.hasLimitMax()) {
          setLimitMax(other.getLimitMax());
        }
        if (other.hasLimitDesc()) {
          bitField0_ |= 0x00000080;
          limitDesc_ = other.limitDesc_;
          
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        if (!hasWarType()) {
          
          return false;
        }
        if (!hasLimitMin()) {
          
          return false;
        }
        if (!hasLimitMax()) {
          
          return false;
        }
        if (!hasLimitDesc()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getFriendsCount(); i++) {
          if (!getFriends(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCorpsRolesCount(); i++) {
          if (!getCorpsRoles(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTanksCount(); i++) {
          if (!getTanks(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INFO_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // required .PROTO_MATCH.WAR_TYPE warType = 2;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // repeated .PROTO_MATCH.FriendItem friends = 3;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> friends_ =
        java.util.Collections.emptyList();
      private void ensureFriendsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          friends_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.FriendItem>(friends_);
          bitField0_ |= 0x00000004;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> getFriendsList() {
        return java.util.Collections.unmodifiableList(friends_);
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public int getFriendsCount() {
        return friends_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.FriendItem getFriends(int index) {
        return friends_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder setFriends(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendsIsMutable();
        friends_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder setFriends(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureFriendsIsMutable();
        friends_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addFriends(com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendsIsMutable();
        friends_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addFriends(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendsIsMutable();
        friends_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addFriends(
          com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureFriendsIsMutable();
        friends_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addFriends(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureFriendsIsMutable();
        friends_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addAllFriends(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.FriendItem> values) {
        ensureFriendsIsMutable();
        super.addAll(values, friends_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder clearFriends() {
        friends_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 3;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder removeFriends(int index) {
        ensureFriendsIsMutable();
        friends_.remove(index);

        return this;
      }

      // repeated .PROTO_MATCH.FriendItem corpsRoles = 4;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> corpsRoles_ =
        java.util.Collections.emptyList();
      private void ensureCorpsRolesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          corpsRoles_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.FriendItem>(corpsRoles_);
          bitField0_ |= 0x00000008;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> getCorpsRolesList() {
        return java.util.Collections.unmodifiableList(corpsRoles_);
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public int getCorpsRolesCount() {
        return corpsRoles_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.FriendItem getCorpsRoles(int index) {
        return corpsRoles_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder setCorpsRoles(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCorpsRolesIsMutable();
        corpsRoles_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder setCorpsRoles(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureCorpsRolesIsMutable();
        corpsRoles_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addCorpsRoles(com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCorpsRolesIsMutable();
        corpsRoles_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addCorpsRoles(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCorpsRolesIsMutable();
        corpsRoles_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addCorpsRoles(
          com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureCorpsRolesIsMutable();
        corpsRoles_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addCorpsRoles(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureCorpsRolesIsMutable();
        corpsRoles_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addAllCorpsRoles(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.FriendItem> values) {
        ensureCorpsRolesIsMutable();
        super.addAll(values, corpsRoles_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder clearCorpsRoles() {
        corpsRoles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 4;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder removeCorpsRoles(int index) {
        ensureCorpsRolesIsMutable();
        corpsRoles_.remove(index);

        return this;
      }

      // repeated .PROTO_MATCH.TankTeamItem tanks = 5;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> tanks_ =
        java.util.Collections.emptyList();
      private void ensureTanksIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem>(tanks_);
          bitField0_ |= 0x00000010;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> getTanksList() {
        return java.util.Collections.unmodifiableList(tanks_);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public int getTanksCount() {
        return tanks_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankTeamItem getTanks(int index) {
        return tanks_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankTeamItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(com.ourpalm.tank.message.MATCH_MSG.TankTeamItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankTeamItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addAllTanks(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> values) {
        ensureTanksIsMutable();
        super.addAll(values, tanks_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder clearTanks() {
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 5;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder removeTanks(int index) {
        ensureTanksIsMutable();
        tanks_.remove(index);

        return this;
      }

      // required uint32 limitMin = 6;
      private int limitMin_ ;
      /**
       * <code>required uint32 limitMin = 6;</code>
       *
       * <pre>
       *限制最小军衔id
       * </pre>
       */
      public boolean hasLimitMin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 limitMin = 6;</code>
       *
       * <pre>
       *限制最小军衔id
       * </pre>
       */
      public int getLimitMin() {
        return limitMin_;
      }
      /**
       * <code>required uint32 limitMin = 6;</code>
       *
       * <pre>
       *限制最小军衔id
       * </pre>
       */
      public Builder setLimitMin(int value) {
        bitField0_ |= 0x00000020;
        limitMin_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 limitMin = 6;</code>
       *
       * <pre>
       *限制最小军衔id
       * </pre>
       */
      public Builder clearLimitMin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        limitMin_ = 0;
        
        return this;
      }

      // required uint32 limitMax = 7;
      private int limitMax_ ;
      /**
       * <code>required uint32 limitMax = 7;</code>
       *
       * <pre>
       *限制最高军衔id
       * </pre>
       */
      public boolean hasLimitMax() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 limitMax = 7;</code>
       *
       * <pre>
       *限制最高军衔id
       * </pre>
       */
      public int getLimitMax() {
        return limitMax_;
      }
      /**
       * <code>required uint32 limitMax = 7;</code>
       *
       * <pre>
       *限制最高军衔id
       * </pre>
       */
      public Builder setLimitMax(int value) {
        bitField0_ |= 0x00000040;
        limitMax_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 limitMax = 7;</code>
       *
       * <pre>
       *限制最高军衔id
       * </pre>
       */
      public Builder clearLimitMax() {
        bitField0_ = (bitField0_ & ~0x00000040);
        limitMax_ = 0;
        
        return this;
      }

      // required string limitDesc = 8;
      private java.lang.Object limitDesc_ = "";
      /**
       * <code>required string limitDesc = 8;</code>
       *
       * <pre>
       *限制说明
       * </pre>
       */
      public boolean hasLimitDesc() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required string limitDesc = 8;</code>
       *
       * <pre>
       *限制说明
       * </pre>
       */
      public java.lang.String getLimitDesc() {
        java.lang.Object ref = limitDesc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          limitDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string limitDesc = 8;</code>
       *
       * <pre>
       *限制说明
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLimitDescBytes() {
        java.lang.Object ref = limitDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          limitDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string limitDesc = 8;</code>
       *
       * <pre>
       *限制说明
       * </pre>
       */
      public Builder setLimitDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        limitDesc_ = value;
        
        return this;
      }
      /**
       * <code>required string limitDesc = 8;</code>
       *
       * <pre>
       *限制说明
       * </pre>
       */
      public Builder clearLimitDesc() {
        bitField0_ = (bitField0_ & ~0x00000080);
        limitDesc_ = getDefaultInstance().getLimitDesc();
        
        return this;
      }
      /**
       * <code>required string limitDesc = 8;</code>
       *
       * <pre>
       *限制说明
       * </pre>
       */
      public Builder setLimitDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        limitDesc_ = value;
        
        return this;
      }

      // required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE type_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.TEAM_AGREE_TYPE;
      /**
       * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;</code>
       *
       * <pre>
       *推送的类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;</code>
       *
       * <pre>
       *推送的类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE getType() {
        return type_;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;</code>
       *
       * <pre>
       *推送的类型
       * </pre>
       */
      public Builder setType(com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.TEAM_INFO_TYPE type = 9;</code>
       *
       * <pre>
       *推送的类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        type_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_INFO_TYPE.TEAM_AGREE_TYPE;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_TEAM_INFO_MSG)
    }

    static {
      defaultInstance = new STC_TEAM_INFO_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_TEAM_INFO_MSG)
  }

  public interface FriendItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 roleId = 1;
    /**
     * <code>required uint32 roleId = 1;</code>
     *
     * <pre>
     *好友角色ID
     * </pre>
     */
    boolean hasRoleId();
    /**
     * <code>required uint32 roleId = 1;</code>
     *
     * <pre>
     *好友角色ID
     * </pre>
     */
    int getRoleId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *好友名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *好友名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *好友名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required uint32 level = 3;
    /**
     * <code>required uint32 level = 3;</code>
     *
     * <pre>
     *好友等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required uint32 level = 3;</code>
     *
     * <pre>
     *好友等级
     * </pre>
     */
    int getLevel();

    // required uint32 titleId = 4;
    /**
     * <code>required uint32 titleId = 4;</code>
     *
     * <pre>
     *军衔ID
     * </pre>
     */
    boolean hasTitleId();
    /**
     * <code>required uint32 titleId = 4;</code>
     *
     * <pre>
     *军衔ID
     * </pre>
     */
    int getTitleId();

    // required uint32 battleScore = 5;
    /**
     * <code>required uint32 battleScore = 5;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    boolean hasBattleScore();
    /**
     * <code>required uint32 battleScore = 5;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    int getBattleScore();

    // required uint32 state = 6;
    /**
     * <code>required uint32 state = 6;</code>
     *
     * <pre>
     * 1:在线  2:组队中 3:战斗中 4:离线
     * </pre>
     */
    boolean hasState();
    /**
     * <code>required uint32 state = 6;</code>
     *
     * <pre>
     * 1:在线  2:组队中 3:战斗中 4:离线
     * </pre>
     */
    int getState();

    // required uint32 vipLvl = 7;
    /**
     * <code>required uint32 vipLvl = 7;</code>
     *
     * <pre>
     *vip等级
     * </pre>
     */
    boolean hasVipLvl();
    /**
     * <code>required uint32 vipLvl = 7;</code>
     *
     * <pre>
     *vip等级
     * </pre>
     */
    int getVipLvl();

    // optional string pfUserInfo = 8;
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    boolean hasPfUserInfo();
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    java.lang.String getPfUserInfo();
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    com.google.protobuf.ByteString
        getPfUserInfoBytes();

    // optional string pfYellowUserInfo = 9;
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    boolean hasPfYellowUserInfo();
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    java.lang.String getPfYellowUserInfo();
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getPfYellowUserInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.FriendItem}
   *
   * <pre>
   *好友列表
   * </pre>
   */
  public static final class FriendItem extends
      com.google.protobuf.GeneratedMessageLite
      implements FriendItemOrBuilder {
    // Use FriendItem.newBuilder() to construct.
    private FriendItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FriendItem(boolean noInit) {}

    private static final FriendItem defaultInstance;
    public static FriendItem getDefaultInstance() {
      return defaultInstance;
    }

    public FriendItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FriendItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleId_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              level_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              titleId_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              battleScore_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              state_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              vipLvl_ = input.readUInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              pfUserInfo_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              pfYellowUserInfo_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FriendItem> PARSER =
        new com.google.protobuf.AbstractParser<FriendItem>() {
      public FriendItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FriendItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FriendItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private int roleId_;
    /**
     * <code>required uint32 roleId = 1;</code>
     *
     * <pre>
     *好友角色ID
     * </pre>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 roleId = 1;</code>
     *
     * <pre>
     *好友角色ID
     * </pre>
     */
    public int getRoleId() {
      return roleId_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *好友名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *好友名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *好友名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 level = 3;
    public static final int LEVEL_FIELD_NUMBER = 3;
    private int level_;
    /**
     * <code>required uint32 level = 3;</code>
     *
     * <pre>
     *好友等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 level = 3;</code>
     *
     * <pre>
     *好友等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // required uint32 titleId = 4;
    public static final int TITLEID_FIELD_NUMBER = 4;
    private int titleId_;
    /**
     * <code>required uint32 titleId = 4;</code>
     *
     * <pre>
     *军衔ID
     * </pre>
     */
    public boolean hasTitleId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 titleId = 4;</code>
     *
     * <pre>
     *军衔ID
     * </pre>
     */
    public int getTitleId() {
      return titleId_;
    }

    // required uint32 battleScore = 5;
    public static final int BATTLESCORE_FIELD_NUMBER = 5;
    private int battleScore_;
    /**
     * <code>required uint32 battleScore = 5;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public boolean hasBattleScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 battleScore = 5;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public int getBattleScore() {
      return battleScore_;
    }

    // required uint32 state = 6;
    public static final int STATE_FIELD_NUMBER = 6;
    private int state_;
    /**
     * <code>required uint32 state = 6;</code>
     *
     * <pre>
     * 1:在线  2:组队中 3:战斗中 4:离线
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 state = 6;</code>
     *
     * <pre>
     * 1:在线  2:组队中 3:战斗中 4:离线
     * </pre>
     */
    public int getState() {
      return state_;
    }

    // required uint32 vipLvl = 7;
    public static final int VIPLVL_FIELD_NUMBER = 7;
    private int vipLvl_;
    /**
     * <code>required uint32 vipLvl = 7;</code>
     *
     * <pre>
     *vip等级
     * </pre>
     */
    public boolean hasVipLvl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 vipLvl = 7;</code>
     *
     * <pre>
     *vip等级
     * </pre>
     */
    public int getVipLvl() {
      return vipLvl_;
    }

    // optional string pfUserInfo = 8;
    public static final int PFUSERINFO_FIELD_NUMBER = 8;
    private java.lang.Object pfUserInfo_;
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public boolean hasPfUserInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public java.lang.String getPfUserInfo() {
      java.lang.Object ref = pfUserInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pfUserInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pfUserInfo = 8;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPfUserInfoBytes() {
      java.lang.Object ref = pfUserInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pfUserInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string pfYellowUserInfo = 9;
    public static final int PFYELLOWUSERINFO_FIELD_NUMBER = 9;
    private java.lang.Object pfYellowUserInfo_;
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public boolean hasPfYellowUserInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public java.lang.String getPfYellowUserInfo() {
      java.lang.Object ref = pfYellowUserInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pfYellowUserInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pfYellowUserInfo = 9;</code>
     *
     * <pre>
     *黄钻信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPfYellowUserInfoBytes() {
      java.lang.Object ref = pfYellowUserInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pfYellowUserInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roleId_ = 0;
      name_ = "";
      level_ = 0;
      titleId_ = 0;
      battleScore_ = 0;
      state_ = 0;
      vipLvl_ = 0;
      pfUserInfo_ = "";
      pfYellowUserInfo_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTitleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBattleScore()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVipLvl()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, roleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, level_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, titleId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, battleScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, state_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, vipLvl_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getPfUserInfoBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getPfYellowUserInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, level_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, titleId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, battleScore_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, state_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, vipLvl_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getPfUserInfoBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getPfYellowUserInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.FriendItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.FriendItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.FriendItem}
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.FriendItem, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.FriendItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        titleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        battleScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        vipLvl_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        pfUserInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        pfYellowUserInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.FriendItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.FriendItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.FriendItem build() {
        com.ourpalm.tank.message.MATCH_MSG.FriendItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.FriendItem buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.FriendItem result = new com.ourpalm.tank.message.MATCH_MSG.FriendItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleId_ = roleId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.titleId_ = titleId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.battleScore_ = battleScore_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vipLvl_ = vipLvl_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pfUserInfo_ = pfUserInfo_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pfYellowUserInfo_ = pfYellowUserInfo_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.FriendItem other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.FriendItem.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasTitleId()) {
          setTitleId(other.getTitleId());
        }
        if (other.hasBattleScore()) {
          setBattleScore(other.getBattleScore());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasVipLvl()) {
          setVipLvl(other.getVipLvl());
        }
        if (other.hasPfUserInfo()) {
          bitField0_ |= 0x00000080;
          pfUserInfo_ = other.pfUserInfo_;
          
        }
        if (other.hasPfYellowUserInfo()) {
          bitField0_ |= 0x00000100;
          pfYellowUserInfo_ = other.pfYellowUserInfo_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoleId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasTitleId()) {
          
          return false;
        }
        if (!hasBattleScore()) {
          
          return false;
        }
        if (!hasState()) {
          
          return false;
        }
        if (!hasVipLvl()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.FriendItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.FriendItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 roleId = 1;
      private int roleId_ ;
      /**
       * <code>required uint32 roleId = 1;</code>
       *
       * <pre>
       *好友角色ID
       * </pre>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       *
       * <pre>
       *好友角色ID
       * </pre>
       */
      public int getRoleId() {
        return roleId_;
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       *
       * <pre>
       *好友角色ID
       * </pre>
       */
      public Builder setRoleId(int value) {
        bitField0_ |= 0x00000001;
        roleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       *
       * <pre>
       *好友角色ID
       * </pre>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleId_ = 0;
        
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *好友名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *好友名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *好友名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *好友名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *好友名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *好友名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        
        return this;
      }

      // required uint32 level = 3;
      private int level_ ;
      /**
       * <code>required uint32 level = 3;</code>
       *
       * <pre>
       *好友等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 level = 3;</code>
       *
       * <pre>
       *好友等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required uint32 level = 3;</code>
       *
       * <pre>
       *好友等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000004;
        level_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 level = 3;</code>
       *
       * <pre>
       *好友等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = 0;
        
        return this;
      }

      // required uint32 titleId = 4;
      private int titleId_ ;
      /**
       * <code>required uint32 titleId = 4;</code>
       *
       * <pre>
       *军衔ID
       * </pre>
       */
      public boolean hasTitleId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 titleId = 4;</code>
       *
       * <pre>
       *军衔ID
       * </pre>
       */
      public int getTitleId() {
        return titleId_;
      }
      /**
       * <code>required uint32 titleId = 4;</code>
       *
       * <pre>
       *军衔ID
       * </pre>
       */
      public Builder setTitleId(int value) {
        bitField0_ |= 0x00000008;
        titleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 titleId = 4;</code>
       *
       * <pre>
       *军衔ID
       * </pre>
       */
      public Builder clearTitleId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        titleId_ = 0;
        
        return this;
      }

      // required uint32 battleScore = 5;
      private int battleScore_ ;
      /**
       * <code>required uint32 battleScore = 5;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public boolean hasBattleScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 battleScore = 5;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public int getBattleScore() {
        return battleScore_;
      }
      /**
       * <code>required uint32 battleScore = 5;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder setBattleScore(int value) {
        bitField0_ |= 0x00000010;
        battleScore_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 battleScore = 5;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder clearBattleScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        battleScore_ = 0;
        
        return this;
      }

      // required uint32 state = 6;
      private int state_ ;
      /**
       * <code>required uint32 state = 6;</code>
       *
       * <pre>
       * 1:在线  2:组队中 3:战斗中 4:离线
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 state = 6;</code>
       *
       * <pre>
       * 1:在线  2:组队中 3:战斗中 4:离线
       * </pre>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>required uint32 state = 6;</code>
       *
       * <pre>
       * 1:在线  2:组队中 3:战斗中 4:离线
       * </pre>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000020;
        state_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 state = 6;</code>
       *
       * <pre>
       * 1:在线  2:组队中 3:战斗中 4:离线
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000020);
        state_ = 0;
        
        return this;
      }

      // required uint32 vipLvl = 7;
      private int vipLvl_ ;
      /**
       * <code>required uint32 vipLvl = 7;</code>
       *
       * <pre>
       *vip等级
       * </pre>
       */
      public boolean hasVipLvl() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 vipLvl = 7;</code>
       *
       * <pre>
       *vip等级
       * </pre>
       */
      public int getVipLvl() {
        return vipLvl_;
      }
      /**
       * <code>required uint32 vipLvl = 7;</code>
       *
       * <pre>
       *vip等级
       * </pre>
       */
      public Builder setVipLvl(int value) {
        bitField0_ |= 0x00000040;
        vipLvl_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 vipLvl = 7;</code>
       *
       * <pre>
       *vip等级
       * </pre>
       */
      public Builder clearVipLvl() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vipLvl_ = 0;
        
        return this;
      }

      // optional string pfUserInfo = 8;
      private java.lang.Object pfUserInfo_ = "";
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public boolean hasPfUserInfo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public java.lang.String getPfUserInfo() {
        java.lang.Object ref = pfUserInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pfUserInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPfUserInfoBytes() {
        java.lang.Object ref = pfUserInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pfUserInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder setPfUserInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        pfUserInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder clearPfUserInfo() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pfUserInfo_ = getDefaultInstance().getPfUserInfo();
        
        return this;
      }
      /**
       * <code>optional string pfUserInfo = 8;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder setPfUserInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        pfUserInfo_ = value;
        
        return this;
      }

      // optional string pfYellowUserInfo = 9;
      private java.lang.Object pfYellowUserInfo_ = "";
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public boolean hasPfYellowUserInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public java.lang.String getPfYellowUserInfo() {
        java.lang.Object ref = pfYellowUserInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pfYellowUserInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPfYellowUserInfoBytes() {
        java.lang.Object ref = pfYellowUserInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pfYellowUserInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder setPfYellowUserInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        pfYellowUserInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder clearPfYellowUserInfo() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pfYellowUserInfo_ = getDefaultInstance().getPfYellowUserInfo();
        
        return this;
      }
      /**
       * <code>optional string pfYellowUserInfo = 9;</code>
       *
       * <pre>
       *黄钻信息
       * </pre>
       */
      public Builder setPfYellowUserInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        pfYellowUserInfo_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.FriendItem)
    }

    static {
      defaultInstance = new FriendItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.FriendItem)
  }

  public interface TankTeamItemOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 roleId = 1;
    /**
     * <code>required uint32 roleId = 1;</code>
     *
     * <pre>
     *角色ID
     * </pre>
     */
    boolean hasRoleId();
    /**
     * <code>required uint32 roleId = 1;</code>
     *
     * <pre>
     *角色ID
     * </pre>
     */
    int getRoleId();

    // required uint32 tankId = 2;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克ID
     * </pre>
     */
    int getTankId();

    // required string name = 3;
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required uint32 battleScore = 4;
    /**
     * <code>required uint32 battleScore = 4;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    boolean hasBattleScore();
    /**
     * <code>required uint32 battleScore = 4;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    int getBattleScore();

    // required bool hadElite = 5;
    /**
     * <code>required bool hadElite = 5;</code>
     *
     * <pre>
     *是否为精英
     * </pre>
     */
    boolean hasHadElite();
    /**
     * <code>required bool hadElite = 5;</code>
     *
     * <pre>
     *是否为精英
     * </pre>
     */
    boolean getHadElite();

    // required bool hadReady = 6;
    /**
     * <code>required bool hadReady = 6;</code>
     *
     * <pre>
     *是否已准备
     * </pre>
     */
    boolean hasHadReady();
    /**
     * <code>required bool hadReady = 6;</code>
     *
     * <pre>
     *是否已准备
     * </pre>
     */
    boolean getHadReady();

    // required bool hadLeader = 7;
    /**
     * <code>required bool hadLeader = 7;</code>
     *
     * <pre>
     *是否为队长	
     * </pre>
     */
    boolean hasHadLeader();
    /**
     * <code>required bool hadLeader = 7;</code>
     *
     * <pre>
     *是否为队长	
     * </pre>
     */
    boolean getHadLeader();

    // required bool hadMatch = 8;
    /**
     * <code>required bool hadMatch = 8;</code>
     *
     * <pre>
     *是否在匹配中	
     * </pre>
     */
    boolean hasHadMatch();
    /**
     * <code>required bool hadMatch = 8;</code>
     *
     * <pre>
     *是否在匹配中	
     * </pre>
     */
    boolean getHadMatch();

    // optional string pfUserInfo = 9;
    /**
     * <code>optional string pfUserInfo = 9;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    boolean hasPfUserInfo();
    /**
     * <code>optional string pfUserInfo = 9;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    java.lang.String getPfUserInfo();
    /**
     * <code>optional string pfUserInfo = 9;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    com.google.protobuf.ByteString
        getPfUserInfoBytes();

    // optional string pfYellowUserInfo = 10;
    /**
     * <code>optional string pfYellowUserInfo = 10;</code>
     *
     * <pre>
     *黄钻信息	
     * </pre>
     */
    boolean hasPfYellowUserInfo();
    /**
     * <code>optional string pfYellowUserInfo = 10;</code>
     *
     * <pre>
     *黄钻信息	
     * </pre>
     */
    java.lang.String getPfYellowUserInfo();
    /**
     * <code>optional string pfYellowUserInfo = 10;</code>
     *
     * <pre>
     *黄钻信息	
     * </pre>
     */
    com.google.protobuf.ByteString
        getPfYellowUserInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.TankTeamItem}
   *
   * <pre>
   *组队坦克列表
   * </pre>
   */
  public static final class TankTeamItem extends
      com.google.protobuf.GeneratedMessageLite
      implements TankTeamItemOrBuilder {
    // Use TankTeamItem.newBuilder() to construct.
    private TankTeamItem(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TankTeamItem(boolean noInit) {}

    private static final TankTeamItem defaultInstance;
    public static TankTeamItem getDefaultInstance() {
      return defaultInstance;
    }

    public TankTeamItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TankTeamItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tankId_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              battleScore_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hadElite_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              hadReady_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              hadLeader_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              hadMatch_ = input.readBool();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              pfUserInfo_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              pfYellowUserInfo_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TankTeamItem> PARSER =
        new com.google.protobuf.AbstractParser<TankTeamItem>() {
      public TankTeamItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TankTeamItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TankTeamItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private int roleId_;
    /**
     * <code>required uint32 roleId = 1;</code>
     *
     * <pre>
     *角色ID
     * </pre>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 roleId = 1;</code>
     *
     * <pre>
     *角色ID
     * </pre>
     */
    public int getRoleId() {
      return roleId_;
    }

    // required uint32 tankId = 2;
    public static final int TANKID_FIELD_NUMBER = 2;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tankId = 2;</code>
     *
     * <pre>
     *坦克ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 3;</code>
     *
     * <pre>
     *玩家名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 battleScore = 4;
    public static final int BATTLESCORE_FIELD_NUMBER = 4;
    private int battleScore_;
    /**
     * <code>required uint32 battleScore = 4;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public boolean hasBattleScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 battleScore = 4;</code>
     *
     * <pre>
     *战斗力
     * </pre>
     */
    public int getBattleScore() {
      return battleScore_;
    }

    // required bool hadElite = 5;
    public static final int HADELITE_FIELD_NUMBER = 5;
    private boolean hadElite_;
    /**
     * <code>required bool hadElite = 5;</code>
     *
     * <pre>
     *是否为精英
     * </pre>
     */
    public boolean hasHadElite() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool hadElite = 5;</code>
     *
     * <pre>
     *是否为精英
     * </pre>
     */
    public boolean getHadElite() {
      return hadElite_;
    }

    // required bool hadReady = 6;
    public static final int HADREADY_FIELD_NUMBER = 6;
    private boolean hadReady_;
    /**
     * <code>required bool hadReady = 6;</code>
     *
     * <pre>
     *是否已准备
     * </pre>
     */
    public boolean hasHadReady() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bool hadReady = 6;</code>
     *
     * <pre>
     *是否已准备
     * </pre>
     */
    public boolean getHadReady() {
      return hadReady_;
    }

    // required bool hadLeader = 7;
    public static final int HADLEADER_FIELD_NUMBER = 7;
    private boolean hadLeader_;
    /**
     * <code>required bool hadLeader = 7;</code>
     *
     * <pre>
     *是否为队长	
     * </pre>
     */
    public boolean hasHadLeader() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool hadLeader = 7;</code>
     *
     * <pre>
     *是否为队长	
     * </pre>
     */
    public boolean getHadLeader() {
      return hadLeader_;
    }

    // required bool hadMatch = 8;
    public static final int HADMATCH_FIELD_NUMBER = 8;
    private boolean hadMatch_;
    /**
     * <code>required bool hadMatch = 8;</code>
     *
     * <pre>
     *是否在匹配中	
     * </pre>
     */
    public boolean hasHadMatch() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required bool hadMatch = 8;</code>
     *
     * <pre>
     *是否在匹配中	
     * </pre>
     */
    public boolean getHadMatch() {
      return hadMatch_;
    }

    // optional string pfUserInfo = 9;
    public static final int PFUSERINFO_FIELD_NUMBER = 9;
    private java.lang.Object pfUserInfo_;
    /**
     * <code>optional string pfUserInfo = 9;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public boolean hasPfUserInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string pfUserInfo = 9;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public java.lang.String getPfUserInfo() {
      java.lang.Object ref = pfUserInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pfUserInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pfUserInfo = 9;</code>
     *
     * <pre>
     *蓝钻信息	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPfUserInfoBytes() {
      java.lang.Object ref = pfUserInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pfUserInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string pfYellowUserInfo = 10;
    public static final int PFYELLOWUSERINFO_FIELD_NUMBER = 10;
    private java.lang.Object pfYellowUserInfo_;
    /**
     * <code>optional string pfYellowUserInfo = 10;</code>
     *
     * <pre>
     *黄钻信息	
     * </pre>
     */
    public boolean hasPfYellowUserInfo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string pfYellowUserInfo = 10;</code>
     *
     * <pre>
     *黄钻信息	
     * </pre>
     */
    public java.lang.String getPfYellowUserInfo() {
      java.lang.Object ref = pfYellowUserInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pfYellowUserInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pfYellowUserInfo = 10;</code>
     *
     * <pre>
     *黄钻信息	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPfYellowUserInfoBytes() {
      java.lang.Object ref = pfYellowUserInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pfYellowUserInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roleId_ = 0;
      tankId_ = 0;
      name_ = "";
      battleScore_ = 0;
      hadElite_ = false;
      hadReady_ = false;
      hadLeader_ = false;
      hadMatch_ = false;
      pfUserInfo_ = "";
      pfYellowUserInfo_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBattleScore()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHadElite()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHadReady()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHadLeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHadMatch()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, roleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, battleScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hadElite_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, hadReady_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, hadLeader_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, hadMatch_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getPfUserInfoBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getPfYellowUserInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, battleScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hadElite_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, hadReady_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, hadLeader_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, hadMatch_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getPfUserInfoBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getPfYellowUserInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.TankTeamItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.TankTeamItem}
     *
     * <pre>
     *组队坦克列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.TankTeamItem, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.TankTeamItemOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        battleScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        hadElite_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        hadReady_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        hadLeader_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        hadMatch_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        pfUserInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        pfYellowUserInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.TankTeamItem getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.TankTeamItem build() {
        com.ourpalm.tank.message.MATCH_MSG.TankTeamItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.TankTeamItem buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.TankTeamItem result = new com.ourpalm.tank.message.MATCH_MSG.TankTeamItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleId_ = roleId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.battleScore_ = battleScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hadElite_ = hadElite_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.hadReady_ = hadReady_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.hadLeader_ = hadLeader_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.hadMatch_ = hadMatch_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pfUserInfo_ = pfUserInfo_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pfYellowUserInfo_ = pfYellowUserInfo_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.TankTeamItem other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          
        }
        if (other.hasBattleScore()) {
          setBattleScore(other.getBattleScore());
        }
        if (other.hasHadElite()) {
          setHadElite(other.getHadElite());
        }
        if (other.hasHadReady()) {
          setHadReady(other.getHadReady());
        }
        if (other.hasHadLeader()) {
          setHadLeader(other.getHadLeader());
        }
        if (other.hasHadMatch()) {
          setHadMatch(other.getHadMatch());
        }
        if (other.hasPfUserInfo()) {
          bitField0_ |= 0x00000100;
          pfUserInfo_ = other.pfUserInfo_;
          
        }
        if (other.hasPfYellowUserInfo()) {
          bitField0_ |= 0x00000200;
          pfYellowUserInfo_ = other.pfYellowUserInfo_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoleId()) {
          
          return false;
        }
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasBattleScore()) {
          
          return false;
        }
        if (!hasHadElite()) {
          
          return false;
        }
        if (!hasHadReady()) {
          
          return false;
        }
        if (!hasHadLeader()) {
          
          return false;
        }
        if (!hasHadMatch()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.TankTeamItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.TankTeamItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 roleId = 1;
      private int roleId_ ;
      /**
       * <code>required uint32 roleId = 1;</code>
       *
       * <pre>
       *角色ID
       * </pre>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       *
       * <pre>
       *角色ID
       * </pre>
       */
      public int getRoleId() {
        return roleId_;
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       *
       * <pre>
       *角色ID
       * </pre>
       */
      public Builder setRoleId(int value) {
        bitField0_ |= 0x00000001;
        roleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 roleId = 1;</code>
       *
       * <pre>
       *角色ID
       * </pre>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleId_ = 0;
        
        return this;
      }

      // required uint32 tankId = 2;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000002;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 2;</code>
       *
       * <pre>
       *坦克ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tankId_ = 0;
        
        return this;
      }

      // required string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       *玩家名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }

      // required uint32 battleScore = 4;
      private int battleScore_ ;
      /**
       * <code>required uint32 battleScore = 4;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public boolean hasBattleScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 battleScore = 4;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public int getBattleScore() {
        return battleScore_;
      }
      /**
       * <code>required uint32 battleScore = 4;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder setBattleScore(int value) {
        bitField0_ |= 0x00000008;
        battleScore_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 battleScore = 4;</code>
       *
       * <pre>
       *战斗力
       * </pre>
       */
      public Builder clearBattleScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        battleScore_ = 0;
        
        return this;
      }

      // required bool hadElite = 5;
      private boolean hadElite_ ;
      /**
       * <code>required bool hadElite = 5;</code>
       *
       * <pre>
       *是否为精英
       * </pre>
       */
      public boolean hasHadElite() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool hadElite = 5;</code>
       *
       * <pre>
       *是否为精英
       * </pre>
       */
      public boolean getHadElite() {
        return hadElite_;
      }
      /**
       * <code>required bool hadElite = 5;</code>
       *
       * <pre>
       *是否为精英
       * </pre>
       */
      public Builder setHadElite(boolean value) {
        bitField0_ |= 0x00000010;
        hadElite_ = value;
        
        return this;
      }
      /**
       * <code>required bool hadElite = 5;</code>
       *
       * <pre>
       *是否为精英
       * </pre>
       */
      public Builder clearHadElite() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hadElite_ = false;
        
        return this;
      }

      // required bool hadReady = 6;
      private boolean hadReady_ ;
      /**
       * <code>required bool hadReady = 6;</code>
       *
       * <pre>
       *是否已准备
       * </pre>
       */
      public boolean hasHadReady() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool hadReady = 6;</code>
       *
       * <pre>
       *是否已准备
       * </pre>
       */
      public boolean getHadReady() {
        return hadReady_;
      }
      /**
       * <code>required bool hadReady = 6;</code>
       *
       * <pre>
       *是否已准备
       * </pre>
       */
      public Builder setHadReady(boolean value) {
        bitField0_ |= 0x00000020;
        hadReady_ = value;
        
        return this;
      }
      /**
       * <code>required bool hadReady = 6;</code>
       *
       * <pre>
       *是否已准备
       * </pre>
       */
      public Builder clearHadReady() {
        bitField0_ = (bitField0_ & ~0x00000020);
        hadReady_ = false;
        
        return this;
      }

      // required bool hadLeader = 7;
      private boolean hadLeader_ ;
      /**
       * <code>required bool hadLeader = 7;</code>
       *
       * <pre>
       *是否为队长	
       * </pre>
       */
      public boolean hasHadLeader() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bool hadLeader = 7;</code>
       *
       * <pre>
       *是否为队长	
       * </pre>
       */
      public boolean getHadLeader() {
        return hadLeader_;
      }
      /**
       * <code>required bool hadLeader = 7;</code>
       *
       * <pre>
       *是否为队长	
       * </pre>
       */
      public Builder setHadLeader(boolean value) {
        bitField0_ |= 0x00000040;
        hadLeader_ = value;
        
        return this;
      }
      /**
       * <code>required bool hadLeader = 7;</code>
       *
       * <pre>
       *是否为队长	
       * </pre>
       */
      public Builder clearHadLeader() {
        bitField0_ = (bitField0_ & ~0x00000040);
        hadLeader_ = false;
        
        return this;
      }

      // required bool hadMatch = 8;
      private boolean hadMatch_ ;
      /**
       * <code>required bool hadMatch = 8;</code>
       *
       * <pre>
       *是否在匹配中	
       * </pre>
       */
      public boolean hasHadMatch() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required bool hadMatch = 8;</code>
       *
       * <pre>
       *是否在匹配中	
       * </pre>
       */
      public boolean getHadMatch() {
        return hadMatch_;
      }
      /**
       * <code>required bool hadMatch = 8;</code>
       *
       * <pre>
       *是否在匹配中	
       * </pre>
       */
      public Builder setHadMatch(boolean value) {
        bitField0_ |= 0x00000080;
        hadMatch_ = value;
        
        return this;
      }
      /**
       * <code>required bool hadMatch = 8;</code>
       *
       * <pre>
       *是否在匹配中	
       * </pre>
       */
      public Builder clearHadMatch() {
        bitField0_ = (bitField0_ & ~0x00000080);
        hadMatch_ = false;
        
        return this;
      }

      // optional string pfUserInfo = 9;
      private java.lang.Object pfUserInfo_ = "";
      /**
       * <code>optional string pfUserInfo = 9;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public boolean hasPfUserInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string pfUserInfo = 9;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public java.lang.String getPfUserInfo() {
        java.lang.Object ref = pfUserInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pfUserInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pfUserInfo = 9;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPfUserInfoBytes() {
        java.lang.Object ref = pfUserInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pfUserInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pfUserInfo = 9;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder setPfUserInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        pfUserInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string pfUserInfo = 9;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder clearPfUserInfo() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pfUserInfo_ = getDefaultInstance().getPfUserInfo();
        
        return this;
      }
      /**
       * <code>optional string pfUserInfo = 9;</code>
       *
       * <pre>
       *蓝钻信息	
       * </pre>
       */
      public Builder setPfUserInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        pfUserInfo_ = value;
        
        return this;
      }

      // optional string pfYellowUserInfo = 10;
      private java.lang.Object pfYellowUserInfo_ = "";
      /**
       * <code>optional string pfYellowUserInfo = 10;</code>
       *
       * <pre>
       *黄钻信息	
       * </pre>
       */
      public boolean hasPfYellowUserInfo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string pfYellowUserInfo = 10;</code>
       *
       * <pre>
       *黄钻信息	
       * </pre>
       */
      public java.lang.String getPfYellowUserInfo() {
        java.lang.Object ref = pfYellowUserInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pfYellowUserInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pfYellowUserInfo = 10;</code>
       *
       * <pre>
       *黄钻信息	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPfYellowUserInfoBytes() {
        java.lang.Object ref = pfYellowUserInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pfYellowUserInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pfYellowUserInfo = 10;</code>
       *
       * <pre>
       *黄钻信息	
       * </pre>
       */
      public Builder setPfYellowUserInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        pfYellowUserInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string pfYellowUserInfo = 10;</code>
       *
       * <pre>
       *黄钻信息	
       * </pre>
       */
      public Builder clearPfYellowUserInfo() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pfYellowUserInfo_ = getDefaultInstance().getPfYellowUserInfo();
        
        return this;
      }
      /**
       * <code>optional string pfYellowUserInfo = 10;</code>
       *
       * <pre>
       *黄钻信息	
       * </pre>
       */
      public Builder setPfYellowUserInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        pfYellowUserInfo_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.TankTeamItem)
    }

    static {
      defaultInstance = new TankTeamItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.TankTeamItem)
  }

  public interface CTS_TEAM_REQ_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();

    // required uint32 friendRoleId = 2;
    /**
     * <code>required uint32 friendRoleId = 2;</code>
     *
     * <pre>
     *被邀请好友角色ID
     * </pre>
     */
    boolean hasFriendRoleId();
    /**
     * <code>required uint32 friendRoleId = 2;</code>
     *
     * <pre>
     *被邀请好友角色ID
     * </pre>
     */
    int getFriendRoleId();

    // required .PROTO_MATCH.WAR_TYPE warType = 3;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 3;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 3;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();

    // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    boolean hasTeamReqFriend();
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_REQ_MSG}
   *
   * <pre>
   *组队邀请请求
   * </pre>
   */
  public static final class CTS_TEAM_REQ_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_REQ_MSGOrBuilder {
    // Use CTS_TEAM_REQ_MSG.newBuilder() to construct.
    private CTS_TEAM_REQ_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_REQ_MSG(boolean noInit) {}

    private static final CTS_TEAM_REQ_MSG defaultInstance;
    public static CTS_TEAM_REQ_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_REQ_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_REQ_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              friendRoleId_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                warType_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND value = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000008;
                teamReqFriend_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_REQ_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_REQ_MSG>() {
      public CTS_TEAM_REQ_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_REQ_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_REQ_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 friendRoleId = 2;
    public static final int FRIENDROLEID_FIELD_NUMBER = 2;
    private int friendRoleId_;
    /**
     * <code>required uint32 friendRoleId = 2;</code>
     *
     * <pre>
     *被邀请好友角色ID
     * </pre>
     */
    public boolean hasFriendRoleId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 friendRoleId = 2;</code>
     *
     * <pre>
     *被邀请好友角色ID
     * </pre>
     */
    public int getFriendRoleId() {
      return friendRoleId_;
    }

    // required .PROTO_MATCH.WAR_TYPE warType = 3;
    public static final int WARTYPE_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 3;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 3;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;
    public static final int TEAMREQFRIEND_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND teamReqFriend_;
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    public boolean hasTeamReqFriend() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend() {
      return teamReqFriend_;
    }

    private void initFields() {
      teamId_ = "";
      friendRoleId_ = 0;
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFriendRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, friendRoleId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, warType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, teamReqFriend_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, friendRoleId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, warType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, teamReqFriend_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_REQ_MSG}
     *
     * <pre>
     *组队邀请请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        friendRoleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.friendRoleId_ = friendRoleId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.warType_ = warType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamReqFriend_ = teamReqFriend_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        if (other.hasFriendRoleId()) {
          setFriendRoleId(other.getFriendRoleId());
        }
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        if (other.hasTeamReqFriend()) {
          setTeamReqFriend(other.getTeamReqFriend());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        if (!hasFriendRoleId()) {
          
          return false;
        }
        if (!hasWarType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REQ_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // required uint32 friendRoleId = 2;
      private int friendRoleId_ ;
      /**
       * <code>required uint32 friendRoleId = 2;</code>
       *
       * <pre>
       *被邀请好友角色ID
       * </pre>
       */
      public boolean hasFriendRoleId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 friendRoleId = 2;</code>
       *
       * <pre>
       *被邀请好友角色ID
       * </pre>
       */
      public int getFriendRoleId() {
        return friendRoleId_;
      }
      /**
       * <code>required uint32 friendRoleId = 2;</code>
       *
       * <pre>
       *被邀请好友角色ID
       * </pre>
       */
      public Builder setFriendRoleId(int value) {
        bitField0_ |= 0x00000002;
        friendRoleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 friendRoleId = 2;</code>
       *
       * <pre>
       *被邀请好友角色ID
       * </pre>
       */
      public Builder clearFriendRoleId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        friendRoleId_ = 0;
        
        return this;
      }

      // required .PROTO_MATCH.WAR_TYPE warType = 3;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 3;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 3;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 3;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 3;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public boolean hasTeamReqFriend() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend() {
        return teamReqFriend_;
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public Builder setTeamReqFriend(com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        teamReqFriend_ = value;
        
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 4;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public Builder clearTeamReqFriend() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_REQ_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_REQ_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_REQ_MSG)
  }

  public interface STC_TEAM_REQ_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();

    // required uint32 reqRoleId = 2;
    /**
     * <code>required uint32 reqRoleId = 2;</code>
     *
     * <pre>
     *邀请者角色ID
     * </pre>
     */
    boolean hasReqRoleId();
    /**
     * <code>required uint32 reqRoleId = 2;</code>
     *
     * <pre>
     *邀请者角色ID
     * </pre>
     */
    int getReqRoleId();

    // required string reqName = 3;
    /**
     * <code>required string reqName = 3;</code>
     *
     * <pre>
     *邀请者角色名称
     * </pre>
     */
    boolean hasReqName();
    /**
     * <code>required string reqName = 3;</code>
     *
     * <pre>
     *邀请者角色名称
     * </pre>
     */
    java.lang.String getReqName();
    /**
     * <code>required string reqName = 3;</code>
     *
     * <pre>
     *邀请者角色名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getReqNameBytes();

    // required .PROTO_MATCH.WAR_TYPE warType = 4;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 4;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 4;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();

    // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    boolean hasTeamReqFriend();
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_TEAM_REQ_MSG}
   *
   * <pre>
   *主推给被邀请者
   * </pre>
   */
  public static final class STC_TEAM_REQ_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TEAM_REQ_MSGOrBuilder {
    // Use STC_TEAM_REQ_MSG.newBuilder() to construct.
    private STC_TEAM_REQ_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TEAM_REQ_MSG(boolean noInit) {}

    private static final STC_TEAM_REQ_MSG defaultInstance;
    public static STC_TEAM_REQ_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TEAM_REQ_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TEAM_REQ_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              reqRoleId_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              reqName_ = input.readBytes();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000008;
                warType_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND value = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000010;
                teamReqFriend_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TEAM_REQ_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TEAM_REQ_MSG>() {
      public STC_TEAM_REQ_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TEAM_REQ_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TEAM_REQ_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 reqRoleId = 2;
    public static final int REQROLEID_FIELD_NUMBER = 2;
    private int reqRoleId_;
    /**
     * <code>required uint32 reqRoleId = 2;</code>
     *
     * <pre>
     *邀请者角色ID
     * </pre>
     */
    public boolean hasReqRoleId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 reqRoleId = 2;</code>
     *
     * <pre>
     *邀请者角色ID
     * </pre>
     */
    public int getReqRoleId() {
      return reqRoleId_;
    }

    // required string reqName = 3;
    public static final int REQNAME_FIELD_NUMBER = 3;
    private java.lang.Object reqName_;
    /**
     * <code>required string reqName = 3;</code>
     *
     * <pre>
     *邀请者角色名称
     * </pre>
     */
    public boolean hasReqName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string reqName = 3;</code>
     *
     * <pre>
     *邀请者角色名称
     * </pre>
     */
    public java.lang.String getReqName() {
      java.lang.Object ref = reqName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reqName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string reqName = 3;</code>
     *
     * <pre>
     *邀请者角色名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReqNameBytes() {
      java.lang.Object ref = reqName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reqName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PROTO_MATCH.WAR_TYPE warType = 4;
    public static final int WARTYPE_FIELD_NUMBER = 4;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 4;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 4;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;
    public static final int TEAMREQFRIEND_FIELD_NUMBER = 5;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND teamReqFriend_;
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    public boolean hasTeamReqFriend() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend() {
      return teamReqFriend_;
    }

    private void initFields() {
      teamId_ = "";
      reqRoleId_ = 0;
      reqName_ = "";
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReqRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReqName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, reqRoleId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getReqNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, warType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, teamReqFriend_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, reqRoleId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getReqNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, warType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, teamReqFriend_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_TEAM_REQ_MSG}
     *
     * <pre>
     *主推给被邀请者
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        reqRoleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        reqName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000008);
        teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.reqRoleId_ = reqRoleId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.reqName_ = reqName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.warType_ = warType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.teamReqFriend_ = teamReqFriend_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        if (other.hasReqRoleId()) {
          setReqRoleId(other.getReqRoleId());
        }
        if (other.hasReqName()) {
          bitField0_ |= 0x00000004;
          reqName_ = other.reqName_;
          
        }
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        if (other.hasTeamReqFriend()) {
          setTeamReqFriend(other.getTeamReqFriend());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        if (!hasReqRoleId()) {
          
          return false;
        }
        if (!hasReqName()) {
          
          return false;
        }
        if (!hasWarType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REQ_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID	
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // required uint32 reqRoleId = 2;
      private int reqRoleId_ ;
      /**
       * <code>required uint32 reqRoleId = 2;</code>
       *
       * <pre>
       *邀请者角色ID
       * </pre>
       */
      public boolean hasReqRoleId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 reqRoleId = 2;</code>
       *
       * <pre>
       *邀请者角色ID
       * </pre>
       */
      public int getReqRoleId() {
        return reqRoleId_;
      }
      /**
       * <code>required uint32 reqRoleId = 2;</code>
       *
       * <pre>
       *邀请者角色ID
       * </pre>
       */
      public Builder setReqRoleId(int value) {
        bitField0_ |= 0x00000002;
        reqRoleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 reqRoleId = 2;</code>
       *
       * <pre>
       *邀请者角色ID
       * </pre>
       */
      public Builder clearReqRoleId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        reqRoleId_ = 0;
        
        return this;
      }

      // required string reqName = 3;
      private java.lang.Object reqName_ = "";
      /**
       * <code>required string reqName = 3;</code>
       *
       * <pre>
       *邀请者角色名称
       * </pre>
       */
      public boolean hasReqName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string reqName = 3;</code>
       *
       * <pre>
       *邀请者角色名称
       * </pre>
       */
      public java.lang.String getReqName() {
        java.lang.Object ref = reqName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          reqName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string reqName = 3;</code>
       *
       * <pre>
       *邀请者角色名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReqNameBytes() {
        java.lang.Object ref = reqName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reqName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string reqName = 3;</code>
       *
       * <pre>
       *邀请者角色名称
       * </pre>
       */
      public Builder setReqName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        reqName_ = value;
        
        return this;
      }
      /**
       * <code>required string reqName = 3;</code>
       *
       * <pre>
       *邀请者角色名称
       * </pre>
       */
      public Builder clearReqName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reqName_ = getDefaultInstance().getReqName();
        
        return this;
      }
      /**
       * <code>required string reqName = 3;</code>
       *
       * <pre>
       *邀请者角色名称
       * </pre>
       */
      public Builder setReqNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        reqName_ = value;
        
        return this;
      }

      // required .PROTO_MATCH.WAR_TYPE warType = 4;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 4;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 4;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 4;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 4;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public boolean hasTeamReqFriend() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend() {
        return teamReqFriend_;
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public Builder setTeamReqFriend(com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        teamReqFriend_ = value;
        
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 5;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public Builder clearTeamReqFriend() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_TEAM_REQ_MSG)
    }

    static {
      defaultInstance = new STC_TEAM_REQ_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_TEAM_REQ_MSG)
  }

  public interface CTS_TEAM_AGREE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();

    // optional int32 reqRoleId = 2;
    /**
     * <code>optional int32 reqRoleId = 2;</code>
     *
     * <pre>
     *邀请者ID
     * </pre>
     */
    boolean hasReqRoleId();
    /**
     * <code>optional int32 reqRoleId = 2;</code>
     *
     * <pre>
     *邀请者ID
     * </pre>
     */
    int getReqRoleId();

    // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    boolean hasTeamReqFriend();
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_AGREE_MSG}
   *
   * <pre>
   *同意邀请组队(给双方返回队伍信息 STC_TEAM_INFO_MSG)
   * </pre>
   */
  public static final class CTS_TEAM_AGREE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_AGREE_MSGOrBuilder {
    // Use CTS_TEAM_AGREE_MSG.newBuilder() to construct.
    private CTS_TEAM_AGREE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_AGREE_MSG(boolean noInit) {}

    private static final CTS_TEAM_AGREE_MSG defaultInstance;
    public static CTS_TEAM_AGREE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_AGREE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_AGREE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              reqRoleId_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND value = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                teamReqFriend_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_AGREE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_AGREE_MSG>() {
      public CTS_TEAM_AGREE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_AGREE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_AGREE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 reqRoleId = 2;
    public static final int REQROLEID_FIELD_NUMBER = 2;
    private int reqRoleId_;
    /**
     * <code>optional int32 reqRoleId = 2;</code>
     *
     * <pre>
     *邀请者ID
     * </pre>
     */
    public boolean hasReqRoleId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 reqRoleId = 2;</code>
     *
     * <pre>
     *邀请者ID
     * </pre>
     */
    public int getReqRoleId() {
      return reqRoleId_;
    }

    // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;
    public static final int TEAMREQFRIEND_FIELD_NUMBER = 3;
    private com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND teamReqFriend_;
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    public boolean hasTeamReqFriend() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;</code>
     *
     * <pre>
     *邀请类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend() {
      return teamReqFriend_;
    }

    private void initFields() {
      teamId_ = "";
      reqRoleId_ = 0;
      teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, reqRoleId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, teamReqFriend_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, reqRoleId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, teamReqFriend_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_AGREE_MSG}
     *
     * <pre>
     *同意邀请组队(给双方返回队伍信息 STC_TEAM_INFO_MSG)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        reqRoleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.reqRoleId_ = reqRoleId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamReqFriend_ = teamReqFriend_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        if (other.hasReqRoleId()) {
          setReqRoleId(other.getReqRoleId());
        }
        if (other.hasTeamReqFriend()) {
          setTeamReqFriend(other.getTeamReqFriend());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_AGREE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍ID
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // optional int32 reqRoleId = 2;
      private int reqRoleId_ ;
      /**
       * <code>optional int32 reqRoleId = 2;</code>
       *
       * <pre>
       *邀请者ID
       * </pre>
       */
      public boolean hasReqRoleId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 reqRoleId = 2;</code>
       *
       * <pre>
       *邀请者ID
       * </pre>
       */
      public int getReqRoleId() {
        return reqRoleId_;
      }
      /**
       * <code>optional int32 reqRoleId = 2;</code>
       *
       * <pre>
       *邀请者ID
       * </pre>
       */
      public Builder setReqRoleId(int value) {
        bitField0_ |= 0x00000002;
        reqRoleId_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 reqRoleId = 2;</code>
       *
       * <pre>
       *邀请者ID
       * </pre>
       */
      public Builder clearReqRoleId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        reqRoleId_ = 0;
        
        return this;
      }

      // optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;
      private com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public boolean hasTeamReqFriend() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND getTeamReqFriend() {
        return teamReqFriend_;
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public Builder setTeamReqFriend(com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        teamReqFriend_ = value;
        
        return this;
      }
      /**
       * <code>optional .PROTO_MATCH.TEAM_REQ_FRIEND teamReqFriend = 3;</code>
       *
       * <pre>
       *邀请类型
       * </pre>
       */
      public Builder clearTeamReqFriend() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamReqFriend_ = com.ourpalm.tank.message.MATCH_MSG.TEAM_REQ_FRIEND.FRIEND_TYPE;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_AGREE_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_AGREE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_AGREE_MSG)
  }

  public interface STC_TEAM_INCOME_ADD_NUM_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int32 num = 1;
    /**
     * <code>optional int32 num = 1;</code>
     */
    boolean hasNum();
    /**
     * <code>optional int32 num = 1;</code>
     */
    int getNum();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_TEAM_INCOME_ADD_NUM_MSG}
   *
   * <pre>
   *组队、军团收益加成的百分比，在组队成功，退出队伍时，要刷新
   * </pre>
   */
  public static final class STC_TEAM_INCOME_ADD_NUM_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TEAM_INCOME_ADD_NUM_MSGOrBuilder {
    // Use STC_TEAM_INCOME_ADD_NUM_MSG.newBuilder() to construct.
    private STC_TEAM_INCOME_ADD_NUM_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TEAM_INCOME_ADD_NUM_MSG(boolean noInit) {}

    private static final STC_TEAM_INCOME_ADD_NUM_MSG defaultInstance;
    public static STC_TEAM_INCOME_ADD_NUM_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TEAM_INCOME_ADD_NUM_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TEAM_INCOME_ADD_NUM_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              num_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TEAM_INCOME_ADD_NUM_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TEAM_INCOME_ADD_NUM_MSG>() {
      public STC_TEAM_INCOME_ADD_NUM_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TEAM_INCOME_ADD_NUM_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TEAM_INCOME_ADD_NUM_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 num = 1;
    public static final int NUM_FIELD_NUMBER = 1;
    private int num_;
    /**
     * <code>optional int32 num = 1;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 num = 1;</code>
     */
    public int getNum() {
      return num_;
    }

    private void initFields() {
      num_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, num_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, num_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_TEAM_INCOME_ADD_NUM_MSG}
     *
     * <pre>
     *组队、军团收益加成的百分比，在组队成功，退出队伍时，要刷新
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.num_ = num_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG.getDefaultInstance()) return this;
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_INCOME_ADD_NUM_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 num = 1;
      private int num_ ;
      /**
       * <code>optional int32 num = 1;</code>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 num = 1;</code>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <code>optional int32 num = 1;</code>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000001;
        num_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 num = 1;</code>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_TEAM_INCOME_ADD_NUM_MSG)
    }

    static {
      defaultInstance = new STC_TEAM_INCOME_ADD_NUM_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_TEAM_INCOME_ADD_NUM_MSG)
  }

  public interface CTS_TEAM_REFUSE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 reqRoleId = 1;
    /**
     * <code>required uint32 reqRoleId = 1;</code>
     *
     * <pre>
     *邀请者角色ID
     * </pre>
     */
    boolean hasReqRoleId();
    /**
     * <code>required uint32 reqRoleId = 1;</code>
     *
     * <pre>
     *邀请者角色ID
     * </pre>
     */
    int getReqRoleId();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_REFUSE_MSG}
   *
   * <pre>
   *拒绝邀请组队
   * </pre>
   */
  public static final class CTS_TEAM_REFUSE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_REFUSE_MSGOrBuilder {
    // Use CTS_TEAM_REFUSE_MSG.newBuilder() to construct.
    private CTS_TEAM_REFUSE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_REFUSE_MSG(boolean noInit) {}

    private static final CTS_TEAM_REFUSE_MSG defaultInstance;
    public static CTS_TEAM_REFUSE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_REFUSE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_REFUSE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              reqRoleId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_REFUSE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_REFUSE_MSG>() {
      public CTS_TEAM_REFUSE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_REFUSE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_REFUSE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 reqRoleId = 1;
    public static final int REQROLEID_FIELD_NUMBER = 1;
    private int reqRoleId_;
    /**
     * <code>required uint32 reqRoleId = 1;</code>
     *
     * <pre>
     *邀请者角色ID
     * </pre>
     */
    public boolean hasReqRoleId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 reqRoleId = 1;</code>
     *
     * <pre>
     *邀请者角色ID
     * </pre>
     */
    public int getReqRoleId() {
      return reqRoleId_;
    }

    private void initFields() {
      reqRoleId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasReqRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, reqRoleId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, reqRoleId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_REFUSE_MSG}
     *
     * <pre>
     *拒绝邀请组队
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        reqRoleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.reqRoleId_ = reqRoleId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG.getDefaultInstance()) return this;
        if (other.hasReqRoleId()) {
          setReqRoleId(other.getReqRoleId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReqRoleId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_REFUSE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 reqRoleId = 1;
      private int reqRoleId_ ;
      /**
       * <code>required uint32 reqRoleId = 1;</code>
       *
       * <pre>
       *邀请者角色ID
       * </pre>
       */
      public boolean hasReqRoleId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 reqRoleId = 1;</code>
       *
       * <pre>
       *邀请者角色ID
       * </pre>
       */
      public int getReqRoleId() {
        return reqRoleId_;
      }
      /**
       * <code>required uint32 reqRoleId = 1;</code>
       *
       * <pre>
       *邀请者角色ID
       * </pre>
       */
      public Builder setReqRoleId(int value) {
        bitField0_ |= 0x00000001;
        reqRoleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 reqRoleId = 1;</code>
       *
       * <pre>
       *邀请者角色ID
       * </pre>
       */
      public Builder clearReqRoleId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reqRoleId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_REFUSE_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_REFUSE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_REFUSE_MSG)
  }

  public interface STC_TEAM_REFUSE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string info = 1;
    /**
     * <code>required string info = 1;</code>
     *
     * <pre>
     *拒绝提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 1;</code>
     *
     * <pre>
     *拒绝提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 1;</code>
     *
     * <pre>
     *拒绝提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_TEAM_REFUSE_MSG}
   *
   * <pre>
   *拒绝邀请组队主推给邀请者
   * </pre>
   */
  public static final class STC_TEAM_REFUSE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TEAM_REFUSE_MSGOrBuilder {
    // Use STC_TEAM_REFUSE_MSG.newBuilder() to construct.
    private STC_TEAM_REFUSE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TEAM_REFUSE_MSG(boolean noInit) {}

    private static final STC_TEAM_REFUSE_MSG defaultInstance;
    public static STC_TEAM_REFUSE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TEAM_REFUSE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TEAM_REFUSE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TEAM_REFUSE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TEAM_REFUSE_MSG>() {
      public STC_TEAM_REFUSE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TEAM_REFUSE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TEAM_REFUSE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private java.lang.Object info_;
    /**
     * <code>required string info = 1;</code>
     *
     * <pre>
     *拒绝提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string info = 1;</code>
     *
     * <pre>
     *拒绝提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 1;</code>
     *
     * <pre>
     *拒绝提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      info_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_TEAM_REFUSE_MSG}
     *
     * <pre>
     *拒绝邀请组队主推给邀请者
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          bitField0_ |= 0x00000001;
          info_ = other.info_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasInfo()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_REFUSE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string info = 1;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 1;</code>
       *
       * <pre>
       *拒绝提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string info = 1;</code>
       *
       * <pre>
       *拒绝提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 1;</code>
       *
       * <pre>
       *拒绝提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 1;</code>
       *
       * <pre>
       *拒绝提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 1;</code>
       *
       * <pre>
       *拒绝提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 1;</code>
       *
       * <pre>
       *拒绝提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        info_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_TEAM_REFUSE_MSG)
    }

    static {
      defaultInstance = new STC_TEAM_REFUSE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_TEAM_REFUSE_MSG)
  }

  public interface CTS_TEAM_CHANGE_TANK_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required uint32 tankId = 1;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *出战坦克ID
     * </pre>
     */
    boolean hasTankId();
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *出战坦克ID
     * </pre>
     */
    int getTankId();

    // required string teamId = 2;
    /**
     * <code>required string teamId = 2;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 2;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 2;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_CHANGE_TANK_MSG}
   *
   * <pre>
   *更换出战坦克
   * </pre>
   */
  public static final class CTS_TEAM_CHANGE_TANK_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_CHANGE_TANK_MSGOrBuilder {
    // Use CTS_TEAM_CHANGE_TANK_MSG.newBuilder() to construct.
    private CTS_TEAM_CHANGE_TANK_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_CHANGE_TANK_MSG(boolean noInit) {}

    private static final CTS_TEAM_CHANGE_TANK_MSG defaultInstance;
    public static CTS_TEAM_CHANGE_TANK_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_CHANGE_TANK_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_CHANGE_TANK_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tankId_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              teamId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_CHANGE_TANK_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_CHANGE_TANK_MSG>() {
      public CTS_TEAM_CHANGE_TANK_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_CHANGE_TANK_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_CHANGE_TANK_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 tankId = 1;
    public static final int TANKID_FIELD_NUMBER = 1;
    private int tankId_;
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *出战坦克ID
     * </pre>
     */
    public boolean hasTankId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tankId = 1;</code>
     *
     * <pre>
     *出战坦克ID
     * </pre>
     */
    public int getTankId() {
      return tankId_;
    }

    // required string teamId = 2;
    public static final int TEAMID_FIELD_NUMBER = 2;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 2;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string teamId = 2;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 2;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      tankId_ = 0;
      teamId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTankId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTeamIdBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tankId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTeamIdBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_CHANGE_TANK_MSG}
     *
     * <pre>
     *更换出战坦克
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tankId_ = tankId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamId_ = teamId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG.getDefaultInstance()) return this;
        if (other.hasTankId()) {
          setTankId(other.getTankId());
        }
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000002;
          teamId_ = other.teamId_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTankId()) {
          
          return false;
        }
        if (!hasTeamId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CHANGE_TANK_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 tankId = 1;
      private int tankId_ ;
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *出战坦克ID
       * </pre>
       */
      public boolean hasTankId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *出战坦克ID
       * </pre>
       */
      public int getTankId() {
        return tankId_;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *出战坦克ID
       * </pre>
       */
      public Builder setTankId(int value) {
        bitField0_ |= 0x00000001;
        tankId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 tankId = 1;</code>
       *
       * <pre>
       *出战坦克ID
       * </pre>
       */
      public Builder clearTankId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tankId_ = 0;
        
        return this;
      }

      // required string teamId = 2;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 2;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string teamId = 2;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 2;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 2;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 2;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 2;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        teamId_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_CHANGE_TANK_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_CHANGE_TANK_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_CHANGE_TANK_MSG)
  }

  public interface STC_TEAM_CHANGE_TANK_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_MATCH.TankTeamItem tanks = 1;
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> 
        getTanksList();
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.TankTeamItem getTanks(int index);
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    int getTanksCount();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_TEAM_CHANGE_TANK_MSG}
   *
   * <pre>
   *出战坦克变化
   * </pre>
   */
  public static final class STC_TEAM_CHANGE_TANK_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TEAM_CHANGE_TANK_MSGOrBuilder {
    // Use STC_TEAM_CHANGE_TANK_MSG.newBuilder() to construct.
    private STC_TEAM_CHANGE_TANK_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TEAM_CHANGE_TANK_MSG(boolean noInit) {}

    private static final STC_TEAM_CHANGE_TANK_MSG defaultInstance;
    public static STC_TEAM_CHANGE_TANK_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TEAM_CHANGE_TANK_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TEAM_CHANGE_TANK_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              tanks_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TEAM_CHANGE_TANK_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TEAM_CHANGE_TANK_MSG>() {
      public STC_TEAM_CHANGE_TANK_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TEAM_CHANGE_TANK_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TEAM_CHANGE_TANK_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_MATCH.TankTeamItem tanks = 1;
    public static final int TANKS_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> tanks_;
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> getTanksList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.TankTeamItemOrBuilder> 
        getTanksOrBuilderList() {
      return tanks_;
    }
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public int getTanksCount() {
      return tanks_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankTeamItem getTanks(int index) {
      return tanks_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
     *
     * <pre>
     *坦克列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.TankTeamItemOrBuilder getTanksOrBuilder(
        int index) {
      return tanks_.get(index);
    }

    private void initFields() {
      tanks_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getTanksCount(); i++) {
        if (!getTanks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tanks_.size(); i++) {
        output.writeMessage(1, tanks_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tanks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tanks_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_TEAM_CHANGE_TANK_MSG}
     *
     * <pre>
     *出战坦克变化
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = java.util.Collections.unmodifiableList(tanks_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tanks_ = tanks_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG.getDefaultInstance()) return this;
        if (!other.tanks_.isEmpty()) {
          if (tanks_.isEmpty()) {
            tanks_ = other.tanks_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTanksIsMutable();
            tanks_.addAll(other.tanks_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getTanksCount(); i++) {
          if (!getTanks(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_CHANGE_TANK_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_MATCH.TankTeamItem tanks = 1;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> tanks_ =
        java.util.Collections.emptyList();
      private void ensureTanksIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tanks_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem>(tanks_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> getTanksList() {
        return java.util.Collections.unmodifiableList(tanks_);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public int getTanksCount() {
        return tanks_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.TankTeamItem getTanks(int index) {
        return tanks_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankTeamItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder setTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(com.ourpalm.tank.message.MATCH_MSG.TankTeamItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankTeamItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTanksIsMutable();
        tanks_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addTanks(
          int index, com.ourpalm.tank.message.MATCH_MSG.TankTeamItem.Builder builderForValue) {
        ensureTanksIsMutable();
        tanks_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder addAllTanks(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.TankTeamItem> values) {
        ensureTanksIsMutable();
        super.addAll(values, tanks_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder clearTanks() {
        tanks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.TankTeamItem tanks = 1;</code>
       *
       * <pre>
       *坦克列表
       * </pre>
       */
      public Builder removeTanks(int index) {
        ensureTanksIsMutable();
        tanks_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_TEAM_CHANGE_TANK_MSG)
    }

    static {
      defaultInstance = new STC_TEAM_CHANGE_TANK_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_TEAM_CHANGE_TANK_MSG)
  }

  public interface CTS_TEAM_READY_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_READY_MSG}
   *
   * <pre>
   *出战准备完成
   * </pre>
   */
  public static final class CTS_TEAM_READY_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_READY_MSGOrBuilder {
    // Use CTS_TEAM_READY_MSG.newBuilder() to construct.
    private CTS_TEAM_READY_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_READY_MSG(boolean noInit) {}

    private static final CTS_TEAM_READY_MSG defaultInstance;
    public static CTS_TEAM_READY_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_READY_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_READY_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_READY_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_READY_MSG>() {
      public CTS_TEAM_READY_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_READY_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_READY_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      teamId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_READY_MSG}
     *
     * <pre>
     *出战准备完成
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_READY_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_READY_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_READY_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_READY_MSG)
  }

  public interface CTS_TEAM_MATCH_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();

    // required .PROTO_MATCH.WAR_TYPE warType = 2;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_MATCH_MSG}
   *
   * <pre>
   *组队匹配
   * </pre>
   */
  public static final class CTS_TEAM_MATCH_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_MATCH_MSGOrBuilder {
    // Use CTS_TEAM_MATCH_MSG.newBuilder() to construct.
    private CTS_TEAM_MATCH_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_MATCH_MSG(boolean noInit) {}

    private static final CTS_TEAM_MATCH_MSG defaultInstance;
    public static CTS_TEAM_MATCH_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_MATCH_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_MATCH_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                warType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_MATCH_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_MATCH_MSG>() {
      public CTS_TEAM_MATCH_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_MATCH_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_MATCH_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PROTO_MATCH.WAR_TYPE warType = 2;
    public static final int WARTYPE_FIELD_NUMBER = 2;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    private void initFields() {
      teamId_ = "";
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, warType_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, warType_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_MATCH_MSG}
     *
     * <pre>
     *组队匹配
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.warType_ = warType_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        if (!hasWarType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_MATCH_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // required .PROTO_MATCH.WAR_TYPE warType = 2;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 2;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_MATCH_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_MATCH_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_MATCH_MSG)
  }

  public interface STC_TEAM_MATCH_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool result = 1;
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     *匹配结果
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     *匹配结果
     * </pre>
     */
    boolean getResult();

    // required string info = 2;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    java.lang.String getInfo();
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_TEAM_MATCH_MSG}
   *
   * <pre>
   *返回组队匹配
   * </pre>
   */
  public static final class STC_TEAM_MATCH_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_TEAM_MATCH_MSGOrBuilder {
    // Use STC_TEAM_MATCH_MSG.newBuilder() to construct.
    private STC_TEAM_MATCH_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_TEAM_MATCH_MSG(boolean noInit) {}

    private static final STC_TEAM_MATCH_MSG defaultInstance;
    public static STC_TEAM_MATCH_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_TEAM_MATCH_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_TEAM_MATCH_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_TEAM_MATCH_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_TEAM_MATCH_MSG>() {
      public STC_TEAM_MATCH_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_TEAM_MATCH_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_TEAM_MATCH_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     *匹配结果
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool result = 1;</code>
     *
     * <pre>
     *匹配结果
     * </pre>
     */
    public boolean getResult() {
      return result_;
    }

    // required string info = 2;
    public static final int INFO_FIELD_NUMBER = 2;
    private java.lang.Object info_;
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string info = 2;</code>
     *
     * <pre>
     *提示信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      result_ = false;
      info_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInfoBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInfoBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_TEAM_MATCH_MSG}
     *
     * <pre>
     *返回组队匹配
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00000002;
          info_ = other.info_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasInfo()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_TEAM_MATCH_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool result = 1;
      private boolean result_ ;
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       *匹配结果
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       *匹配结果
       * </pre>
       */
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       *匹配结果
       * </pre>
       */
      public Builder setResult(boolean value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        
        return this;
      }
      /**
       * <code>required bool result = 1;</code>
       *
       * <pre>
       *匹配结果
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = false;
        
        return this;
      }

      // required string info = 2;
      private java.lang.Object info_ = "";
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = getDefaultInstance().getInfo();
        
        return this;
      }
      /**
       * <code>required string info = 2;</code>
       *
       * <pre>
       *提示信息
       * </pre>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        info_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_TEAM_MATCH_MSG)
    }

    static {
      defaultInstance = new STC_TEAM_MATCH_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_TEAM_MATCH_MSG)
  }

  public interface CTS_TEAM_QUIT_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_QUIT_MSG}
   *
   * <pre>
   *退出队伍
   * </pre>
   */
  public static final class CTS_TEAM_QUIT_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_QUIT_MSGOrBuilder {
    // Use CTS_TEAM_QUIT_MSG.newBuilder() to construct.
    private CTS_TEAM_QUIT_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_QUIT_MSG(boolean noInit) {}

    private static final CTS_TEAM_QUIT_MSG defaultInstance;
    public static CTS_TEAM_QUIT_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_QUIT_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_QUIT_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_QUIT_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_QUIT_MSG>() {
      public CTS_TEAM_QUIT_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_QUIT_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_QUIT_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      teamId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_QUIT_MSG}
     *
     * <pre>
     *退出队伍
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_QUIT_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_QUIT_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_QUIT_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_QUIT_MSG)
  }

  public interface CTS_TEAM_GOAWAY_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();

    // required uint32 roleId = 2;
    /**
     * <code>required uint32 roleId = 2;</code>
     *
     * <pre>
     *被踢者
     * </pre>
     */
    boolean hasRoleId();
    /**
     * <code>required uint32 roleId = 2;</code>
     *
     * <pre>
     *被踢者
     * </pre>
     */
    int getRoleId();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_GOAWAY_MSG}
   *
   * <pre>
   *踢人出队伍
   * </pre>
   */
  public static final class CTS_TEAM_GOAWAY_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_GOAWAY_MSGOrBuilder {
    // Use CTS_TEAM_GOAWAY_MSG.newBuilder() to construct.
    private CTS_TEAM_GOAWAY_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_GOAWAY_MSG(boolean noInit) {}

    private static final CTS_TEAM_GOAWAY_MSG defaultInstance;
    public static CTS_TEAM_GOAWAY_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_GOAWAY_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_GOAWAY_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roleId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_GOAWAY_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_GOAWAY_MSG>() {
      public CTS_TEAM_GOAWAY_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_GOAWAY_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_GOAWAY_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint32 roleId = 2;
    public static final int ROLEID_FIELD_NUMBER = 2;
    private int roleId_;
    /**
     * <code>required uint32 roleId = 2;</code>
     *
     * <pre>
     *被踢者
     * </pre>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 roleId = 2;</code>
     *
     * <pre>
     *被踢者
     * </pre>
     */
    public int getRoleId() {
      return roleId_;
    }

    private void initFields() {
      teamId_ = "";
      roleId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, roleId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, roleId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_GOAWAY_MSG}
     *
     * <pre>
     *踢人出队伍
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        roleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roleId_ = roleId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        if (!hasRoleId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_GOAWAY_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // required uint32 roleId = 2;
      private int roleId_ ;
      /**
       * <code>required uint32 roleId = 2;</code>
       *
       * <pre>
       *被踢者
       * </pre>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 roleId = 2;</code>
       *
       * <pre>
       *被踢者
       * </pre>
       */
      public int getRoleId() {
        return roleId_;
      }
      /**
       * <code>required uint32 roleId = 2;</code>
       *
       * <pre>
       *被踢者
       * </pre>
       */
      public Builder setRoleId(int value) {
        bitField0_ |= 0x00000002;
        roleId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 roleId = 2;</code>
       *
       * <pre>
       *被踢者
       * </pre>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roleId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_GOAWAY_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_GOAWAY_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_GOAWAY_MSG)
  }

  public interface CTS_TEAM_CANCEL_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string teamId = 1;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    boolean hasTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    java.lang.String getTeamId();
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    com.google.protobuf.ByteString
        getTeamIdBytes();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_TEAM_CANCEL_MSG}
   *
   * <pre>
   *取消匹配
   * </pre>
   */
  public static final class CTS_TEAM_CANCEL_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_TEAM_CANCEL_MSGOrBuilder {
    // Use CTS_TEAM_CANCEL_MSG.newBuilder() to construct.
    private CTS_TEAM_CANCEL_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_TEAM_CANCEL_MSG(boolean noInit) {}

    private static final CTS_TEAM_CANCEL_MSG defaultInstance;
    public static CTS_TEAM_CANCEL_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_TEAM_CANCEL_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_TEAM_CANCEL_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_TEAM_CANCEL_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_TEAM_CANCEL_MSG>() {
      public CTS_TEAM_CANCEL_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_TEAM_CANCEL_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_TEAM_CANCEL_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string teamId = 1;
    public static final int TEAMID_FIELD_NUMBER = 1;
    private java.lang.Object teamId_;
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public java.lang.String getTeamId() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string teamId = 1;</code>
     *
     * <pre>
     *队伍id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTeamIdBytes() {
      java.lang.Object ref = teamId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      teamId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTeamId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamIdBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamIdBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_TEAM_CANCEL_MSG}
     *
     * <pre>
     *取消匹配
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          bitField0_ |= 0x00000001;
          teamId_ = other.teamId_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTeamId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_TEAM_CANCEL_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string teamId = 1;
      private java.lang.Object teamId_ = "";
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public java.lang.String getTeamId() {
        java.lang.Object ref = teamId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTeamIdBytes() {
        java.lang.Object ref = teamId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = getDefaultInstance().getTeamId();
        
        return this;
      }
      /**
       * <code>required string teamId = 1;</code>
       *
       * <pre>
       *队伍id
       * </pre>
       */
      public Builder setTeamIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamId_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_TEAM_CANCEL_MSG)
    }

    static {
      defaultInstance = new CTS_TEAM_CANCEL_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_TEAM_CANCEL_MSG)
  }

  public interface STC_MATCH_FRI_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_MATCH.FriendItem friends = 1;
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> 
        getFriendsList();
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.FriendItem getFriends(int index);
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    int getFriendsCount();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_MATCH_FRI_MSG}
   *
   * <pre>
   *获取匹配时好友列表
   * </pre>
   */
  public static final class STC_MATCH_FRI_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_MATCH_FRI_MSGOrBuilder {
    // Use STC_MATCH_FRI_MSG.newBuilder() to construct.
    private STC_MATCH_FRI_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_MATCH_FRI_MSG(boolean noInit) {}

    private static final STC_MATCH_FRI_MSG defaultInstance;
    public static STC_MATCH_FRI_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_MATCH_FRI_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_MATCH_FRI_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                friends_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.FriendItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              friends_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.FriendItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          friends_ = java.util.Collections.unmodifiableList(friends_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_MATCH_FRI_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_MATCH_FRI_MSG>() {
      public STC_MATCH_FRI_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_MATCH_FRI_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_MATCH_FRI_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_MATCH.FriendItem friends = 1;
    public static final int FRIENDS_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> friends_;
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> getFriendsList() {
      return friends_;
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder> 
        getFriendsOrBuilderList() {
      return friends_;
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public int getFriendsCount() {
      return friends_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.FriendItem getFriends(int index) {
      return friends_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
     *
     * <pre>
     *好友列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder getFriendsOrBuilder(
        int index) {
      return friends_.get(index);
    }

    private void initFields() {
      friends_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getFriendsCount(); i++) {
        if (!getFriends(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < friends_.size(); i++) {
        output.writeMessage(1, friends_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < friends_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, friends_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_MATCH_FRI_MSG}
     *
     * <pre>
     *获取匹配时好友列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        friends_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          friends_ = java.util.Collections.unmodifiableList(friends_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.friends_ = friends_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG.getDefaultInstance()) return this;
        if (!other.friends_.isEmpty()) {
          if (friends_.isEmpty()) {
            friends_ = other.friends_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFriendsIsMutable();
            friends_.addAll(other.friends_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFriendsCount(); i++) {
          if (!getFriends(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_FRI_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_MATCH.FriendItem friends = 1;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> friends_ =
        java.util.Collections.emptyList();
      private void ensureFriendsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          friends_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.FriendItem>(friends_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> getFriendsList() {
        return java.util.Collections.unmodifiableList(friends_);
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public int getFriendsCount() {
        return friends_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.FriendItem getFriends(int index) {
        return friends_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder setFriends(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendsIsMutable();
        friends_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder setFriends(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureFriendsIsMutable();
        friends_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addFriends(com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendsIsMutable();
        friends_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addFriends(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFriendsIsMutable();
        friends_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addFriends(
          com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureFriendsIsMutable();
        friends_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addFriends(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureFriendsIsMutable();
        friends_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder addAllFriends(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.FriendItem> values) {
        ensureFriendsIsMutable();
        super.addAll(values, friends_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder clearFriends() {
        friends_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem friends = 1;</code>
       *
       * <pre>
       *好友列表
       * </pre>
       */
      public Builder removeFriends(int index) {
        ensureFriendsIsMutable();
        friends_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_MATCH_FRI_MSG)
    }

    static {
      defaultInstance = new STC_MATCH_FRI_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_MATCH_FRI_MSG)
  }

  public interface CTS_MATCH_COUNT_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .PROTO_MATCH.WAR_TYPE warType = 1;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_MATCH_COUNT_MSG}
   *
   * <pre>
   *请求当前匹配人数
   * </pre>
   */
  public static final class CTS_MATCH_COUNT_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_MATCH_COUNT_MSGOrBuilder {
    // Use CTS_MATCH_COUNT_MSG.newBuilder() to construct.
    private CTS_MATCH_COUNT_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_MATCH_COUNT_MSG(boolean noInit) {}

    private static final CTS_MATCH_COUNT_MSG defaultInstance;
    public static CTS_MATCH_COUNT_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_MATCH_COUNT_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_MATCH_COUNT_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                warType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_MATCH_COUNT_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_MATCH_COUNT_MSG>() {
      public CTS_MATCH_COUNT_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_MATCH_COUNT_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_MATCH_COUNT_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .PROTO_MATCH.WAR_TYPE warType = 1;
    public static final int WARTYPE_FIELD_NUMBER = 1;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    private void initFields() {
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, warType_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, warType_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_MATCH_COUNT_MSG}
     *
     * <pre>
     *请求当前匹配人数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.warType_ = warType_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG.getDefaultInstance()) return this;
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWarType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_COUNT_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .PROTO_MATCH.WAR_TYPE warType = 1;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_MATCH_COUNT_MSG)
    }

    static {
      defaultInstance = new CTS_MATCH_COUNT_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_MATCH_COUNT_MSG)
  }

  public interface STC_MATCH_COUNT_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .PROTO_MATCH.WAR_TYPE warType = 1;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    boolean hasWarType();
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType();

    // required uint32 count = 2;
    /**
     * <code>required uint32 count = 2;</code>
     *
     * <pre>
     *当前匹配人数
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>required uint32 count = 2;</code>
     *
     * <pre>
     *当前匹配人数
     * </pre>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_MATCH_COUNT_MSG}
   *
   * <pre>
   *返回当前匹配人数
   * </pre>
   */
  public static final class STC_MATCH_COUNT_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_MATCH_COUNT_MSGOrBuilder {
    // Use STC_MATCH_COUNT_MSG.newBuilder() to construct.
    private STC_MATCH_COUNT_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_MATCH_COUNT_MSG(boolean noInit) {}

    private static final STC_MATCH_COUNT_MSG defaultInstance;
    public static STC_MATCH_COUNT_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_MATCH_COUNT_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_MATCH_COUNT_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                warType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_MATCH_COUNT_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_MATCH_COUNT_MSG>() {
      public STC_MATCH_COUNT_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_MATCH_COUNT_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_MATCH_COUNT_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .PROTO_MATCH.WAR_TYPE warType = 1;
    public static final int WARTYPE_FIELD_NUMBER = 1;
    private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_;
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public boolean hasWarType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
     *
     * <pre>
     *战场类型
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
      return warType_;
    }

    // required uint32 count = 2;
    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>required uint32 count = 2;</code>
     *
     * <pre>
     *当前匹配人数
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 count = 2;</code>
     *
     * <pre>
     *当前匹配人数
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    private void initFields() {
      warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      count_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, warType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, count_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, warType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_MATCH_COUNT_MSG}
     *
     * <pre>
     *返回当前匹配人数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.warType_ = warType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG.getDefaultInstance()) return this;
        if (other.hasWarType()) {
          setWarType(other.getWarType());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWarType()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_COUNT_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .PROTO_MATCH.WAR_TYPE warType = 1;
      private com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public boolean hasWarType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE getWarType() {
        return warType_;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder setWarType(com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        warType_ = value;
        
        return this;
      }
      /**
       * <code>required .PROTO_MATCH.WAR_TYPE warType = 1;</code>
       *
       * <pre>
       *战场类型
       * </pre>
       */
      public Builder clearWarType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        warType_ = com.ourpalm.tank.message.MATCH_MSG.WAR_TYPE.RANK;
        
        return this;
      }

      // required uint32 count = 2;
      private int count_ ;
      /**
       * <code>required uint32 count = 2;</code>
       *
       * <pre>
       *当前匹配人数
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 count = 2;</code>
       *
       * <pre>
       *当前匹配人数
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required uint32 count = 2;</code>
       *
       * <pre>
       *当前匹配人数
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 count = 2;</code>
       *
       * <pre>
       *当前匹配人数
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_MATCH_COUNT_MSG)
    }

    static {
      defaultInstance = new STC_MATCH_COUNT_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_MATCH_COUNT_MSG)
  }

  public interface STC_MATCH_CORPS_FRI_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_MATCH.FriendItem corpsRoles = 1;
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> 
        getCorpsRolesList();
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.FriendItem getCorpsRoles(int index);
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    int getCorpsRolesCount();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_MATCH_CORPS_FRI_MSG}
   *
   * <pre>
   *返回匹配队伍下的军团成员列表
   * </pre>
   */
  public static final class STC_MATCH_CORPS_FRI_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_MATCH_CORPS_FRI_MSGOrBuilder {
    // Use STC_MATCH_CORPS_FRI_MSG.newBuilder() to construct.
    private STC_MATCH_CORPS_FRI_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_MATCH_CORPS_FRI_MSG(boolean noInit) {}

    private static final STC_MATCH_CORPS_FRI_MSG defaultInstance;
    public static STC_MATCH_CORPS_FRI_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_MATCH_CORPS_FRI_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_MATCH_CORPS_FRI_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                corpsRoles_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.FriendItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              corpsRoles_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.FriendItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          corpsRoles_ = java.util.Collections.unmodifiableList(corpsRoles_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_MATCH_CORPS_FRI_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_MATCH_CORPS_FRI_MSG>() {
      public STC_MATCH_CORPS_FRI_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_MATCH_CORPS_FRI_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_MATCH_CORPS_FRI_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_MATCH.FriendItem corpsRoles = 1;
    public static final int CORPSROLES_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> corpsRoles_;
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> getCorpsRolesList() {
      return corpsRoles_;
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder> 
        getCorpsRolesOrBuilderList() {
      return corpsRoles_;
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public int getCorpsRolesCount() {
      return corpsRoles_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.FriendItem getCorpsRoles(int index) {
      return corpsRoles_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
     *
     * <pre>
     *军团成员列表
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.FriendItemOrBuilder getCorpsRolesOrBuilder(
        int index) {
      return corpsRoles_.get(index);
    }

    private void initFields() {
      corpsRoles_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCorpsRolesCount(); i++) {
        if (!getCorpsRoles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < corpsRoles_.size(); i++) {
        output.writeMessage(1, corpsRoles_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < corpsRoles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, corpsRoles_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_MATCH_CORPS_FRI_MSG}
     *
     * <pre>
     *返回匹配队伍下的军团成员列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        corpsRoles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          corpsRoles_ = java.util.Collections.unmodifiableList(corpsRoles_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.corpsRoles_ = corpsRoles_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG.getDefaultInstance()) return this;
        if (!other.corpsRoles_.isEmpty()) {
          if (corpsRoles_.isEmpty()) {
            corpsRoles_ = other.corpsRoles_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCorpsRolesIsMutable();
            corpsRoles_.addAll(other.corpsRoles_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCorpsRolesCount(); i++) {
          if (!getCorpsRoles(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_CORPS_FRI_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_MATCH.FriendItem corpsRoles = 1;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> corpsRoles_ =
        java.util.Collections.emptyList();
      private void ensureCorpsRolesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          corpsRoles_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.FriendItem>(corpsRoles_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.FriendItem> getCorpsRolesList() {
        return java.util.Collections.unmodifiableList(corpsRoles_);
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public int getCorpsRolesCount() {
        return corpsRoles_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.FriendItem getCorpsRoles(int index) {
        return corpsRoles_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder setCorpsRoles(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCorpsRolesIsMutable();
        corpsRoles_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder setCorpsRoles(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureCorpsRolesIsMutable();
        corpsRoles_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addCorpsRoles(com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCorpsRolesIsMutable();
        corpsRoles_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addCorpsRoles(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCorpsRolesIsMutable();
        corpsRoles_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addCorpsRoles(
          com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureCorpsRolesIsMutable();
        corpsRoles_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addCorpsRoles(
          int index, com.ourpalm.tank.message.MATCH_MSG.FriendItem.Builder builderForValue) {
        ensureCorpsRolesIsMutable();
        corpsRoles_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder addAllCorpsRoles(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.FriendItem> values) {
        ensureCorpsRolesIsMutable();
        super.addAll(values, corpsRoles_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder clearCorpsRoles() {
        corpsRoles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.FriendItem corpsRoles = 1;</code>
       *
       * <pre>
       *军团成员列表
       * </pre>
       */
      public Builder removeCorpsRoles(int index) {
        ensureCorpsRolesIsMutable();
        corpsRoles_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_MATCH_CORPS_FRI_MSG)
    }

    static {
      defaultInstance = new STC_MATCH_CORPS_FRI_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_MATCH_CORPS_FRI_MSG)
  }

  public interface CTS_MATCH_SCHEDULE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 schedule = 1;
    /**
     * <code>required int32 schedule = 1;</code>
     *
     * <pre>
     *准备进度
     * </pre>
     */
    boolean hasSchedule();
    /**
     * <code>required int32 schedule = 1;</code>
     *
     * <pre>
     *准备进度
     * </pre>
     */
    int getSchedule();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.CTS_MATCH_SCHEDULE_MSG}
   *
   * <pre>
   *准备进度
   * </pre>
   */
  public static final class CTS_MATCH_SCHEDULE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements CTS_MATCH_SCHEDULE_MSGOrBuilder {
    // Use CTS_MATCH_SCHEDULE_MSG.newBuilder() to construct.
    private CTS_MATCH_SCHEDULE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CTS_MATCH_SCHEDULE_MSG(boolean noInit) {}

    private static final CTS_MATCH_SCHEDULE_MSG defaultInstance;
    public static CTS_MATCH_SCHEDULE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public CTS_MATCH_SCHEDULE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CTS_MATCH_SCHEDULE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              schedule_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CTS_MATCH_SCHEDULE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<CTS_MATCH_SCHEDULE_MSG>() {
      public CTS_MATCH_SCHEDULE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CTS_MATCH_SCHEDULE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CTS_MATCH_SCHEDULE_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 schedule = 1;
    public static final int SCHEDULE_FIELD_NUMBER = 1;
    private int schedule_;
    /**
     * <code>required int32 schedule = 1;</code>
     *
     * <pre>
     *准备进度
     * </pre>
     */
    public boolean hasSchedule() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 schedule = 1;</code>
     *
     * <pre>
     *准备进度
     * </pre>
     */
    public int getSchedule() {
      return schedule_;
    }

    private void initFields() {
      schedule_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSchedule()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, schedule_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, schedule_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.CTS_MATCH_SCHEDULE_MSG}
     *
     * <pre>
     *准备进度
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        schedule_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG result = new com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.schedule_ = schedule_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG.getDefaultInstance()) return this;
        if (other.hasSchedule()) {
          setSchedule(other.getSchedule());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSchedule()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.CTS_MATCH_SCHEDULE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 schedule = 1;
      private int schedule_ ;
      /**
       * <code>required int32 schedule = 1;</code>
       *
       * <pre>
       *准备进度
       * </pre>
       */
      public boolean hasSchedule() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 schedule = 1;</code>
       *
       * <pre>
       *准备进度
       * </pre>
       */
      public int getSchedule() {
        return schedule_;
      }
      /**
       * <code>required int32 schedule = 1;</code>
       *
       * <pre>
       *准备进度
       * </pre>
       */
      public Builder setSchedule(int value) {
        bitField0_ |= 0x00000001;
        schedule_ = value;
        
        return this;
      }
      /**
       * <code>required int32 schedule = 1;</code>
       *
       * <pre>
       *准备进度
       * </pre>
       */
      public Builder clearSchedule() {
        bitField0_ = (bitField0_ & ~0x00000001);
        schedule_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.CTS_MATCH_SCHEDULE_MSG)
    }

    static {
      defaultInstance = new CTS_MATCH_SCHEDULE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.CTS_MATCH_SCHEDULE_MSG)
  }

  public interface MATCH_SCEDULE_INFOOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 roleId = 1;
    /**
     * <code>required int32 roleId = 1;</code>
     *
     * <pre>
     *roleId
     * </pre>
     */
    boolean hasRoleId();
    /**
     * <code>required int32 roleId = 1;</code>
     *
     * <pre>
     *roleId
     * </pre>
     */
    int getRoleId();

    // required int32 schedule = 2;
    /**
     * <code>required int32 schedule = 2;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    boolean hasSchedule();
    /**
     * <code>required int32 schedule = 2;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    int getSchedule();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.MATCH_SCEDULE_INFO}
   *
   * <pre>
   *进度体
   * </pre>
   */
  public static final class MATCH_SCEDULE_INFO extends
      com.google.protobuf.GeneratedMessageLite
      implements MATCH_SCEDULE_INFOOrBuilder {
    // Use MATCH_SCEDULE_INFO.newBuilder() to construct.
    private MATCH_SCEDULE_INFO(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private MATCH_SCEDULE_INFO(boolean noInit) {}

    private static final MATCH_SCEDULE_INFO defaultInstance;
    public static MATCH_SCEDULE_INFO getDefaultInstance() {
      return defaultInstance;
    }

    public MATCH_SCEDULE_INFO getDefaultInstanceForType() {
      return defaultInstance;
    }

    private MATCH_SCEDULE_INFO(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roleId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              schedule_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<MATCH_SCEDULE_INFO> PARSER =
        new com.google.protobuf.AbstractParser<MATCH_SCEDULE_INFO>() {
      public MATCH_SCEDULE_INFO parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MATCH_SCEDULE_INFO(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MATCH_SCEDULE_INFO> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private int roleId_;
    /**
     * <code>required int32 roleId = 1;</code>
     *
     * <pre>
     *roleId
     * </pre>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 roleId = 1;</code>
     *
     * <pre>
     *roleId
     * </pre>
     */
    public int getRoleId() {
      return roleId_;
    }

    // required int32 schedule = 2;
    public static final int SCHEDULE_FIELD_NUMBER = 2;
    private int schedule_;
    /**
     * <code>required int32 schedule = 2;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    public boolean hasSchedule() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 schedule = 2;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    public int getSchedule() {
      return schedule_;
    }

    private void initFields() {
      roleId_ = 0;
      schedule_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoleId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSchedule()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, schedule_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, schedule_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.MATCH_SCEDULE_INFO}
     *
     * <pre>
     *进度体
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFOOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roleId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        schedule_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO build() {
        com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO result = new com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roleId_ = roleId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.schedule_ = schedule_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasSchedule()) {
          setSchedule(other.getSchedule());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoleId()) {
          
          return false;
        }
        if (!hasSchedule()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 roleId = 1;
      private int roleId_ ;
      /**
       * <code>required int32 roleId = 1;</code>
       *
       * <pre>
       *roleId
       * </pre>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 roleId = 1;</code>
       *
       * <pre>
       *roleId
       * </pre>
       */
      public int getRoleId() {
        return roleId_;
      }
      /**
       * <code>required int32 roleId = 1;</code>
       *
       * <pre>
       *roleId
       * </pre>
       */
      public Builder setRoleId(int value) {
        bitField0_ |= 0x00000001;
        roleId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 roleId = 1;</code>
       *
       * <pre>
       *roleId
       * </pre>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roleId_ = 0;
        
        return this;
      }

      // required int32 schedule = 2;
      private int schedule_ ;
      /**
       * <code>required int32 schedule = 2;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public boolean hasSchedule() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 schedule = 2;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public int getSchedule() {
        return schedule_;
      }
      /**
       * <code>required int32 schedule = 2;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder setSchedule(int value) {
        bitField0_ |= 0x00000002;
        schedule_ = value;
        
        return this;
      }
      /**
       * <code>required int32 schedule = 2;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder clearSchedule() {
        bitField0_ = (bitField0_ & ~0x00000002);
        schedule_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.MATCH_SCEDULE_INFO)
    }

    static {
      defaultInstance = new MATCH_SCEDULE_INFO(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.MATCH_SCEDULE_INFO)
  }

  public interface STC_MATCH_SCHEDULE_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;
    /**
     * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    java.util.List<com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO> 
        getInfosList();
    /**
     * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO getInfos(int index);
    /**
     * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    int getInfosCount();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_MATCH_SCHEDULE_MSG}
   *
   * <pre>
   *准备进度返回
   * </pre>
   */
  public static final class STC_MATCH_SCHEDULE_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_MATCH_SCHEDULE_MSGOrBuilder {
    // Use STC_MATCH_SCHEDULE_MSG.newBuilder() to construct.
    private STC_MATCH_SCHEDULE_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_MATCH_SCHEDULE_MSG(boolean noInit) {}

    private static final STC_MATCH_SCHEDULE_MSG defaultInstance;
    public static STC_MATCH_SCHEDULE_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_MATCH_SCHEDULE_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_MATCH_SCHEDULE_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                infos_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO>();
                mutable_bitField0_ |= 0x00000001;
              }
              infos_.add(input.readMessage(com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = java.util.Collections.unmodifiableList(infos_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_MATCH_SCHEDULE_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_MATCH_SCHEDULE_MSG>() {
      public STC_MATCH_SCHEDULE_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_MATCH_SCHEDULE_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_MATCH_SCHEDULE_MSG> getParserForType() {
      return PARSER;
    }

    // repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;
    public static final int INFOS_FIELD_NUMBER = 1;
    private java.util.List<com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO> infos_;
    /**
     * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    public java.util.List<com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO> getInfosList() {
      return infos_;
    }
    /**
     * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    public java.util.List<? extends com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFOOrBuilder> 
        getInfosOrBuilderList() {
      return infos_;
    }
    /**
     * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    public int getInfosCount() {
      return infos_.size();
    }
    /**
     * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO getInfos(int index) {
      return infos_.get(index);
    }
    /**
     * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
     *
     * <pre>
     *进度
     * </pre>
     */
    public com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFOOrBuilder getInfosOrBuilder(
        int index) {
      return infos_.get(index);
    }

    private void initFields() {
      infos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getInfosCount(); i++) {
        if (!getInfos(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < infos_.size(); i++) {
        output.writeMessage(1, infos_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < infos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, infos_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_MATCH_SCHEDULE_MSG}
     *
     * <pre>
     *准备进度返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        infos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = java.util.Collections.unmodifiableList(infos_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.infos_ = infos_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG.getDefaultInstance()) return this;
        if (!other.infos_.isEmpty()) {
          if (infos_.isEmpty()) {
            infos_ = other.infos_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInfosIsMutable();
            infos_.addAll(other.infos_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getInfosCount(); i++) {
          if (!getInfos(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_MATCH_SCHEDULE_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;
      private java.util.List<com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO> infos_ =
        java.util.Collections.emptyList();
      private void ensureInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = new java.util.ArrayList<com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO>(infos_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public java.util.List<com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO> getInfosList() {
        return java.util.Collections.unmodifiableList(infos_);
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public int getInfosCount() {
        return infos_.size();
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO getInfos(int index) {
        return infos_.get(index);
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder setInfos(
          int index, com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder setInfos(
          int index, com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder addInfos(com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.add(value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder addInfos(
          int index, com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder addInfos(
          com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder addInfos(
          int index, com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO.Builder builderForValue) {
        ensureInfosIsMutable();
        infos_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder addAllInfos(
          java.lang.Iterable<? extends com.ourpalm.tank.message.MATCH_MSG.MATCH_SCEDULE_INFO> values) {
        ensureInfosIsMutable();
        super.addAll(values, infos_);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder clearInfos() {
        infos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .PROTO_MATCH.MATCH_SCEDULE_INFO infos = 1;</code>
       *
       * <pre>
       *进度
       * </pre>
       */
      public Builder removeInfos(int index) {
        ensureInfosIsMutable();
        infos_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_MATCH_SCHEDULE_MSG)
    }

    static {
      defaultInstance = new STC_MATCH_SCHEDULE_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_MATCH_SCHEDULE_MSG)
  }

  public interface STC_ONLY_QUIT_TEAM_MSGOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int32 flag = 1;
    /**
     * <code>optional int32 flag = 1;</code>
     *
     * <pre>
     *占位
     * </pre>
     */
    boolean hasFlag();
    /**
     * <code>optional int32 flag = 1;</code>
     *
     * <pre>
     *占位
     * </pre>
     */
    int getFlag();
  }
  /**
   * Protobuf type {@code PROTO_MATCH.STC_ONLY_QUIT_TEAM_MSG}
   *
   * <pre>
   *只是退出 ，为了清除客户端队伍信息，临时方案
   * </pre>
   */
  public static final class STC_ONLY_QUIT_TEAM_MSG extends
      com.google.protobuf.GeneratedMessageLite
      implements STC_ONLY_QUIT_TEAM_MSGOrBuilder {
    // Use STC_ONLY_QUIT_TEAM_MSG.newBuilder() to construct.
    private STC_ONLY_QUIT_TEAM_MSG(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private STC_ONLY_QUIT_TEAM_MSG(boolean noInit) {}

    private static final STC_ONLY_QUIT_TEAM_MSG defaultInstance;
    public static STC_ONLY_QUIT_TEAM_MSG getDefaultInstance() {
      return defaultInstance;
    }

    public STC_ONLY_QUIT_TEAM_MSG getDefaultInstanceForType() {
      return defaultInstance;
    }

    private STC_ONLY_QUIT_TEAM_MSG(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              flag_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<STC_ONLY_QUIT_TEAM_MSG> PARSER =
        new com.google.protobuf.AbstractParser<STC_ONLY_QUIT_TEAM_MSG>() {
      public STC_ONLY_QUIT_TEAM_MSG parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new STC_ONLY_QUIT_TEAM_MSG(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<STC_ONLY_QUIT_TEAM_MSG> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 flag = 1;
    public static final int FLAG_FIELD_NUMBER = 1;
    private int flag_;
    /**
     * <code>optional int32 flag = 1;</code>
     *
     * <pre>
     *占位
     * </pre>
     */
    public boolean hasFlag() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 flag = 1;</code>
     *
     * <pre>
     *占位
     * </pre>
     */
    public int getFlag() {
      return flag_;
    }

    private void initFields() {
      flag_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, flag_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, flag_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code PROTO_MATCH.STC_ONLY_QUIT_TEAM_MSG}
     *
     * <pre>
     *只是退出 ，为了清除客户端队伍信息，临时方案
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG, Builder>
        implements com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSGOrBuilder {
      // Construct using com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        flag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG getDefaultInstanceForType() {
        return com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG.getDefaultInstance();
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG build() {
        com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG buildPartial() {
        com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG result = new com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.flag_ = flag_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG other) {
        if (other == com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG.getDefaultInstance()) return this;
        if (other.hasFlag()) {
          setFlag(other.getFlag());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ourpalm.tank.message.MATCH_MSG.STC_ONLY_QUIT_TEAM_MSG) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 flag = 1;
      private int flag_ ;
      /**
       * <code>optional int32 flag = 1;</code>
       *
       * <pre>
       *占位
       * </pre>
       */
      public boolean hasFlag() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 flag = 1;</code>
       *
       * <pre>
       *占位
       * </pre>
       */
      public int getFlag() {
        return flag_;
      }
      /**
       * <code>optional int32 flag = 1;</code>
       *
       * <pre>
       *占位
       * </pre>
       */
      public Builder setFlag(int value) {
        bitField0_ |= 0x00000001;
        flag_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 flag = 1;</code>
       *
       * <pre>
       *占位
       * </pre>
       */
      public Builder clearFlag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        flag_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PROTO_MATCH.STC_ONLY_QUIT_TEAM_MSG)
    }

    static {
      defaultInstance = new STC_ONLY_QUIT_TEAM_MSG(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PROTO_MATCH.STC_ONLY_QUIT_TEAM_MSG)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
